

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Fri Jul 29 10:12:45 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  0105                     	;# 
   369  0107                     	;# 
   370  0108                     	;# 
   371  0109                     	;# 
   372  010C                     	;# 
   373  010C                     	;# 
   374  010D                     	;# 
   375  010E                     	;# 
   376  010F                     	;# 
   377  0185                     	;# 
   378  0187                     	;# 
   379  0188                     	;# 
   380  0189                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383  0000                     	;# 
   384  0001                     	;# 
   385  0002                     	;# 
   386  0003                     	;# 
   387  0004                     	;# 
   388  0005                     	;# 
   389  0006                     	;# 
   390  0007                     	;# 
   391  0008                     	;# 
   392  0009                     	;# 
   393  000A                     	;# 
   394  000B                     	;# 
   395  000C                     	;# 
   396  000D                     	;# 
   397  000E                     	;# 
   398  000E                     	;# 
   399  000F                     	;# 
   400  0010                     	;# 
   401  0011                     	;# 
   402  0012                     	;# 
   403  0013                     	;# 
   404  0014                     	;# 
   405  0015                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0017                     	;# 
   409  0018                     	;# 
   410  0019                     	;# 
   411  001A                     	;# 
   412  001B                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  001D                     	;# 
   416  001E                     	;# 
   417  001F                     	;# 
   418  0081                     	;# 
   419  0085                     	;# 
   420  0086                     	;# 
   421  0087                     	;# 
   422  0088                     	;# 
   423  0089                     	;# 
   424  008C                     	;# 
   425  008D                     	;# 
   426  008E                     	;# 
   427  008F                     	;# 
   428  0090                     	;# 
   429  0091                     	;# 
   430  0092                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0094                     	;# 
   435  0095                     	;# 
   436  0096                     	;# 
   437  0097                     	;# 
   438  0098                     	;# 
   439  0099                     	;# 
   440  009A                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  009F                     	;# 
   446  0105                     	;# 
   447  0107                     	;# 
   448  0108                     	;# 
   449  0109                     	;# 
   450  010C                     	;# 
   451  010C                     	;# 
   452  010D                     	;# 
   453  010E                     	;# 
   454  010F                     	;# 
   455  0185                     	;# 
   456  0187                     	;# 
   457  0188                     	;# 
   458  0189                     	;# 
   459  018C                     	;# 
   460  018D                     	;# 
   461  000B                     _INTCONbits	set	11
   462  0007                     _PORTC	set	7
   463  0005                     _PORTA	set	5
   464  0007                     _PORTCbits	set	7
   465  0008                     _PORTD	set	8
   466  001E                     _ADRESH	set	30
   467  000C                     _PIR1bits	set	12
   468  001F                     _ADCON0bits	set	31
   469  003F                     _RC7	set	63
   470  008F                     _OSCCONbits	set	143
   471  0087                     _TRISC	set	135
   472  0088                     _TRISD	set	136
   473  0085                     _TRISA	set	133
   474  009E                     _ADRESL	set	158
   475  008C                     _PIE1bits	set	140
   476  009F                     _ADCON1bits	set	159
   477  0189                     _ANSELH	set	393
   478  0188                     _ANSEL	set	392
   479                           
   480                           	psect	strings
   481  0800                     __pstrings:
   482  0800                     stringtab:
   483  0800                     __stringtab:
   484  0800                     stringcode:	
   485                           ;	String table - string pointers are 1 byte each
   486                           
   487  0800                     stringdir:
   488  0800  3008               	movlw	high stringdir
   489  0801  008A               	movwf	10
   490  0802  0804               	movf	4,w
   491  0803  0A84               	incf	4,f
   492  0804  0782               	addwf	2,f
   493  0805                     __stringbase:
   494  0805  3400               	retlw	0
   495  0806                     __end_of__stringtab:
   496  0806                     STR_1:
   497  0806  3420               	retlw	32	;' '
   498  0807  3420               	retlw	32	;' '
   499  0808  3453               	retlw	83	;'S'
   500  0809  3431               	retlw	49	;'1'
   501  080A  3420               	retlw	32	;' '
   502  080B  3420               	retlw	32	;' '
   503  080C  3420               	retlw	32	;' '
   504  080D  3420               	retlw	32	;' '
   505  080E  3420               	retlw	32	;' '
   506  080F  3420               	retlw	32	;' '
   507  0810  3420               	retlw	32	;' '
   508  0811  3420               	retlw	32	;' '
   509  0812  3453               	retlw	83	;'S'
   510  0813  3432               	retlw	50	;'2'
   511  0814  3400               	retlw	0
   512  0815                     STR_2:
   513  0815  3420               	retlw	32	;' '
   514  0816  3400               	retlw	0
   515  0815                     
   516                           	psect	cinit
   517  0013                     start_initialization:	
   518                           ; #config settings
   519                           
   520  0013                     __initialization:
   521                           
   522                           ; Clear objects allocated to BANK0
   523  0013  1283               	bcf	3,5	;RP0=0, select bank0
   524  0014  1303               	bcf	3,6	;RP1=0, select bank0
   525  0015  01CD               	clrf	__pbssBANK0& (0+127)
   526  0016  01CE               	clrf	(__pbssBANK0+1)& (0+127)
   527  0017  01CF               	clrf	(__pbssBANK0+2)& (0+127)
   528  0018  01D0               	clrf	(__pbssBANK0+3)& (0+127)
   529  0019  01D1               	clrf	(__pbssBANK0+4)& (0+127)
   530  001A  01D2               	clrf	(__pbssBANK0+5)& (0+127)
   531  001B  01D3               	clrf	(__pbssBANK0+6)& (0+127)
   532                           
   533                           ; Clear objects allocated to BANK1
   534  001C  1683               	bsf	3,5	;RP0=1, select bank1
   535  001D  1303               	bcf	3,6	;RP1=0, select bank1
   536  001E  01B2               	clrf	__pbssBANK1& (0+127)
   537  001F  01B3               	clrf	(__pbssBANK1+1)& (0+127)
   538  0020  01B4               	clrf	(__pbssBANK1+2)& (0+127)
   539  0021  01B5               	clrf	(__pbssBANK1+3)& (0+127)
   540  0022  01B6               	clrf	(__pbssBANK1+4)& (0+127)
   541  0023  01B7               	clrf	(__pbssBANK1+5)& (0+127)
   542  0024  01B8               	clrf	(__pbssBANK1+6)& (0+127)
   543  0025  01B9               	clrf	(__pbssBANK1+7)& (0+127)
   544  0026                     end_of_initialization:	
   545                           ;End of C runtime variable initialization code
   546                           
   547  0026                     __end_of__initialization:
   548  0026  0183               	clrf	3
   549  0027  120A  118A  2B8B   	ljmp	_main	;jump to C main() function
   550                           
   551                           	psect	bssBANK0
   552  004D                     __pbssBANK0:
   553  004D                     _ADC_channel_01:
   554  004D                     	ds	2
   555  004F                     _ADC_channel_00:
   556  004F                     	ds	2
   557  0051                     _ADC_lecture_val:
   558  0051                     	ds	2
   559  0053                     _ADC_channel_flag:
   560  0053                     	ds	1
   561                           
   562                           	psect	bssBANK1
   563  00B2                     __pbssBANK1:
   564  00B2                     _Digits_Voltage2:
   565  00B2                     	ds	4
   566  00B6                     _Digits_Voltage1:
   567  00B6                     	ds	4
   568                           
   569                           	psect	cstackBANK1
   570  00A0                     __pcstackBANK1:
   571  00A0                     ??_init_osc_MHz:
   572  00A0                     ?_init_ADC:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  00A0                     ??_ADC_start:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  00A0                     ??_Lcd_Port:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  00A0                     ?___awdiv:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  00A0                     ?___awmod:	
   585                           ; 2 bytes @ 0x0
   586                           
   587  00A0                     init_ADC@vref_plus:	
   588                           ; 2 bytes @ 0x0
   589                           
   590  00A0                     Lcd_Port@a:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  00A0                     ___awdiv@divisor:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  00A0                     ___awmod@divisor:	
   597                           ; 2 bytes @ 0x0
   598                           
   599                           
   600                           ; 2 bytes @ 0x0
   601  00A0                     	ds	1
   602  00A1                     ??_Lcd_Cmd:
   603  00A1                     ??_Lcd_Write_Char:	
   604                           ; 1 bytes @ 0x1
   605                           
   606  00A1                     init_ADC@vref_minus:	
   607                           ; 1 bytes @ 0x1
   608                           
   609                           
   610                           ; 1 bytes @ 0x1
   611  00A1                     	ds	1
   612  00A2                     ??_init_ADC:
   613  00A2                     ADC_start@channel:	
   614                           ; 1 bytes @ 0x2
   615                           
   616  00A2                     Lcd_Write_Char@a:	
   617                           ; 1 bytes @ 0x2
   618                           
   619  00A2                     init_osc_MHz@freq:	
   620                           ; 1 bytes @ 0x2
   621                           
   622  00A2                     ___awdiv@dividend:	
   623                           ; 1 bytes @ 0x2
   624                           
   625  00A2                     ___awmod@dividend:	
   626                           ; 2 bytes @ 0x2
   627                           
   628                           
   629                           ; 2 bytes @ 0x2
   630  00A2                     	ds	1
   631  00A3                     ??_Lcd_Write_String:
   632  00A3                     Lcd_Cmd@a:	
   633                           ; 1 bytes @ 0x3
   634                           
   635  00A3                     Lcd_Write_String@i:	
   636                           ; 1 bytes @ 0x3
   637                           
   638                           
   639                           ; 2 bytes @ 0x3
   640  00A3                     	ds	1
   641  00A4                     ?_Lcd_Set_Cursor:
   642  00A4                     ??_Lcd_Init:	
   643                           ; 1 bytes @ 0x4
   644                           
   645  00A4                     ??___awdiv:	
   646                           ; 1 bytes @ 0x4
   647                           
   648  00A4                     ??___awmod:	
   649                           ; 1 bytes @ 0x4
   650                           
   651  00A4                     init_ADC@adc_cs:	
   652                           ; 1 bytes @ 0x4
   653                           
   654  00A4                     Lcd_Set_Cursor@b:	
   655                           ; 1 bytes @ 0x4
   656                           
   657                           
   658                           ; 1 bytes @ 0x4
   659  00A4                     	ds	1
   660  00A5                     ??_Lcd_Set_Cursor:
   661  00A5                     Lcd_Write_String@a:	
   662                           ; 1 bytes @ 0x5
   663                           
   664  00A5                     ___awdiv@counter:	
   665                           ; 1 bytes @ 0x5
   666                           
   667  00A5                     ___awmod@counter:	
   668                           ; 1 bytes @ 0x5
   669                           
   670                           
   671                           ; 1 bytes @ 0x5
   672  00A5                     	ds	1
   673  00A6                     ??_setup:
   674  00A6                     Lcd_Set_Cursor@a:	
   675                           ; 1 bytes @ 0x6
   676                           
   677  00A6                     ___awdiv@sign:	
   678                           ; 1 bytes @ 0x6
   679                           
   680  00A6                     ___awmod@sign:	
   681                           ; 1 bytes @ 0x6
   682                           
   683                           
   684                           ; 1 bytes @ 0x6
   685  00A6                     	ds	1
   686  00A7                     Lcd_Set_Cursor@temp:
   687  00A7                     ___awdiv@quotient:	
   688                           ; 1 bytes @ 0x7
   689                           
   690                           
   691                           ; 2 bytes @ 0x7
   692  00A7                     	ds	2
   693  00A9                     ?_Voltage_val:
   694  00A9                     Voltage_val@ADC_val:	
   695                           ; 1 bytes @ 0x9
   696                           
   697                           
   698                           ; 2 bytes @ 0x9
   699  00A9                     	ds	2
   700  00AB                     Voltage_val@channel:
   701                           
   702                           ; 2 bytes @ 0xB
   703  00AB                     	ds	2
   704  00AD                     ??_Voltage_val:
   705                           
   706                           ; 1 bytes @ 0xD
   707  00AD                     	ds	3
   708  00B0                     ??_main:
   709                           
   710                           ; 1 bytes @ 0x10
   711  00B0                     	ds	2
   712                           
   713                           	psect	cstackCOMMON
   714  0070                     __pcstackCOMMON:
   715  0070                     ?_setup:
   716  0070                     ?_init_osc_MHz:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_ADC_start:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_Lcd_Port:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_Lcd_Cmd:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_Lcd_Init:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_Lcd_Write_Char:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_Lcd_Write_String:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_isr:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?_main:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?__Umul8_16:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ?_ADC_read:	
   747                           ; 2 bytes @ 0x0
   748                           
   749  0070                     ?___xxtofl:	
   750                           ; 2 bytes @ 0x0
   751                           
   752  0070                     __Umul8_16@multiplicand:	
   753                           ; 4 bytes @ 0x0
   754                           
   755  0070                     ___xxtofl@val:	
   756                           ; 1 bytes @ 0x0
   757                           
   758                           
   759                           ; 4 bytes @ 0x0
   760  0070                     	ds	2
   761  0072                     ??__Umul8_16:
   762  0072                     ??_ADC_read:	
   763                           ; 1 bytes @ 0x2
   764                           
   765                           
   766                           ; 1 bytes @ 0x2
   767  0072                     	ds	2
   768  0074                     ??___xxtofl:
   769  0074                     ADC_read@read:	
   770                           ; 1 bytes @ 0x4
   771                           
   772  0074                     __Umul8_16@product:	
   773                           ; 2 bytes @ 0x4
   774                           
   775                           
   776                           ; 2 bytes @ 0x4
   777  0074                     	ds	2
   778  0076                     __Umul8_16@word_mpld:
   779                           
   780                           ; 2 bytes @ 0x6
   781  0076                     	ds	2
   782  0078                     __Umul8_16@multiplier:
   783  0078                     ___xxtofl@sign:	
   784                           ; 1 bytes @ 0x8
   785                           
   786                           
   787                           ; 1 bytes @ 0x8
   788  0078                     	ds	1
   789  0079                     ___xxtofl@exp:
   790                           
   791                           ; 1 bytes @ 0x9
   792  0079                     	ds	1
   793  007A                     ___xxtofl@arg:
   794                           
   795                           ; 4 bytes @ 0xA
   796  007A                     	ds	4
   797                           
   798                           	psect	cstackBANK0
   799  0020                     __pcstackBANK0:
   800  0020                     ?___flmul:
   801  0020                     ___flmul@b:	
   802                           ; 4 bytes @ 0x0
   803                           
   804                           
   805                           ; 4 bytes @ 0x0
   806  0020                     	ds	4
   807  0024                     ___flmul@a:
   808                           
   809                           ; 4 bytes @ 0x4
   810  0024                     	ds	4
   811  0028                     ??___flmul:
   812                           
   813                           ; 1 bytes @ 0x8
   814  0028                     	ds	5
   815  002D                     ___flmul@sign:
   816                           
   817                           ; 1 bytes @ 0xD
   818  002D                     	ds	1
   819  002E                     ___flmul@grs:
   820                           
   821                           ; 4 bytes @ 0xE
   822  002E                     	ds	4
   823  0032                     ___flmul@aexp:
   824                           
   825                           ; 1 bytes @ 0x12
   826  0032                     	ds	1
   827  0033                     ___flmul@bexp:
   828                           
   829                           ; 1 bytes @ 0x13
   830  0033                     	ds	1
   831  0034                     ___flmul@prod:
   832                           
   833                           ; 4 bytes @ 0x14
   834  0034                     	ds	4
   835  0038                     ___flmul@temp:
   836                           
   837                           ; 2 bytes @ 0x18
   838  0038                     	ds	2
   839  003A                     ?___fltol:
   840  003A                     ___fltol@f1:	
   841                           ; 4 bytes @ 0x1A
   842                           
   843                           
   844                           ; 4 bytes @ 0x1A
   845  003A                     	ds	4
   846  003E                     ??___fltol:
   847                           
   848                           ; 1 bytes @ 0x1E
   849  003E                     	ds	5
   850  0043                     ___fltol@sign1:
   851                           
   852                           ; 1 bytes @ 0x23
   853  0043                     	ds	1
   854  0044                     ___fltol@exp1:
   855                           
   856                           ; 1 bytes @ 0x24
   857  0044                     	ds	1
   858  0045                     ??_isr:
   859                           
   860                           ; 1 bytes @ 0x25
   861  0045                     	ds	4
   862  0049                     _isr$1002:
   863                           
   864                           ; 4 bytes @ 0x29
   865  0049                     	ds	4
   866                           
   867                           	psect	maintext
   868  038B                     __pmaintext:	
   869 ;;
   870 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   871 ;;
   872 ;; *************** function _main *****************
   873 ;; Defined at:
   874 ;;		line 76 in file "main_02.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   883 ;; Tracked objects:
   884 ;;		On entry : B00/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   888 ;;      Params:         0       0       0       0       0
   889 ;;      Locals:         0       0       0       0       0
   890 ;;      Temps:          0       0       2       0       0
   891 ;;      Totals:         0       0       2       0       0
   892 ;;Total ram usage:        2 bytes
   893 ;; Hardware stack levels required when called: 7
   894 ;; This function calls:
   895 ;;		_ADC_start
   896 ;;		_Lcd_Set_Cursor
   897 ;;		_Lcd_Write_Char
   898 ;;		_Lcd_Write_String
   899 ;;		_Voltage_val
   900 ;;		_setup
   901 ;; This function is called by:
   902 ;;		Startup code after reset
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906  038B                     _main:	
   907                           ;psect for function _main
   908                           
   909  038B                     l2030:	
   910                           ;incstack = 0
   911                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   912                           
   913                           
   914                           ;main_02.c: 78:     setup();
   915  038B  120A  158A  261D  120A  118A  	fcall	_setup
   916  0390                     l2032:
   917                           
   918                           ;main_02.c: 79:     Lcd_Set_Cursor(1,1);
   919  0390  1683               	bsf	3,5	;RP0=1, select bank1
   920  0391  1303               	bcf	3,6	;RP1=0, select bank1
   921  0392  01A4               	clrf	Lcd_Set_Cursor@b^(0+128)
   922  0393  0AA4               	incf	Lcd_Set_Cursor@b^(0+128),f
   923  0394  3001               	movlw	1
   924  0395  120A  158A  25A7  120A  118A  	fcall	_Lcd_Set_Cursor
   925  039A                     l2034:
   926                           
   927                           ;main_02.c: 80:     Lcd_Write_String("  S1        S2");
   928  039A  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   929  039B  120A  158A  25F4  120A  118A  	fcall	_Lcd_Write_String
   930  03A0                     l2036:
   931                           
   932                           ;main_02.c: 83:     {;main_02.c: 85:         ADC_start(0);
   933  03A0  3000               	movlw	0
   934  03A1  120A  118A  26BD  120A  118A  	fcall	_ADC_start
   935  03A6                     l2038:
   936                           
   937                           ;main_02.c: 86:         _delay((unsigned long)((20)*(8000000/4000.0)));
   938  03A6  3034               	movlw	52
   939  03A7  1683               	bsf	3,5	;RP0=1, select bank1
   940  03A8  1303               	bcf	3,6	;RP1=0, select bank1
   941  03A9  00B1               	movwf	(??_main^(0+128)+1)
   942  03AA  30F1               	movlw	241
   943  03AB  00B0               	movwf	??_main^(0+128)
   944  03AC                     u1837:
   945  03AC  0BB0               	decfsz	??_main^(0+128),f
   946  03AD  2BAC               	goto	u1837
   947  03AE  0BB1               	decfsz	(??_main^(0+128)+1),f
   948  03AF  2BAC               	goto	u1837
   949  03B0                     l2040:
   950                           
   951                           ;main_02.c: 87:         ADC_start(1);
   952  03B0  3001               	movlw	1
   953  03B1  120A  118A  26BD  120A  118A  	fcall	_ADC_start
   954  03B6                     l2042:
   955                           
   956                           ;main_02.c: 89:         _delay((unsigned long)((20)*(8000000/4000.0)));
   957  03B6  3034               	movlw	52
   958  03B7  1683               	bsf	3,5	;RP0=1, select bank1
   959  03B8  1303               	bcf	3,6	;RP1=0, select bank1
   960  03B9  00B1               	movwf	(??_main^(0+128)+1)
   961  03BA  30F1               	movlw	241
   962  03BB  00B0               	movwf	??_main^(0+128)
   963  03BC                     u1847:
   964  03BC  0BB0               	decfsz	??_main^(0+128),f
   965  03BD  2BBC               	goto	u1847
   966  03BE  0BB1               	decfsz	(??_main^(0+128)+1),f
   967  03BF  2BBC               	goto	u1847
   968                           
   969                           ;main_02.c: 91:         Voltage_val (ADC_channel_00, 1);
   970  03C0  1283               	bcf	3,5	;RP0=0, select bank0
   971  03C1  1303               	bcf	3,6	;RP1=0, select bank0
   972  03C2  0850               	movf	_ADC_channel_00+1,w
   973  03C3  1683               	bsf	3,5	;RP0=1, select bank1
   974  03C4  1303               	bcf	3,6	;RP1=0, select bank1
   975  03C5  00AA               	movwf	(Voltage_val@ADC_val+1)^(0+128)
   976  03C6  1283               	bcf	3,5	;RP0=0, select bank0
   977  03C7  1303               	bcf	3,6	;RP1=0, select bank0
   978  03C8  084F               	movf	_ADC_channel_00,w
   979  03C9  1683               	bsf	3,5	;RP0=1, select bank1
   980  03CA  1303               	bcf	3,6	;RP1=0, select bank1
   981  03CB  00A9               	movwf	Voltage_val@ADC_val^(0+128)
   982  03CC  3001               	movlw	1
   983  03CD  00AB               	movwf	Voltage_val@channel^(0+128)
   984  03CE  3000               	movlw	0
   985  03CF  00AC               	movwf	(Voltage_val@channel^(0+128)+1)
   986  03D0  120A  118A  2546  120A  118A  	fcall	_Voltage_val
   987                           
   988                           ;main_02.c: 92:         Voltage_val (ADC_channel_01, 2);
   989  03D5  1283               	bcf	3,5	;RP0=0, select bank0
   990  03D6  1303               	bcf	3,6	;RP1=0, select bank0
   991  03D7  084E               	movf	_ADC_channel_01+1,w
   992  03D8  1683               	bsf	3,5	;RP0=1, select bank1
   993  03D9  1303               	bcf	3,6	;RP1=0, select bank1
   994  03DA  00AA               	movwf	(Voltage_val@ADC_val+1)^(0+128)
   995  03DB  1283               	bcf	3,5	;RP0=0, select bank0
   996  03DC  1303               	bcf	3,6	;RP1=0, select bank0
   997  03DD  084D               	movf	_ADC_channel_01,w
   998  03DE  1683               	bsf	3,5	;RP0=1, select bank1
   999  03DF  1303               	bcf	3,6	;RP1=0, select bank1
  1000  03E0  00A9               	movwf	Voltage_val@ADC_val^(0+128)
  1001  03E1  3002               	movlw	2
  1002  03E2  00AB               	movwf	Voltage_val@channel^(0+128)
  1003  03E3  3000               	movlw	0
  1004  03E4  00AC               	movwf	(Voltage_val@channel^(0+128)+1)
  1005  03E5  120A  118A  2546  120A  118A  	fcall	_Voltage_val
  1006                           
  1007                           ;main_02.c: 94:         Lcd_Set_Cursor(2,1);
  1008  03EA  1683               	bsf	3,5	;RP0=1, select bank1
  1009  03EB  1303               	bcf	3,6	;RP1=0, select bank1
  1010  03EC  01A4               	clrf	Lcd_Set_Cursor@b^(0+128)
  1011  03ED  0AA4               	incf	Lcd_Set_Cursor@b^(0+128),f
  1012  03EE  3002               	movlw	2
  1013  03EF  120A  158A  25A7  120A  118A  	fcall	_Lcd_Set_Cursor
  1014  03F4                     l2044:
  1015                           
  1016                           ;main_02.c: 96:         Lcd_Write_String(" ");
  1017  03F4  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1018  03F5  120A  158A  25F4  120A  118A  	fcall	_Lcd_Write_String
  1019  03FA                     l2046:
  1020                           
  1021                           ;main_02.c: 97:         Lcd_Write_Char(Digits_Voltage1 [0] + 48);
  1022  03FA  1683               	bsf	3,5	;RP0=1, select bank1
  1023  03FB  1303               	bcf	3,6	;RP1=0, select bank1
  1024  03FC  0836               	movf	_Digits_Voltage1^(0+128),w
  1025  03FD  3E30               	addlw	48
  1026  03FE  120A  158A  256D  120A  118A  	fcall	_Lcd_Write_Char
  1027  0403                     l2048:
  1028                           
  1029                           ;main_02.c: 98:         Lcd_Write_Char(46);
  1030  0403  302E               	movlw	46
  1031  0404  120A  158A  256D  120A  118A  	fcall	_Lcd_Write_Char
  1032  0409                     l2050:
  1033                           
  1034                           ;main_02.c: 99:         Lcd_Write_Char(Digits_Voltage1 [1] + 48);
  1035  0409  1683               	bsf	3,5	;RP0=1, select bank1
  1036  040A  1303               	bcf	3,6	;RP1=0, select bank1
  1037  040B  0837               	movf	(_Digits_Voltage1^(0+128)+1),w
  1038  040C  3E30               	addlw	48
  1039  040D  120A  158A  256D  120A  118A  	fcall	_Lcd_Write_Char
  1040  0412                     l2052:
  1041                           
  1042                           ;main_02.c: 100:         Lcd_Write_Char(Digits_Voltage1 [2] + 48);
  1043  0412  1683               	bsf	3,5	;RP0=1, select bank1
  1044  0413  1303               	bcf	3,6	;RP1=0, select bank1
  1045  0414  0838               	movf	(_Digits_Voltage1^(0+128)+2),w
  1046  0415  3E30               	addlw	48
  1047  0416  120A  158A  256D  120A  118A  	fcall	_Lcd_Write_Char
  1048  041B                     l2054:
  1049                           
  1050                           ;main_02.c: 101:         Lcd_Write_Char(86);
  1051  041B  3056               	movlw	86
  1052  041C  120A  158A  256D  120A  118A  	fcall	_Lcd_Write_Char
  1053                           
  1054                           ;main_02.c: 103:         Lcd_Write_String(" ");
  1055  0421  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1056  0422  120A  158A  25F4  120A  118A  	fcall	_Lcd_Write_String
  1057                           
  1058                           ;main_02.c: 104:         Lcd_Write_String(" ");
  1059  0427  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1060  0428  120A  158A  25F4  120A  118A  	fcall	_Lcd_Write_String
  1061                           
  1062                           ;main_02.c: 105:         Lcd_Write_String(" ");
  1063  042D  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1064  042E  120A  158A  25F4  120A  118A  	fcall	_Lcd_Write_String
  1065                           
  1066                           ;main_02.c: 106:         Lcd_Write_String(" ");
  1067  0433  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1068  0434  120A  158A  25F4  120A  118A  	fcall	_Lcd_Write_String
  1069  0439                     l2056:
  1070                           
  1071                           ;main_02.c: 109:         Lcd_Write_Char(Digits_Voltage2 [0] + 48);
  1072  0439  1683               	bsf	3,5	;RP0=1, select bank1
  1073  043A  1303               	bcf	3,6	;RP1=0, select bank1
  1074  043B  0832               	movf	_Digits_Voltage2^(0+128),w
  1075  043C  3E30               	addlw	48
  1076  043D  120A  158A  256D  120A  118A  	fcall	_Lcd_Write_Char
  1077  0442                     l2058:
  1078                           
  1079                           ;main_02.c: 110:         Lcd_Write_Char(46);
  1080  0442  302E               	movlw	46
  1081  0443  120A  158A  256D  120A  118A  	fcall	_Lcd_Write_Char
  1082  0448                     l2060:
  1083                           
  1084                           ;main_02.c: 111:         Lcd_Write_Char(Digits_Voltage2 [1] + 48);
  1085  0448  1683               	bsf	3,5	;RP0=1, select bank1
  1086  0449  1303               	bcf	3,6	;RP1=0, select bank1
  1087  044A  0833               	movf	(_Digits_Voltage2^(0+128)+1),w
  1088  044B  3E30               	addlw	48
  1089  044C  120A  158A  256D  120A  118A  	fcall	_Lcd_Write_Char
  1090  0451                     l2062:
  1091                           
  1092                           ;main_02.c: 112:         Lcd_Write_Char(Digits_Voltage2 [2] + 48);
  1093  0451  1683               	bsf	3,5	;RP0=1, select bank1
  1094  0452  1303               	bcf	3,6	;RP1=0, select bank1
  1095  0453  0834               	movf	(_Digits_Voltage2^(0+128)+2),w
  1096  0454  3E30               	addlw	48
  1097  0455  120A  158A  256D  120A  118A  	fcall	_Lcd_Write_Char
  1098  045A                     l2064:
  1099                           
  1100                           ;main_02.c: 113:         Lcd_Write_Char(86);
  1101  045A  3056               	movlw	86
  1102  045B  120A  158A  256D  120A  118A  	fcall	_Lcd_Write_Char
  1103  0460                     l2066:
  1104                           
  1105                           ;main_02.c: 114:         Lcd_Write_String(" ");
  1106  0460  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1107  0461  120A  158A  25F4  120A  118A  	fcall	_Lcd_Write_String
  1108  0466  2BA0               	goto	l2036
  1109  0467  120A  118A  2810   	ljmp	start
  1110  046A                     __end_of_main:
  1111                           
  1112                           	psect	text1
  1113  0E1D                     __ptext1:	
  1114 ;; *************** function _setup *****************
  1115 ;; Defined at:
  1116 ;;		line 123 in file "main_02.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;		None
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;		None
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      void 
  1123 ;; Registers used:
  1124 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1130 ;;      Params:         0       0       0       0       0
  1131 ;;      Locals:         0       0       0       0       0
  1132 ;;      Temps:          0       0       0       0       0
  1133 ;;      Totals:         0       0       0       0       0
  1134 ;;Total ram usage:        0 bytes
  1135 ;; Hardware stack levels used: 1
  1136 ;; Hardware stack levels required when called: 6
  1137 ;; This function calls:
  1138 ;;		_Lcd_Init
  1139 ;;		_init_ADC
  1140 ;;		_init_osc_MHz
  1141 ;; This function is called by:
  1142 ;;		_main
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146  0E1D                     _setup:	
  1147                           ;psect for function _setup
  1148                           
  1149  0E1D                     l1754:	
  1150                           ;incstack = 0
  1151                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1152                           
  1153                           
  1154                           ;main_02.c: 125:     TRISA = 0b00000011;
  1155  0E1D  3003               	movlw	3
  1156  0E1E  1683               	bsf	3,5	;RP0=1, select bank1
  1157  0E1F  1303               	bcf	3,6	;RP1=0, select bank1
  1158  0E20  0085               	movwf	5	;volatile
  1159  0E21                     l1756:
  1160                           
  1161                           ;main_02.c: 126:     PORTA = 0;
  1162  0E21  1283               	bcf	3,5	;RP0=0, select bank0
  1163  0E22  1303               	bcf	3,6	;RP1=0, select bank0
  1164  0E23  0185               	clrf	5	;volatile
  1165  0E24                     l1758:
  1166                           
  1167                           ;main_02.c: 128:     ANSEL = 0b00000011;
  1168  0E24  3003               	movlw	3
  1169  0E25  1683               	bsf	3,5	;RP0=1, select bank3
  1170  0E26  1703               	bsf	3,6	;RP1=1, select bank3
  1171  0E27  0088               	movwf	8	;volatile
  1172                           
  1173                           ;main_02.c: 129:     ANSELH = 0;
  1174  0E28  0189               	clrf	9	;volatile
  1175                           
  1176                           ;main_02.c: 131:     TRISD = 0;
  1177  0E29  1683               	bsf	3,5	;RP0=1, select bank1
  1178  0E2A  1303               	bcf	3,6	;RP1=0, select bank1
  1179  0E2B  0188               	clrf	8	;volatile
  1180                           
  1181                           ;main_02.c: 132:     PORTD = 0;
  1182  0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  1183  0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  1184  0E2E  0188               	clrf	8	;volatile
  1185                           
  1186                           ;main_02.c: 134:     TRISC = 0;
  1187  0E2F  1683               	bsf	3,5	;RP0=1, select bank1
  1188  0E30  1303               	bcf	3,6	;RP1=0, select bank1
  1189  0E31  0187               	clrf	7	;volatile
  1190                           
  1191                           ;main_02.c: 135:     PORTC = 0;
  1192  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  1193  0E33  1303               	bcf	3,6	;RP1=0, select bank0
  1194  0E34  0187               	clrf	7	;volatile
  1195  0E35                     l1760:
  1196                           
  1197                           ;main_02.c: 138:     init_osc_MHz (8);
  1198  0E35  3008               	movlw	8
  1199  0E36  120A  158A  264D  120A  158A  	fcall	_init_osc_MHz
  1200  0E3B                     l1762:
  1201                           
  1202                           ;main_02.c: 141:     init_ADC (8,0,0);
  1203  0E3B  1683               	bsf	3,5	;RP0=1, select bank1
  1204  0E3C  1303               	bcf	3,6	;RP1=0, select bank1
  1205  0E3D  01A0               	clrf	init_ADC@vref_plus^(0+128)
  1206  0E3E  01A1               	clrf	init_ADC@vref_minus^(0+128)
  1207  0E3F  3008               	movlw	8
  1208  0E40  120A  158A  2790  120A  158A  	fcall	_init_ADC
  1209  0E45                     l1764:
  1210                           
  1211                           ;main_02.c: 144:     Lcd_Init();
  1212  0E45  120A  158A  2680  120A  158A  	fcall	_Lcd_Init
  1213  0E4A                     l1766:
  1214                           
  1215                           ;main_02.c: 147:     INTCONbits.PEIE = 1;
  1216  0E4A  170B               	bsf	11,6	;volatile
  1217  0E4B                     l1768:
  1218                           
  1219                           ;main_02.c: 148:     INTCONbits.GIE = 1;
  1220  0E4B  178B               	bsf	11,7	;volatile
  1221  0E4C                     l172:
  1222  0E4C  0008               	return
  1223  0E4D                     __end_of_setup:
  1224                           
  1225                           	psect	text2
  1226  0E4D                     __ptext2:	
  1227 ;; *************** function _init_osc_MHz *****************
  1228 ;; Defined at:
  1229 ;;		line 21 in file "Osc_Config.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  freq            1    wreg     unsigned char 
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;  freq            1    2[BANK1 ] unsigned char 
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      void 
  1236 ;; Registers used:
  1237 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1243 ;;      Params:         0       0       0       0       0
  1244 ;;      Locals:         0       0       1       0       0
  1245 ;;      Temps:          0       0       2       0       0
  1246 ;;      Totals:         0       0       3       0       0
  1247 ;;Total ram usage:        3 bytes
  1248 ;; Hardware stack levels used: 1
  1249 ;; Hardware stack levels required when called: 3
  1250 ;; This function calls:
  1251 ;;		Nothing
  1252 ;; This function is called by:
  1253 ;;		_setup
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257  0E4D                     _init_osc_MHz:	
  1258                           ;psect for function _init_osc_MHz
  1259                           
  1260                           
  1261                           ;incstack = 0
  1262                           ; Regs used in _init_osc_MHz: [wreg-fsr0h+status,2+status,0]
  1263                           ;init_osc_MHz@freq stored from wreg
  1264  0E4D  1683               	bsf	3,5	;RP0=1, select bank1
  1265  0E4E  1303               	bcf	3,6	;RP1=0, select bank1
  1266  0E4F  00A2               	movwf	init_osc_MHz@freq^(0+128)
  1267  0E50                     l1564:
  1268                           
  1269                           ;Osc_Config.c: 22:     OSCCONbits.SCS = 1;
  1270  0E50  140F               	bsf	15,0	;volatile
  1271                           
  1272                           ;Osc_Config.c: 24:     switch(freq){
  1273  0E51  2E69               	goto	l1578
  1274  0E52                     l1566:
  1275                           
  1276                           ;Osc_Config.c: 26:             OSCCONbits.IRCF = 0b100;
  1277  0E52  080F               	movf	15,w	;volatile
  1278  0E53  398F               	andlw	-113
  1279  0E54  3840               	iorlw	64
  1280  0E55  008F               	movwf	15	;volatile
  1281                           
  1282                           ;Osc_Config.c: 27:             break;
  1283  0E56  2E7F               	goto	l190
  1284  0E57                     l1568:
  1285                           
  1286                           ;Osc_Config.c: 30:             OSCCONbits.IRCF = 0b101;
  1287  0E57  080F               	movf	15,w	;volatile
  1288  0E58  398F               	andlw	-113
  1289  0E59  3850               	iorlw	80
  1290  0E5A  008F               	movwf	15	;volatile
  1291                           
  1292                           ;Osc_Config.c: 31:             break;
  1293  0E5B  2E7F               	goto	l190
  1294  0E5C                     l1570:
  1295                           
  1296                           ;Osc_Config.c: 34:             OSCCONbits.IRCF = 0b110;
  1297  0E5C  080F               	movf	15,w	;volatile
  1298  0E5D  398F               	andlw	-113
  1299  0E5E  3860               	iorlw	96
  1300  0E5F  008F               	movwf	15	;volatile
  1301                           
  1302                           ;Osc_Config.c: 35:             break;
  1303  0E60  2E7F               	goto	l190
  1304  0E61                     l1572:
  1305                           
  1306                           ;Osc_Config.c: 38:             OSCCONbits.IRCF = 0b111;
  1307  0E61  3070               	movlw	112
  1308  0E62  048F               	iorwf	15,f	;volatile
  1309                           
  1310                           ;Osc_Config.c: 39:             break;
  1311  0E63  2E7F               	goto	l190
  1312  0E64                     l1574:
  1313                           
  1314                           ;Osc_Config.c: 42:             OSCCONbits.IRCF = 0b110;
  1315  0E64  080F               	movf	15,w	;volatile
  1316  0E65  398F               	andlw	-113
  1317  0E66  3860               	iorlw	96
  1318  0E67  008F               	movwf	15	;volatile
  1319                           
  1320                           ;Osc_Config.c: 43:             break;
  1321  0E68  2E7F               	goto	l190
  1322  0E69                     l1578:
  1323  0E69  0822               	movf	init_osc_MHz@freq^(0+128),w
  1324  0E6A  00A0               	movwf	??_init_osc_MHz^(0+128)
  1325  0E6B  01A1               	clrf	(??_init_osc_MHz^(0+128)+1)
  1326                           
  1327                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1328                           ; Switch size 1, requested type "simple"
  1329                           ; Number of cases is 1, Range of values is 0 to 0
  1330                           ; switch strategies available:
  1331                           ; Name         Instructions Cycles
  1332                           ; simple_byte            4     3 (average)
  1333                           ; direct_byte           11     8 (fixed)
  1334                           ; jumptable            260     6 (fixed)
  1335                           ;	Chosen strategy is simple_byte
  1336  0E6C  0821               	movf	(??_init_osc_MHz+1)^(0+128),w
  1337  0E6D  3A00               	xorlw	0	; case 0
  1338  0E6E  1903               	skipnz
  1339  0E6F  2E71               	goto	l2198
  1340  0E70  2E64               	goto	l1574
  1341  0E71                     l2198:
  1342                           
  1343                           ; Switch size 1, requested type "simple"
  1344                           ; Number of cases is 4, Range of values is 1 to 8
  1345                           ; switch strategies available:
  1346                           ; Name         Instructions Cycles
  1347                           ; simple_byte           13     7 (average)
  1348                           ; direct_byte           35    11 (fixed)
  1349                           ; jumptable            263     9 (fixed)
  1350                           ;	Chosen strategy is simple_byte
  1351  0E71  0820               	movf	??_init_osc_MHz^(0+128),w
  1352  0E72  3A01               	xorlw	1	; case 1
  1353  0E73  1903               	skipnz
  1354  0E74  2E52               	goto	l1566
  1355  0E75  3A03               	xorlw	3	; case 2
  1356  0E76  1903               	skipnz
  1357  0E77  2E57               	goto	l1568
  1358  0E78  3A06               	xorlw	6	; case 4
  1359  0E79  1903               	skipnz
  1360  0E7A  2E5C               	goto	l1570
  1361  0E7B  3A0C               	xorlw	12	; case 8
  1362  0E7C  1903               	skipnz
  1363  0E7D  2E61               	goto	l1572
  1364  0E7E  2E64               	goto	l1574
  1365  0E7F                     l190:
  1366  0E7F  0008               	return
  1367  0E80                     __end_of_init_osc_MHz:
  1368                           
  1369                           	psect	text3
  1370  0F90                     __ptext3:	
  1371 ;; *************** function _init_ADC *****************
  1372 ;; Defined at:
  1373 ;;		line 21 in file "ADC.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;  adc_cs          1    wreg     unsigned char 
  1376 ;;  vref_plus       1    0[BANK1 ] unsigned char 
  1377 ;;  vref_minus      1    1[BANK1 ] unsigned char 
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  adc_cs          1    4[BANK1 ] unsigned char 
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      void 
  1382 ;; Registers used:
  1383 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1389 ;;      Params:         0       0       2       0       0
  1390 ;;      Locals:         0       0       1       0       0
  1391 ;;      Temps:          0       0       2       0       0
  1392 ;;      Totals:         0       0       5       0       0
  1393 ;;Total ram usage:        5 bytes
  1394 ;; Hardware stack levels used: 1
  1395 ;; Hardware stack levels required when called: 3
  1396 ;; This function calls:
  1397 ;;		Nothing
  1398 ;; This function is called by:
  1399 ;;		_setup
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403  0F90                     _init_ADC:	
  1404                           ;psect for function _init_ADC
  1405                           
  1406                           
  1407                           ;incstack = 0
  1408                           ; Regs used in _init_ADC: [wreg-fsr0h+status,2+status,0]
  1409                           ;init_ADC@adc_cs stored from wreg
  1410  0F90  1683               	bsf	3,5	;RP0=1, select bank1
  1411  0F91  1303               	bcf	3,6	;RP1=0, select bank1
  1412  0F92  00A4               	movwf	init_ADC@adc_cs^(0+128)
  1413  0F93                     l1502:
  1414                           
  1415                           ;ADC.c: 23:     switch(adc_cs){
  1416  0F93  2FB3               	goto	l1516
  1417  0F94                     l1504:
  1418                           
  1419                           ;ADC.c: 25:             ADCON0bits.ADCS = 0b11;
  1420  0F94  30C0               	movlw	192
  1421  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  1422  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  1423  0F97  049F               	iorwf	31,f	;volatile
  1424                           
  1425                           ;ADC.c: 26:             break;
  1426  0F98  2FCF               	goto	l1520
  1427  0F99                     l1506:
  1428                           
  1429                           ;ADC.c: 29:             ADCON0bits.ADCS = 0b00;
  1430  0F99  303F               	movlw	-193
  1431  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  1432  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  1433  0F9C  059F               	andwf	31,f	;volatile
  1434                           
  1435                           ;ADC.c: 30:             break;
  1436  0F9D  2FCF               	goto	l1520
  1437  0F9E                     l1508:
  1438                           
  1439                           ;ADC.c: 33:             ADCON0bits.ADCS = 0b01;
  1440  0F9E  1283               	bcf	3,5	;RP0=0, select bank0
  1441  0F9F  1303               	bcf	3,6	;RP1=0, select bank0
  1442  0FA0  081F               	movf	31,w	;volatile
  1443  0FA1  393F               	andlw	-193
  1444  0FA2  3840               	iorlw	64
  1445  0FA3  009F               	movwf	31	;volatile
  1446                           
  1447                           ;ADC.c: 34:             break;
  1448  0FA4  2FCF               	goto	l1520
  1449  0FA5                     l1510:
  1450                           
  1451                           ;ADC.c: 37:             ADCON0bits.ADCS = 0b10;
  1452  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  1453  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  1454  0FA7  081F               	movf	31,w	;volatile
  1455  0FA8  393F               	andlw	-193
  1456  0FA9  3880               	iorlw	128
  1457  0FAA  009F               	movwf	31	;volatile
  1458                           
  1459                           ;ADC.c: 38:             break;
  1460  0FAB  2FCF               	goto	l1520
  1461  0FAC                     l1512:
  1462                           
  1463                           ;ADC.c: 41:             ADCON0bits.ADCS = 0b01;
  1464  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  1465  0FAD  1303               	bcf	3,6	;RP1=0, select bank0
  1466  0FAE  081F               	movf	31,w	;volatile
  1467  0FAF  393F               	andlw	-193
  1468  0FB0  3840               	iorlw	64
  1469  0FB1  009F               	movwf	31	;volatile
  1470                           
  1471                           ;ADC.c: 42:             break;
  1472  0FB2  2FCF               	goto	l1520
  1473  0FB3                     l1516:
  1474  0FB3  0824               	movf	init_ADC@adc_cs^(0+128),w
  1475  0FB4  00A2               	movwf	??_init_ADC^(0+128)
  1476  0FB5  01A3               	clrf	(??_init_ADC^(0+128)+1)
  1477                           
  1478                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1479                           ; Switch size 1, requested type "simple"
  1480                           ; Number of cases is 1, Range of values is 0 to 0
  1481                           ; switch strategies available:
  1482                           ; Name         Instructions Cycles
  1483                           ; simple_byte            4     3 (average)
  1484                           ; direct_byte           11     8 (fixed)
  1485                           ; jumptable            260     6 (fixed)
  1486                           ;	Chosen strategy is simple_byte
  1487  0FB6  0823               	movf	(??_init_ADC+1)^(0+128),w
  1488  0FB7  3A00               	xorlw	0	; case 0
  1489  0FB8  1903               	skipnz
  1490  0FB9  2FBB               	goto	l2200
  1491  0FBA  2FAC               	goto	l1512
  1492  0FBB                     l2200:
  1493                           
  1494                           ; Switch size 1, requested type "simple"
  1495                           ; Number of cases is 4, Range of values is 1 to 32
  1496                           ; switch strategies available:
  1497                           ; Name         Instructions Cycles
  1498                           ; simple_byte           13     7 (average)
  1499                           ; direct_byte          107    11 (fixed)
  1500                           ; jumptable            263     9 (fixed)
  1501                           ;	Chosen strategy is simple_byte
  1502  0FBB  0822               	movf	??_init_ADC^(0+128),w
  1503  0FBC  3A01               	xorlw	1	; case 1
  1504  0FBD  1903               	skipnz
  1505  0FBE  2F94               	goto	l1504
  1506  0FBF  3A03               	xorlw	3	; case 2
  1507  0FC0  1903               	skipnz
  1508  0FC1  2F99               	goto	l1506
  1509  0FC2  3A0A               	xorlw	10	; case 8
  1510  0FC3  1903               	skipnz
  1511  0FC4  2F9E               	goto	l1508
  1512  0FC5  3A28               	xorlw	40	; case 32
  1513  0FC6  1903               	skipnz
  1514  0FC7  2FA5               	goto	l1510
  1515  0FC8  2FAC               	goto	l1512
  1516  0FC9                     l23:	
  1517                           ;ADC.c: 46:         case 0:
  1518                           
  1519                           
  1520                           ;ADC.c: 47:             ADCON1bits.VCFG0 = 0;
  1521  0FC9  121F               	bcf	31,4	;volatile
  1522                           
  1523                           ;ADC.c: 48:             break;
  1524  0FCA  2FE7               	goto	l1524
  1525  0FCB                     l25:	
  1526                           ;ADC.c: 50:         case 1:
  1527                           
  1528                           
  1529                           ;ADC.c: 51:             ADCON1bits.VCFG0 = 1;
  1530  0FCB  161F               	bsf	31,4	;volatile
  1531                           
  1532                           ;ADC.c: 52:             break;
  1533  0FCC  2FE7               	goto	l1524
  1534  0FCD                     l26:	
  1535                           ;ADC.c: 54:         default:
  1536                           
  1537                           
  1538                           ;ADC.c: 55:             ADCON1bits.VCFG0 = 0;
  1539  0FCD  121F               	bcf	31,4	;volatile
  1540                           
  1541                           ;ADC.c: 56:             break;
  1542  0FCE  2FE7               	goto	l1524
  1543  0FCF                     l1520:
  1544  0FCF  1683               	bsf	3,5	;RP0=1, select bank1
  1545  0FD0  1303               	bcf	3,6	;RP1=0, select bank1
  1546  0FD1  0820               	movf	init_ADC@vref_plus^(0+128),w
  1547  0FD2  00A2               	movwf	??_init_ADC^(0+128)
  1548  0FD3  01A3               	clrf	(??_init_ADC^(0+128)+1)
  1549                           
  1550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1551                           ; Switch size 1, requested type "simple"
  1552                           ; Number of cases is 1, Range of values is 0 to 0
  1553                           ; switch strategies available:
  1554                           ; Name         Instructions Cycles
  1555                           ; simple_byte            4     3 (average)
  1556                           ; direct_byte           11     8 (fixed)
  1557                           ; jumptable            260     6 (fixed)
  1558                           ;	Chosen strategy is simple_byte
  1559  0FD4  0823               	movf	(??_init_ADC+1)^(0+128),w
  1560  0FD5  3A00               	xorlw	0	; case 0
  1561  0FD6  1903               	skipnz
  1562  0FD7  2FD9               	goto	l2202
  1563  0FD8  2FCD               	goto	l26
  1564  0FD9                     l2202:
  1565                           
  1566                           ; Switch size 1, requested type "simple"
  1567                           ; Number of cases is 2, Range of values is 0 to 1
  1568                           ; switch strategies available:
  1569                           ; Name         Instructions Cycles
  1570                           ; simple_byte            7     4 (average)
  1571                           ; direct_byte           14     8 (fixed)
  1572                           ; jumptable            260     6 (fixed)
  1573                           ;	Chosen strategy is simple_byte
  1574  0FD9  0822               	movf	??_init_ADC^(0+128),w
  1575  0FDA  3A00               	xorlw	0	; case 0
  1576  0FDB  1903               	skipnz
  1577  0FDC  2FC9               	goto	l23
  1578  0FDD  3A01               	xorlw	1	; case 1
  1579  0FDE  1903               	skipnz
  1580  0FDF  2FCB               	goto	l25
  1581  0FE0  2FCD               	goto	l26
  1582  0FE1                     l28:	
  1583                           ;ADC.c: 60:         case 0:
  1584                           
  1585                           
  1586                           ;ADC.c: 61:             ADCON1bits.VCFG1 = 0;
  1587  0FE1  129F               	bcf	31,5	;volatile
  1588                           
  1589                           ;ADC.c: 62:             break;
  1590  0FE2  2FF7               	goto	l29
  1591  0FE3                     l30:	
  1592                           ;ADC.c: 64:         case 1:
  1593                           
  1594                           
  1595                           ;ADC.c: 65:             ADCON1bits.VCFG1 = 1;
  1596  0FE3  169F               	bsf	31,5	;volatile
  1597                           
  1598                           ;ADC.c: 66:             break;
  1599  0FE4  2FF7               	goto	l29
  1600  0FE5                     l31:	
  1601                           ;ADC.c: 68:         default:
  1602                           
  1603                           
  1604                           ;ADC.c: 69:             ADCON1bits.VCFG1 = 0;
  1605  0FE5  129F               	bcf	31,5	;volatile
  1606                           
  1607                           ;ADC.c: 70:             break;
  1608  0FE6  2FF7               	goto	l29
  1609  0FE7                     l1524:
  1610  0FE7  0821               	movf	init_ADC@vref_minus^(0+128),w
  1611  0FE8  00A2               	movwf	??_init_ADC^(0+128)
  1612  0FE9  01A3               	clrf	(??_init_ADC^(0+128)+1)
  1613                           
  1614                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1615                           ; Switch size 1, requested type "simple"
  1616                           ; Number of cases is 1, Range of values is 0 to 0
  1617                           ; switch strategies available:
  1618                           ; Name         Instructions Cycles
  1619                           ; simple_byte            4     3 (average)
  1620                           ; direct_byte           11     8 (fixed)
  1621                           ; jumptable            260     6 (fixed)
  1622                           ;	Chosen strategy is simple_byte
  1623  0FEA  0823               	movf	(??_init_ADC+1)^(0+128),w
  1624  0FEB  3A00               	xorlw	0	; case 0
  1625  0FEC  1903               	skipnz
  1626  0FED  2FEF               	goto	l2204
  1627  0FEE  2FE5               	goto	l31
  1628  0FEF                     l2204:
  1629                           
  1630                           ; Switch size 1, requested type "simple"
  1631                           ; Number of cases is 2, Range of values is 0 to 1
  1632                           ; switch strategies available:
  1633                           ; Name         Instructions Cycles
  1634                           ; simple_byte            7     4 (average)
  1635                           ; direct_byte           14     8 (fixed)
  1636                           ; jumptable            260     6 (fixed)
  1637                           ;	Chosen strategy is simple_byte
  1638  0FEF  0822               	movf	??_init_ADC^(0+128),w
  1639  0FF0  3A00               	xorlw	0	; case 0
  1640  0FF1  1903               	skipnz
  1641  0FF2  2FE1               	goto	l28
  1642  0FF3  3A01               	xorlw	1	; case 1
  1643  0FF4  1903               	skipnz
  1644  0FF5  2FE3               	goto	l30
  1645  0FF6  2FE5               	goto	l31
  1646  0FF7                     l29:
  1647                           
  1648                           ;ADC.c: 73:     ADCON1bits.ADFM = 1;
  1649  0FF7  179F               	bsf	31,7	;volatile
  1650                           
  1651                           ;ADC.c: 74:     ADCON0bits.ADON = 1;
  1652  0FF8  1283               	bcf	3,5	;RP0=0, select bank0
  1653  0FF9  1303               	bcf	3,6	;RP1=0, select bank0
  1654  0FFA  141F               	bsf	31,0	;volatile
  1655                           
  1656                           ;ADC.c: 76:     PIR1bits.ADIF = 0;
  1657  0FFB  130C               	bcf	12,6	;volatile
  1658                           
  1659                           ;ADC.c: 77:     PIE1bits.ADIE = 1;
  1660  0FFC  1683               	bsf	3,5	;RP0=1, select bank1
  1661  0FFD  1303               	bcf	3,6	;RP1=0, select bank1
  1662  0FFE  170C               	bsf	12,6	;volatile
  1663  0FFF                     l32:	
  1664                           ;ADC.c: 78:     return;
  1665                           
  1666  0FFF  0008               	return
  1667  1000                     __end_of_init_ADC:
  1668                           
  1669                           	psect	text4
  1670  0E80                     __ptext4:	
  1671 ;; *************** function _Lcd_Init *****************
  1672 ;; Defined at:
  1673 ;;		line 43 in file "LCD.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;		None
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;		None
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg, status,2, status,0, pclath, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1687 ;;      Params:         0       0       0       0       0
  1688 ;;      Locals:         0       0       0       0       0
  1689 ;;      Temps:          0       0       2       0       0
  1690 ;;      Totals:         0       0       2       0       0
  1691 ;;Total ram usage:        2 bytes
  1692 ;; Hardware stack levels used: 1
  1693 ;; Hardware stack levels required when called: 5
  1694 ;; This function calls:
  1695 ;;		_Lcd_Cmd
  1696 ;;		_Lcd_Port
  1697 ;; This function is called by:
  1698 ;;		_setup
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702  0E80                     _Lcd_Init:	
  1703                           ;psect for function _Lcd_Init
  1704                           
  1705  0E80                     l1544:	
  1706                           ;incstack = 0
  1707                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1708                           
  1709                           
  1710                           ;LCD.c: 44:     Lcd_Port(0x00);
  1711  0E80  3000               	movlw	0
  1712  0E81  120A  158A  2565  120A  158A  	fcall	_Lcd_Port
  1713  0E86                     l1546:
  1714                           
  1715                           ;LCD.c: 45:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1716  0E86  3034               	movlw	52
  1717  0E87  1683               	bsf	3,5	;RP0=1, select bank1
  1718  0E88  1303               	bcf	3,6	;RP1=0, select bank1
  1719  0E89  00A5               	movwf	(??_Lcd_Init^(0+128)+1)
  1720  0E8A  30F1               	movlw	241
  1721  0E8B  00A4               	movwf	??_Lcd_Init^(0+128)
  1722  0E8C                     u1857:
  1723  0E8C  0BA4               	decfsz	??_Lcd_Init^(0+128),f
  1724  0E8D  2E8C               	goto	u1857
  1725  0E8E  0BA5               	decfsz	(??_Lcd_Init^(0+128)+1),f
  1726  0E8F  2E8C               	goto	u1857
  1727  0E90                     l1548:
  1728                           
  1729                           ;LCD.c: 46:     Lcd_Cmd(0x30);
  1730  0E90  3030               	movlw	48
  1731  0E91  120A  118A  27E0  120A  158A  	fcall	_Lcd_Cmd
  1732                           
  1733                           ;LCD.c: 47:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1734  0E96  300D               	movlw	13
  1735  0E97  1683               	bsf	3,5	;RP0=1, select bank1
  1736  0E98  1303               	bcf	3,6	;RP1=0, select bank1
  1737  0E99  00A5               	movwf	(??_Lcd_Init^(0+128)+1)
  1738  0E9A  30FB               	movlw	251
  1739  0E9B  00A4               	movwf	??_Lcd_Init^(0+128)
  1740  0E9C                     u1867:
  1741  0E9C  0BA4               	decfsz	??_Lcd_Init^(0+128),f
  1742  0E9D  2E9C               	goto	u1867
  1743  0E9E  0BA5               	decfsz	(??_Lcd_Init^(0+128)+1),f
  1744  0E9F  2E9C               	goto	u1867
  1745  0EA0                     l1550:
  1746                           
  1747                           ;LCD.c: 48:     Lcd_Cmd(0x30);
  1748  0EA0  3030               	movlw	48
  1749  0EA1  120A  118A  27E0  120A  158A  	fcall	_Lcd_Cmd
  1750  0EA6                     l1552:
  1751                           
  1752                           ;LCD.c: 49:     _delay((unsigned long)((110)*(8000000/4000000.0)));
  1753  0EA6  3048               	movlw	72
  1754  0EA7  1683               	bsf	3,5	;RP0=1, select bank1
  1755  0EA8  1303               	bcf	3,6	;RP1=0, select bank1
  1756  0EA9  00A4               	movwf	??_Lcd_Init^(0+128)
  1757  0EAA                     u1877:
  1758  0EAA  0BA4               	decfsz	??_Lcd_Init^(0+128),f
  1759  0EAB  2EAA               	goto	u1877
  1760  0EAC  0000               	nop
  1761                           
  1762                           ;LCD.c: 50:     Lcd_Cmd(0x30);
  1763  0EAD  3030               	movlw	48
  1764  0EAE  120A  118A  27E0  120A  158A  	fcall	_Lcd_Cmd
  1765                           
  1766                           ;LCD.c: 52:     Lcd_Cmd(0x38);
  1767  0EB3  3038               	movlw	56
  1768  0EB4  120A  118A  27E0  120A  158A  	fcall	_Lcd_Cmd
  1769                           
  1770                           ;LCD.c: 53:     Lcd_Cmd(0x0C);
  1771  0EB9  300C               	movlw	12
  1772  0EBA  120A  118A  27E0  120A  158A  	fcall	_Lcd_Cmd
  1773                           
  1774                           ;LCD.c: 54:     Lcd_Cmd(0x01);
  1775  0EBF  3001               	movlw	1
  1776  0EC0  120A  118A  27E0  120A  158A  	fcall	_Lcd_Cmd
  1777                           
  1778                           ;LCD.c: 55:     Lcd_Cmd(0x06);
  1779  0EC5  3006               	movlw	6
  1780  0EC6  120A  118A  27E0  120A  158A  	fcall	_Lcd_Cmd
  1781  0ECB                     l82:
  1782  0ECB  0008               	return
  1783  0ECC                     __end_of_Lcd_Init:
  1784                           
  1785                           	psect	text5
  1786  0546                     __ptext5:	
  1787 ;; *************** function _Voltage_val *****************
  1788 ;; Defined at:
  1789 ;;		line 156 in file "main_02.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;  ADC_val         2    9[BANK1 ] int 
  1792 ;;  channel         2   11[BANK1 ] int 
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;		None
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      void 
  1797 ;; Registers used:
  1798 ;;		wreg, status,2, status,0, pclath, cstack
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1804 ;;      Params:         0       0       4       0       0
  1805 ;;      Locals:         0       0       0       0       0
  1806 ;;      Temps:          0       0       3       0       0
  1807 ;;      Totals:         0       0       7       0       0
  1808 ;;Total ram usage:        7 bytes
  1809 ;; Hardware stack levels used: 1
  1810 ;; Hardware stack levels required when called: 4
  1811 ;; This function calls:
  1812 ;;		___awdiv
  1813 ;;		___awmod
  1814 ;; This function is called by:
  1815 ;;		_main
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819  0546                     _Voltage_val:	
  1820                           ;psect for function _Voltage_val
  1821                           
  1822  0546                     l1772:	
  1823                           ;incstack = 0
  1824                           ; Regs used in _Voltage_val: [wreg+status,2+status,0+pclath+cstack]
  1825                           
  1826                           
  1827                           ;main_02.c: 156: void Voltage_val (int ADC_val, int channel);main_02.c: 157: {;main_02.c
      +                          : 158:     if (channel == 1)
  1828  0546  1683               	bsf	3,5	;RP0=1, select bank1
  1829  0547  1303               	bcf	3,6	;RP1=0, select bank1
  1830  0548  032B               	decf	Voltage_val@channel^(0+128),w
  1831  0549  042C               	iorwf	(Voltage_val@channel+1)^(0+128),w
  1832  054A  1D03               	btfss	3,2
  1833  054B  2D4D               	goto	u1181
  1834  054C  2D4E               	goto	u1180
  1835  054D                     u1181:
  1836  054D  2DA5               	goto	l1778
  1837  054E                     u1180:
  1838  054E                     l1774:
  1839                           
  1840                           ;main_02.c: 159:     {;main_02.c: 160:         Digits_Voltage1 [0] = (uint8_t)(ADC_val/1
      +                          00);
  1841  054E  3064               	movlw	100
  1842  054F  00A0               	movwf	___awdiv@divisor^(0+128)
  1843  0550  3000               	movlw	0
  1844  0551  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  1845  0552  082A               	movf	(Voltage_val@ADC_val+1)^(0+128),w
  1846  0553  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  1847  0554  0829               	movf	Voltage_val@ADC_val^(0+128),w
  1848  0555  00A2               	movwf	___awdiv@dividend^(0+128)
  1849  0556  120A  158A  2727  120A  118A  	fcall	___awdiv
  1850  055B  1683               	bsf	3,5	;RP0=1, select bank1
  1851  055C  1303               	bcf	3,6	;RP1=0, select bank1
  1852  055D  0820               	movf	?___awdiv^(0+128),w
  1853  055E  00AD               	movwf	??_Voltage_val^(0+128)
  1854  055F  082D               	movf	??_Voltage_val^(0+128),w
  1855  0560  00B6               	movwf	_Digits_Voltage1^(0+128)
  1856                           
  1857                           ;main_02.c: 161:         Digits_Voltage1 [3] = ADC_val%100;
  1858  0561  3064               	movlw	100
  1859  0562  00A0               	movwf	___awmod@divisor^(0+128)
  1860  0563  3000               	movlw	0
  1861  0564  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  1862  0565  082A               	movf	(Voltage_val@ADC_val+1)^(0+128),w
  1863  0566  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  1864  0567  0829               	movf	Voltage_val@ADC_val^(0+128),w
  1865  0568  00A2               	movwf	___awmod@dividend^(0+128)
  1866  0569  120A  158A  26CC  120A  118A  	fcall	___awmod
  1867  056E  1683               	bsf	3,5	;RP0=1, select bank1
  1868  056F  1303               	bcf	3,6	;RP1=0, select bank1
  1869  0570  0820               	movf	?___awmod^(0+128),w
  1870  0571  00AD               	movwf	??_Voltage_val^(0+128)
  1871  0572  082D               	movf	??_Voltage_val^(0+128),w
  1872  0573  00B9               	movwf	(_Digits_Voltage1^(0+128)+3)
  1873                           
  1874                           ;main_02.c: 163:         Digits_Voltage1 [1] = Digits_Voltage1 [3]/10;
  1875  0574  300A               	movlw	10
  1876  0575  00A0               	movwf	___awdiv@divisor^(0+128)
  1877  0576  3000               	movlw	0
  1878  0577  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  1879  0578  0839               	movf	(_Digits_Voltage1^(0+128)+3),w
  1880  0579  00AD               	movwf	??_Voltage_val^(0+128)
  1881  057A  01AE               	clrf	(??_Voltage_val^(0+128)+1)
  1882  057B  082D               	movf	??_Voltage_val^(0+128),w
  1883  057C  00A2               	movwf	___awdiv@dividend^(0+128)
  1884  057D  082E               	movf	(??_Voltage_val+1)^(0+128),w
  1885  057E  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  1886  057F  120A  158A  2727  120A  118A  	fcall	___awdiv
  1887  0584  1683               	bsf	3,5	;RP0=1, select bank1
  1888  0585  1303               	bcf	3,6	;RP1=0, select bank1
  1889  0586  0820               	movf	?___awdiv^(0+128),w
  1890  0587  00AF               	movwf	(??_Voltage_val+2)^(0+128)
  1891  0588  082F               	movf	(??_Voltage_val+2)^(0+128),w
  1892  0589  00B7               	movwf	(_Digits_Voltage1^(0+128)+1)
  1893                           
  1894                           ;main_02.c: 164:         Digits_Voltage1 [3] = Digits_Voltage1 [3]%10;
  1895  058A  300A               	movlw	10
  1896  058B  00A0               	movwf	___awmod@divisor^(0+128)
  1897  058C  3000               	movlw	0
  1898  058D  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  1899  058E  0839               	movf	(_Digits_Voltage1^(0+128)+3),w
  1900  058F  00AD               	movwf	??_Voltage_val^(0+128)
  1901  0590  01AE               	clrf	(??_Voltage_val^(0+128)+1)
  1902  0591  082D               	movf	??_Voltage_val^(0+128),w
  1903  0592  00A2               	movwf	___awmod@dividend^(0+128)
  1904  0593  082E               	movf	(??_Voltage_val+1)^(0+128),w
  1905  0594  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  1906  0595  120A  158A  26CC  120A  118A  	fcall	___awmod
  1907  059A  1683               	bsf	3,5	;RP0=1, select bank1
  1908  059B  1303               	bcf	3,6	;RP1=0, select bank1
  1909  059C  0820               	movf	?___awmod^(0+128),w
  1910  059D  00AF               	movwf	(??_Voltage_val+2)^(0+128)
  1911  059E  082F               	movf	(??_Voltage_val+2)^(0+128),w
  1912  059F  00B9               	movwf	(_Digits_Voltage1^(0+128)+3)
  1913  05A0                     l1776:
  1914                           
  1915                           ;main_02.c: 166:         Digits_Voltage1 [2] = Digits_Voltage1 [3];
  1916  05A0  0839               	movf	(_Digits_Voltage1^(0+128)+3),w
  1917  05A1  00AD               	movwf	??_Voltage_val^(0+128)
  1918  05A2  082D               	movf	??_Voltage_val^(0+128),w
  1919  05A3  00B8               	movwf	(_Digits_Voltage1^(0+128)+2)
  1920                           
  1921                           ;main_02.c: 167:     }
  1922  05A4  2E02               	goto	l178
  1923  05A5                     l1778:
  1924  05A5  3002               	movlw	2
  1925  05A6  062B               	xorwf	Voltage_val@channel^(0+128),w
  1926  05A7  042C               	iorwf	(Voltage_val@channel+1)^(0+128),w
  1927  05A8  1D03               	btfss	3,2
  1928  05A9  2DAB               	goto	u1191
  1929  05AA  2DAC               	goto	u1190
  1930  05AB                     u1191:
  1931  05AB  2E02               	goto	l178
  1932  05AC                     u1190:
  1933  05AC                     l1780:
  1934                           
  1935                           ;main_02.c: 169:     {;main_02.c: 170:         Digits_Voltage2 [0] = (uint8_t)(ADC_val/1
      +                          00);
  1936  05AC  3064               	movlw	100
  1937  05AD  00A0               	movwf	___awdiv@divisor^(0+128)
  1938  05AE  3000               	movlw	0
  1939  05AF  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  1940  05B0  082A               	movf	(Voltage_val@ADC_val+1)^(0+128),w
  1941  05B1  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  1942  05B2  0829               	movf	Voltage_val@ADC_val^(0+128),w
  1943  05B3  00A2               	movwf	___awdiv@dividend^(0+128)
  1944  05B4  120A  158A  2727  120A  118A  	fcall	___awdiv
  1945  05B9  1683               	bsf	3,5	;RP0=1, select bank1
  1946  05BA  1303               	bcf	3,6	;RP1=0, select bank1
  1947  05BB  0820               	movf	?___awdiv^(0+128),w
  1948  05BC  00AD               	movwf	??_Voltage_val^(0+128)
  1949  05BD  082D               	movf	??_Voltage_val^(0+128),w
  1950  05BE  00B2               	movwf	_Digits_Voltage2^(0+128)
  1951                           
  1952                           ;main_02.c: 171:         Digits_Voltage2 [3] = ADC_val%100;
  1953  05BF  3064               	movlw	100
  1954  05C0  00A0               	movwf	___awmod@divisor^(0+128)
  1955  05C1  3000               	movlw	0
  1956  05C2  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  1957  05C3  082A               	movf	(Voltage_val@ADC_val+1)^(0+128),w
  1958  05C4  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  1959  05C5  0829               	movf	Voltage_val@ADC_val^(0+128),w
  1960  05C6  00A2               	movwf	___awmod@dividend^(0+128)
  1961  05C7  120A  158A  26CC  120A  118A  	fcall	___awmod
  1962  05CC  1683               	bsf	3,5	;RP0=1, select bank1
  1963  05CD  1303               	bcf	3,6	;RP1=0, select bank1
  1964  05CE  0820               	movf	?___awmod^(0+128),w
  1965  05CF  00AD               	movwf	??_Voltage_val^(0+128)
  1966  05D0  082D               	movf	??_Voltage_val^(0+128),w
  1967  05D1  00B5               	movwf	(_Digits_Voltage2^(0+128)+3)
  1968                           
  1969                           ;main_02.c: 173:         Digits_Voltage2 [1] = Digits_Voltage2 [3]/10;
  1970  05D2  300A               	movlw	10
  1971  05D3  00A0               	movwf	___awdiv@divisor^(0+128)
  1972  05D4  3000               	movlw	0
  1973  05D5  00A1               	movwf	(___awdiv@divisor^(0+128)+1)
  1974  05D6  0835               	movf	(_Digits_Voltage2^(0+128)+3),w
  1975  05D7  00AD               	movwf	??_Voltage_val^(0+128)
  1976  05D8  01AE               	clrf	(??_Voltage_val^(0+128)+1)
  1977  05D9  082D               	movf	??_Voltage_val^(0+128),w
  1978  05DA  00A2               	movwf	___awdiv@dividend^(0+128)
  1979  05DB  082E               	movf	(??_Voltage_val+1)^(0+128),w
  1980  05DC  00A3               	movwf	(___awdiv@dividend+1)^(0+128)
  1981  05DD  120A  158A  2727  120A  118A  	fcall	___awdiv
  1982  05E2  1683               	bsf	3,5	;RP0=1, select bank1
  1983  05E3  1303               	bcf	3,6	;RP1=0, select bank1
  1984  05E4  0820               	movf	?___awdiv^(0+128),w
  1985  05E5  00AF               	movwf	(??_Voltage_val+2)^(0+128)
  1986  05E6  082F               	movf	(??_Voltage_val+2)^(0+128),w
  1987  05E7  00B3               	movwf	(_Digits_Voltage2^(0+128)+1)
  1988                           
  1989                           ;main_02.c: 174:         Digits_Voltage2 [3] = Digits_Voltage2 [3]%10;
  1990  05E8  300A               	movlw	10
  1991  05E9  00A0               	movwf	___awmod@divisor^(0+128)
  1992  05EA  3000               	movlw	0
  1993  05EB  00A1               	movwf	(___awmod@divisor^(0+128)+1)
  1994  05EC  0835               	movf	(_Digits_Voltage2^(0+128)+3),w
  1995  05ED  00AD               	movwf	??_Voltage_val^(0+128)
  1996  05EE  01AE               	clrf	(??_Voltage_val^(0+128)+1)
  1997  05EF  082D               	movf	??_Voltage_val^(0+128),w
  1998  05F0  00A2               	movwf	___awmod@dividend^(0+128)
  1999  05F1  082E               	movf	(??_Voltage_val+1)^(0+128),w
  2000  05F2  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  2001  05F3  120A  158A  26CC  120A  118A  	fcall	___awmod
  2002  05F8  1683               	bsf	3,5	;RP0=1, select bank1
  2003  05F9  1303               	bcf	3,6	;RP1=0, select bank1
  2004  05FA  0820               	movf	?___awmod^(0+128),w
  2005  05FB  00AF               	movwf	(??_Voltage_val+2)^(0+128)
  2006  05FC  082F               	movf	(??_Voltage_val+2)^(0+128),w
  2007  05FD  00B5               	movwf	(_Digits_Voltage2^(0+128)+3)
  2008  05FE                     l1782:
  2009                           
  2010                           ;main_02.c: 176:         Digits_Voltage2 [2] = Digits_Voltage2 [3];
  2011  05FE  0835               	movf	(_Digits_Voltage2^(0+128)+3),w
  2012  05FF  00AD               	movwf	??_Voltage_val^(0+128)
  2013  0600  082D               	movf	??_Voltage_val^(0+128),w
  2014  0601  00B4               	movwf	(_Digits_Voltage2^(0+128)+2)
  2015  0602                     l178:
  2016  0602  0008               	return
  2017  0603                     __end_of_Voltage_val:
  2018                           
  2019                           	psect	text6
  2020  0ECC                     __ptext6:	
  2021 ;; *************** function ___awmod *****************
  2022 ;; Defined at:
  2023 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awmod.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  divisor         2    0[BANK1 ] int 
  2026 ;;  dividend        2    2[BANK1 ] int 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  sign            1    6[BANK1 ] unsigned char 
  2029 ;;  counter         1    5[BANK1 ] unsigned char 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  2    0[BANK1 ] int 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2, status,0
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2039 ;;      Params:         0       0       4       0       0
  2040 ;;      Locals:         0       0       2       0       0
  2041 ;;      Temps:          0       0       1       0       0
  2042 ;;      Totals:         0       0       7       0       0
  2043 ;;Total ram usage:        7 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; Hardware stack levels required when called: 3
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		_Voltage_val
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053  0ECC                     ___awmod:	
  2054                           ;psect for function ___awmod
  2055                           
  2056  0ECC                     l1628:	
  2057                           ;incstack = 0
  2058                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2059                           
  2060  0ECC  1683               	bsf	3,5	;RP0=1, select bank1
  2061  0ECD  1303               	bcf	3,6	;RP1=0, select bank1
  2062  0ECE  01A6               	clrf	___awmod@sign^(0+128)
  2063  0ECF                     l1630:
  2064  0ECF  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
  2065  0ED0  2ED2               	goto	u1021
  2066  0ED1  2ED3               	goto	u1020
  2067  0ED2                     u1021:
  2068  0ED2  2EDA               	goto	l1636
  2069  0ED3                     u1020:
  2070  0ED3                     l1632:
  2071  0ED3  09A2               	comf	___awmod@dividend^(0+128),f
  2072  0ED4  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  2073  0ED5  0AA2               	incf	___awmod@dividend^(0+128),f
  2074  0ED6  1903               	skipnz
  2075  0ED7  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  2076  0ED8                     l1634:
  2077  0ED8  01A6               	clrf	___awmod@sign^(0+128)
  2078  0ED9  0AA6               	incf	___awmod@sign^(0+128),f
  2079  0EDA                     l1636:
  2080  0EDA  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  2081  0EDB  2EDD               	goto	u1031
  2082  0EDC  2EDE               	goto	u1030
  2083  0EDD                     u1031:
  2084  0EDD  2EE3               	goto	l1640
  2085  0EDE                     u1030:
  2086  0EDE                     l1638:
  2087  0EDE  09A0               	comf	___awmod@divisor^(0+128),f
  2088  0EDF  09A1               	comf	(___awmod@divisor+1)^(0+128),f
  2089  0EE0  0AA0               	incf	___awmod@divisor^(0+128),f
  2090  0EE1  1903               	skipnz
  2091  0EE2  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
  2092  0EE3                     l1640:
  2093  0EE3  0820               	movf	___awmod@divisor^(0+128),w
  2094  0EE4  0421               	iorwf	(___awmod@divisor+1)^(0+128),w
  2095  0EE5  1903               	btfsc	3,2
  2096  0EE6  2EE8               	goto	u1041
  2097  0EE7  2EE9               	goto	u1040
  2098  0EE8                     u1041:
  2099  0EE8  2F18               	goto	l1658
  2100  0EE9                     u1040:
  2101  0EE9                     l1642:
  2102  0EE9  01A5               	clrf	___awmod@counter^(0+128)
  2103  0EEA  0AA5               	incf	___awmod@counter^(0+128),f
  2104  0EEB  2EF7               	goto	l1648
  2105  0EEC                     l1644:
  2106  0EEC  3001               	movlw	1
  2107  0EED                     u1055:
  2108  0EED  1003               	clrc
  2109  0EEE  0DA0               	rlf	___awmod@divisor^(0+128),f
  2110  0EEF  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
  2111  0EF0  3EFF               	addlw	-1
  2112  0EF1  1D03               	skipz
  2113  0EF2  2EED               	goto	u1055
  2114  0EF3                     l1646:
  2115  0EF3  3001               	movlw	1
  2116  0EF4  00A4               	movwf	??___awmod^(0+128)
  2117  0EF5  0824               	movf	??___awmod^(0+128),w
  2118  0EF6  07A5               	addwf	___awmod@counter^(0+128),f
  2119  0EF7                     l1648:
  2120  0EF7  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  2121  0EF8  2EFA               	goto	u1061
  2122  0EF9  2EFB               	goto	u1060
  2123  0EFA                     u1061:
  2124  0EFA  2EEC               	goto	l1644
  2125  0EFB                     u1060:
  2126  0EFB                     l1650:
  2127  0EFB  0821               	movf	(___awmod@divisor+1)^(0+128),w
  2128  0EFC  0223               	subwf	(___awmod@dividend+1)^(0+128),w
  2129  0EFD  1D03               	skipz
  2130  0EFE  2F01               	goto	u1075
  2131  0EFF  0820               	movf	___awmod@divisor^(0+128),w
  2132  0F00  0222               	subwf	___awmod@dividend^(0+128),w
  2133  0F01                     u1075:
  2134  0F01  1C03               	skipc
  2135  0F02  2F04               	goto	u1071
  2136  0F03  2F05               	goto	u1070
  2137  0F04                     u1071:
  2138  0F04  2F0B               	goto	l1654
  2139  0F05                     u1070:
  2140  0F05                     l1652:
  2141  0F05  0820               	movf	___awmod@divisor^(0+128),w
  2142  0F06  02A2               	subwf	___awmod@dividend^(0+128),f
  2143  0F07  0821               	movf	(___awmod@divisor+1)^(0+128),w
  2144  0F08  1C03               	skipc
  2145  0F09  03A3               	decf	(___awmod@dividend+1)^(0+128),f
  2146  0F0A  02A3               	subwf	(___awmod@dividend+1)^(0+128),f
  2147  0F0B                     l1654:
  2148  0F0B  3001               	movlw	1
  2149  0F0C                     u1085:
  2150  0F0C  1003               	clrc
  2151  0F0D  0CA1               	rrf	(___awmod@divisor+1)^(0+128),f
  2152  0F0E  0CA0               	rrf	___awmod@divisor^(0+128),f
  2153  0F0F  3EFF               	addlw	-1
  2154  0F10  1D03               	skipz
  2155  0F11  2F0C               	goto	u1085
  2156  0F12                     l1656:
  2157  0F12  3001               	movlw	1
  2158  0F13  02A5               	subwf	___awmod@counter^(0+128),f
  2159  0F14  1D03               	btfss	3,2
  2160  0F15  2F17               	goto	u1091
  2161  0F16  2F18               	goto	u1090
  2162  0F17                     u1091:
  2163  0F17  2EFB               	goto	l1650
  2164  0F18                     u1090:
  2165  0F18                     l1658:
  2166  0F18  0826               	movf	___awmod@sign^(0+128),w
  2167  0F19  1903               	btfsc	3,2
  2168  0F1A  2F1C               	goto	u1101
  2169  0F1B  2F1D               	goto	u1100
  2170  0F1C                     u1101:
  2171  0F1C  2F22               	goto	l1662
  2172  0F1D                     u1100:
  2173  0F1D                     l1660:
  2174  0F1D  09A2               	comf	___awmod@dividend^(0+128),f
  2175  0F1E  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  2176  0F1F  0AA2               	incf	___awmod@dividend^(0+128),f
  2177  0F20  1903               	skipnz
  2178  0F21  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  2179  0F22                     l1662:
  2180  0F22  0823               	movf	(___awmod@dividend+1)^(0+128),w
  2181  0F23  00A1               	movwf	(?___awmod+1)^(0+128)
  2182  0F24  0822               	movf	___awmod@dividend^(0+128),w
  2183  0F25  00A0               	movwf	?___awmod^(0+128)
  2184  0F26                     l442:
  2185  0F26  0008               	return
  2186  0F27                     __end_of___awmod:
  2187                           
  2188                           	psect	text7
  2189  0F27                     __ptext7:	
  2190 ;; *************** function ___awdiv *****************
  2191 ;; Defined at:
  2192 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  divisor         2    0[BANK1 ] int 
  2195 ;;  dividend        2    2[BANK1 ] int 
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;  quotient        2    7[BANK1 ] int 
  2198 ;;  sign            1    6[BANK1 ] unsigned char 
  2199 ;;  counter         1    5[BANK1 ] unsigned char 
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  2    0[BANK1 ] int 
  2202 ;; Registers used:
  2203 ;;		wreg, status,2, status,0
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2209 ;;      Params:         0       0       4       0       0
  2210 ;;      Locals:         0       0       4       0       0
  2211 ;;      Temps:          0       0       1       0       0
  2212 ;;      Totals:         0       0       9       0       0
  2213 ;;Total ram usage:        9 bytes
  2214 ;; Hardware stack levels used: 1
  2215 ;; Hardware stack levels required when called: 3
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		_Voltage_val
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223  0F27                     ___awdiv:	
  2224                           ;psect for function ___awdiv
  2225                           
  2226  0F27                     l1584:	
  2227                           ;incstack = 0
  2228                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2229                           
  2230  0F27  1683               	bsf	3,5	;RP0=1, select bank1
  2231  0F28  1303               	bcf	3,6	;RP1=0, select bank1
  2232  0F29  01A6               	clrf	___awdiv@sign^(0+128)
  2233  0F2A                     l1586:
  2234  0F2A  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  2235  0F2B  2F2D               	goto	u921
  2236  0F2C  2F2E               	goto	u920
  2237  0F2D                     u921:
  2238  0F2D  2F35               	goto	l1592
  2239  0F2E                     u920:
  2240  0F2E                     l1588:
  2241  0F2E  09A0               	comf	___awdiv@divisor^(0+128),f
  2242  0F2F  09A1               	comf	(___awdiv@divisor+1)^(0+128),f
  2243  0F30  0AA0               	incf	___awdiv@divisor^(0+128),f
  2244  0F31  1903               	skipnz
  2245  0F32  0AA1               	incf	(___awdiv@divisor+1)^(0+128),f
  2246  0F33                     l1590:
  2247  0F33  01A6               	clrf	___awdiv@sign^(0+128)
  2248  0F34  0AA6               	incf	___awdiv@sign^(0+128),f
  2249  0F35                     l1592:
  2250  0F35  1FA3               	btfss	(___awdiv@dividend+1)^(0+128),7
  2251  0F36  2F38               	goto	u931
  2252  0F37  2F39               	goto	u930
  2253  0F38                     u931:
  2254  0F38  2F42               	goto	l1598
  2255  0F39                     u930:
  2256  0F39                     l1594:
  2257  0F39  09A2               	comf	___awdiv@dividend^(0+128),f
  2258  0F3A  09A3               	comf	(___awdiv@dividend+1)^(0+128),f
  2259  0F3B  0AA2               	incf	___awdiv@dividend^(0+128),f
  2260  0F3C  1903               	skipnz
  2261  0F3D  0AA3               	incf	(___awdiv@dividend+1)^(0+128),f
  2262  0F3E                     l1596:
  2263  0F3E  3001               	movlw	1
  2264  0F3F  00A4               	movwf	??___awdiv^(0+128)
  2265  0F40  0824               	movf	??___awdiv^(0+128),w
  2266  0F41  06A6               	xorwf	___awdiv@sign^(0+128),f
  2267  0F42                     l1598:
  2268  0F42  01A7               	clrf	___awdiv@quotient^(0+128)
  2269  0F43  01A8               	clrf	(___awdiv@quotient+1)^(0+128)
  2270  0F44                     l1600:
  2271  0F44  0820               	movf	___awdiv@divisor^(0+128),w
  2272  0F45  0421               	iorwf	(___awdiv@divisor+1)^(0+128),w
  2273  0F46  1903               	btfsc	3,2
  2274  0F47  2F49               	goto	u941
  2275  0F48  2F4A               	goto	u940
  2276  0F49                     u941:
  2277  0F49  2F81               	goto	l1620
  2278  0F4A                     u940:
  2279  0F4A                     l1602:
  2280  0F4A  01A5               	clrf	___awdiv@counter^(0+128)
  2281  0F4B  0AA5               	incf	___awdiv@counter^(0+128),f
  2282  0F4C  2F58               	goto	l1608
  2283  0F4D                     l1604:
  2284  0F4D  3001               	movlw	1
  2285  0F4E                     u955:
  2286  0F4E  1003               	clrc
  2287  0F4F  0DA0               	rlf	___awdiv@divisor^(0+128),f
  2288  0F50  0DA1               	rlf	(___awdiv@divisor+1)^(0+128),f
  2289  0F51  3EFF               	addlw	-1
  2290  0F52  1D03               	skipz
  2291  0F53  2F4E               	goto	u955
  2292  0F54                     l1606:
  2293  0F54  3001               	movlw	1
  2294  0F55  00A4               	movwf	??___awdiv^(0+128)
  2295  0F56  0824               	movf	??___awdiv^(0+128),w
  2296  0F57  07A5               	addwf	___awdiv@counter^(0+128),f
  2297  0F58                     l1608:
  2298  0F58  1FA1               	btfss	(___awdiv@divisor+1)^(0+128),7
  2299  0F59  2F5B               	goto	u961
  2300  0F5A  2F5C               	goto	u960
  2301  0F5B                     u961:
  2302  0F5B  2F4D               	goto	l1604
  2303  0F5C                     u960:
  2304  0F5C                     l1610:
  2305  0F5C  3001               	movlw	1
  2306  0F5D                     u975:
  2307  0F5D  1003               	clrc
  2308  0F5E  0DA7               	rlf	___awdiv@quotient^(0+128),f
  2309  0F5F  0DA8               	rlf	(___awdiv@quotient+1)^(0+128),f
  2310  0F60  3EFF               	addlw	-1
  2311  0F61  1D03               	skipz
  2312  0F62  2F5D               	goto	u975
  2313  0F63  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  2314  0F64  0223               	subwf	(___awdiv@dividend+1)^(0+128),w
  2315  0F65  1D03               	skipz
  2316  0F66  2F69               	goto	u985
  2317  0F67  0820               	movf	___awdiv@divisor^(0+128),w
  2318  0F68  0222               	subwf	___awdiv@dividend^(0+128),w
  2319  0F69                     u985:
  2320  0F69  1C03               	skipc
  2321  0F6A  2F6C               	goto	u981
  2322  0F6B  2F6D               	goto	u980
  2323  0F6C                     u981:
  2324  0F6C  2F74               	goto	l1616
  2325  0F6D                     u980:
  2326  0F6D                     l1612:
  2327  0F6D  0820               	movf	___awdiv@divisor^(0+128),w
  2328  0F6E  02A2               	subwf	___awdiv@dividend^(0+128),f
  2329  0F6F  0821               	movf	(___awdiv@divisor+1)^(0+128),w
  2330  0F70  1C03               	skipc
  2331  0F71  03A3               	decf	(___awdiv@dividend+1)^(0+128),f
  2332  0F72  02A3               	subwf	(___awdiv@dividend+1)^(0+128),f
  2333  0F73                     l1614:
  2334  0F73  1427               	bsf	___awdiv@quotient^(0+128),0
  2335  0F74                     l1616:
  2336  0F74  3001               	movlw	1
  2337  0F75                     u995:
  2338  0F75  1003               	clrc
  2339  0F76  0CA1               	rrf	(___awdiv@divisor+1)^(0+128),f
  2340  0F77  0CA0               	rrf	___awdiv@divisor^(0+128),f
  2341  0F78  3EFF               	addlw	-1
  2342  0F79  1D03               	skipz
  2343  0F7A  2F75               	goto	u995
  2344  0F7B                     l1618:
  2345  0F7B  3001               	movlw	1
  2346  0F7C  02A5               	subwf	___awdiv@counter^(0+128),f
  2347  0F7D  1D03               	btfss	3,2
  2348  0F7E  2F80               	goto	u1001
  2349  0F7F  2F81               	goto	u1000
  2350  0F80                     u1001:
  2351  0F80  2F5C               	goto	l1610
  2352  0F81                     u1000:
  2353  0F81                     l1620:
  2354  0F81  0826               	movf	___awdiv@sign^(0+128),w
  2355  0F82  1903               	btfsc	3,2
  2356  0F83  2F85               	goto	u1011
  2357  0F84  2F86               	goto	u1010
  2358  0F85                     u1011:
  2359  0F85  2F8B               	goto	l1624
  2360  0F86                     u1010:
  2361  0F86                     l1622:
  2362  0F86  09A7               	comf	___awdiv@quotient^(0+128),f
  2363  0F87  09A8               	comf	(___awdiv@quotient+1)^(0+128),f
  2364  0F88  0AA7               	incf	___awdiv@quotient^(0+128),f
  2365  0F89  1903               	skipnz
  2366  0F8A  0AA8               	incf	(___awdiv@quotient+1)^(0+128),f
  2367  0F8B                     l1624:
  2368  0F8B  0828               	movf	(___awdiv@quotient+1)^(0+128),w
  2369  0F8C  00A1               	movwf	(?___awdiv+1)^(0+128)
  2370  0F8D  0827               	movf	___awdiv@quotient^(0+128),w
  2371  0F8E  00A0               	movwf	?___awdiv^(0+128)
  2372  0F8F                     l429:
  2373  0F8F  0008               	return
  2374  0F90                     __end_of___awdiv:
  2375                           
  2376                           	psect	text8
  2377  0DF4                     __ptext8:	
  2378 ;; *************** function _Lcd_Write_String *****************
  2379 ;; Defined at:
  2380 ;;		line 69 in file "LCD.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  a               1    wreg     PTR unsigned char 
  2383 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  2384 ;;		 -> STR_3(2), STR_2(2), STR_1(15), 
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;  a               1    5[BANK1 ] PTR unsigned char 
  2387 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  2388 ;;		 -> STR_3(2), STR_2(2), STR_1(15), 
  2389 ;;  i               2    3[BANK1 ] int 
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  1    wreg      void 
  2392 ;; Registers used:
  2393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2399 ;;      Params:         0       0       0       0       0
  2400 ;;      Locals:         0       0       3       0       0
  2401 ;;      Temps:          0       0       0       0       0
  2402 ;;      Totals:         0       0       3       0       0
  2403 ;;Total ram usage:        3 bytes
  2404 ;; Hardware stack levels used: 1
  2405 ;; Hardware stack levels required when called: 5
  2406 ;; This function calls:
  2407 ;;		_Lcd_Write_Char
  2408 ;; This function is called by:
  2409 ;;		_main
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413  0DF4                     _Lcd_Write_String:	
  2414                           ;psect for function _Lcd_Write_String
  2415                           
  2416                           
  2417                           ;incstack = 0
  2418                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2419                           ;Lcd_Write_String@a stored from wreg
  2420  0DF4  1683               	bsf	3,5	;RP0=1, select bank1
  2421  0DF5  1303               	bcf	3,6	;RP1=0, select bank1
  2422  0DF6  00A5               	movwf	Lcd_Write_String@a^(0+128)
  2423  0DF7                     l1746:
  2424                           
  2425                           ;LCD.c: 70:     int i;;LCD.c: 71:     for (i = 0; a[i] != '\0'; i++)
  2426  0DF7  01A3               	clrf	Lcd_Write_String@i^(0+128)
  2427  0DF8  01A4               	clrf	(Lcd_Write_String@i+1)^(0+128)
  2428  0DF9  2E0F               	goto	l1752
  2429  0DFA                     l1748:
  2430                           
  2431                           ;LCD.c: 72:         Lcd_Write_Char(a[i]);
  2432  0DFA  0823               	movf	Lcd_Write_String@i^(0+128),w
  2433  0DFB  0725               	addwf	Lcd_Write_String@a^(0+128),w
  2434  0DFC  0084               	movwf	4
  2435  0DFD  120A  158A  2000  120A  158A  	fcall	stringdir
  2436  0E02  120A  158A  256D  120A  158A  	fcall	_Lcd_Write_Char
  2437  0E07                     l1750:
  2438  0E07  3001               	movlw	1
  2439  0E08  1683               	bsf	3,5	;RP0=1, select bank1
  2440  0E09  1303               	bcf	3,6	;RP1=0, select bank1
  2441  0E0A  07A3               	addwf	Lcd_Write_String@i^(0+128),f
  2442  0E0B  1803               	skipnc
  2443  0E0C  0AA4               	incf	(Lcd_Write_String@i+1)^(0+128),f
  2444  0E0D  3000               	movlw	0
  2445  0E0E  07A4               	addwf	(Lcd_Write_String@i+1)^(0+128),f
  2446  0E0F                     l1752:
  2447  0E0F  0823               	movf	Lcd_Write_String@i^(0+128),w
  2448  0E10  0725               	addwf	Lcd_Write_String@a^(0+128),w
  2449  0E11  0084               	movwf	4
  2450  0E12  120A  158A  2000  120A  158A  	fcall	stringdir
  2451  0E17  3A00               	xorlw	0
  2452  0E18  1D03               	skipz
  2453  0E19  2E1B               	goto	u1171
  2454  0E1A  2E1C               	goto	u1170
  2455  0E1B                     u1171:
  2456  0E1B  2DFA               	goto	l1748
  2457  0E1C                     u1170:
  2458  0E1C                     l91:
  2459  0E1C  0008               	return
  2460  0E1D                     __end_of_Lcd_Write_String:
  2461                           
  2462                           	psect	text9
  2463  0D6D                     __ptext9:	
  2464 ;; *************** function _Lcd_Write_Char *****************
  2465 ;; Defined at:
  2466 ;;		line 59 in file "LCD.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  a               1    wreg     unsigned char 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  a               1    2[BANK1 ] unsigned char 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, status,0, pclath, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2480 ;;      Params:         0       0       0       0       0
  2481 ;;      Locals:         0       0       1       0       0
  2482 ;;      Temps:          0       0       1       0       0
  2483 ;;      Totals:         0       0       2       0       0
  2484 ;;Total ram usage:        2 bytes
  2485 ;; Hardware stack levels used: 1
  2486 ;; Hardware stack levels required when called: 4
  2487 ;; This function calls:
  2488 ;;		_Lcd_Port
  2489 ;; This function is called by:
  2490 ;;		_Lcd_Write_String
  2491 ;;		_main
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495  0D6D                     _Lcd_Write_Char:	
  2496                           ;psect for function _Lcd_Write_Char
  2497                           
  2498                           
  2499                           ;incstack = 0
  2500                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2501                           ;Lcd_Write_Char@a stored from wreg
  2502  0D6D  1683               	bsf	3,5	;RP0=1, select bank1
  2503  0D6E  1303               	bcf	3,6	;RP1=0, select bank1
  2504  0D6F  00A2               	movwf	Lcd_Write_Char@a^(0+128)
  2505  0D70                     l1554:
  2506                           
  2507                           ;LCD.c: 61:     PORTCbits.RC6 = 1;
  2508  0D70  1283               	bcf	3,5	;RP0=0, select bank0
  2509  0D71  1303               	bcf	3,6	;RP1=0, select bank0
  2510  0D72  1707               	bsf	7,6	;volatile
  2511  0D73                     l1556:
  2512                           
  2513                           ;LCD.c: 62:     Lcd_Port(a);
  2514  0D73  1683               	bsf	3,5	;RP0=1, select bank1
  2515  0D74  1303               	bcf	3,6	;RP1=0, select bank1
  2516  0D75  0822               	movf	Lcd_Write_Char@a^(0+128),w
  2517  0D76  120A  158A  2565  120A  158A  	fcall	_Lcd_Port
  2518  0D7B                     l1558:
  2519                           
  2520                           ;LCD.c: 63:     RC7 = 1;
  2521  0D7B  1283               	bcf	3,5	;RP0=0, select bank0
  2522  0D7C  1303               	bcf	3,6	;RP1=0, select bank0
  2523  0D7D  1787               	bsf	7,7	;volatile
  2524  0D7E                     l1560:
  2525                           
  2526                           ;LCD.c: 64:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2527  0D7E  3019               	movlw	25
  2528  0D7F  1683               	bsf	3,5	;RP0=1, select bank1
  2529  0D80  1303               	bcf	3,6	;RP1=0, select bank1
  2530  0D81  00A1               	movwf	??_Lcd_Write_Char^(0+128)
  2531  0D82                     u1887:
  2532  0D82  0BA1               	decfsz	??_Lcd_Write_Char^(0+128),f
  2533  0D83  2D82               	goto	u1887
  2534  0D84  2D85               	nop2
  2535  0D85                     l1562:
  2536                           
  2537                           ;LCD.c: 65:     RC7 = 0;
  2538  0D85  1283               	bcf	3,5	;RP0=0, select bank0
  2539  0D86  1303               	bcf	3,6	;RP1=0, select bank0
  2540  0D87  1387               	bcf	7,7	;volatile
  2541  0D88                     l85:
  2542  0D88  0008               	return
  2543  0D89                     __end_of_Lcd_Write_Char:
  2544                           
  2545                           	psect	text10
  2546  0DA7                     __ptext10:	
  2547 ;; *************** function _Lcd_Set_Cursor *****************
  2548 ;; Defined at:
  2549 ;;		line 31 in file "LCD.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  a               1    wreg     unsigned char 
  2552 ;;  b               1    4[BANK1 ] unsigned char 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  a               1    6[BANK1 ] unsigned char 
  2555 ;;  temp            1    7[BANK1 ] unsigned char 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  1    wreg      void 
  2558 ;; Registers used:
  2559 ;;		wreg, status,2, status,0, pclath, cstack
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2565 ;;      Params:         0       0       1       0       0
  2566 ;;      Locals:         0       0       2       0       0
  2567 ;;      Temps:          0       0       1       0       0
  2568 ;;      Totals:         0       0       4       0       0
  2569 ;;Total ram usage:        4 bytes
  2570 ;; Hardware stack levels used: 1
  2571 ;; Hardware stack levels required when called: 5
  2572 ;; This function calls:
  2573 ;;		_Lcd_Cmd
  2574 ;; This function is called by:
  2575 ;;		_main
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579  0DA7                     _Lcd_Set_Cursor:	
  2580                           ;psect for function _Lcd_Set_Cursor
  2581                           
  2582                           
  2583                           ;incstack = 0
  2584                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2585                           ;Lcd_Set_Cursor@a stored from wreg
  2586  0DA7  1683               	bsf	3,5	;RP0=1, select bank1
  2587  0DA8  1303               	bcf	3,6	;RP1=0, select bank1
  2588  0DA9  00A6               	movwf	Lcd_Set_Cursor@a^(0+128)
  2589  0DAA                     l1734:
  2590                           
  2591                           ;LCD.c: 31: void Lcd_Set_Cursor(char a, char b);LCD.c: 32: {;LCD.c: 33:     char temp;;L
      +                          CD.c: 34:     if (a == 1) {
  2592  0DAA  0326               	decf	Lcd_Set_Cursor@a^(0+128),w
  2593  0DAB  1D03               	btfss	3,2
  2594  0DAC  2DAE               	goto	u1151
  2595  0DAD  2DAF               	goto	u1150
  2596  0DAE                     u1151:
  2597  0DAE  2DBB               	goto	l1740
  2598  0DAF                     u1150:
  2599  0DAF                     l1736:
  2600                           
  2601                           ;LCD.c: 35:         temp = 0x80 + b - 1;
  2602  0DAF  0824               	movf	Lcd_Set_Cursor@b^(0+128),w
  2603  0DB0  3E7F               	addlw	127
  2604  0DB1  00A5               	movwf	??_Lcd_Set_Cursor^(0+128)
  2605  0DB2  0825               	movf	??_Lcd_Set_Cursor^(0+128),w
  2606  0DB3  00A7               	movwf	Lcd_Set_Cursor@temp^(0+128)
  2607  0DB4                     l1738:
  2608                           
  2609                           ;LCD.c: 36:         Lcd_Cmd(temp);
  2610  0DB4  0827               	movf	Lcd_Set_Cursor@temp^(0+128),w
  2611  0DB5  120A  118A  27E0  120A  158A  	fcall	_Lcd_Cmd
  2612                           
  2613                           ;LCD.c: 37:     } else if (a == 2) {
  2614  0DBA  2DCC               	goto	l79
  2615  0DBB                     l1740:
  2616  0DBB  3002               	movlw	2
  2617  0DBC  0626               	xorwf	Lcd_Set_Cursor@a^(0+128),w
  2618  0DBD  1D03               	btfss	3,2
  2619  0DBE  2DC0               	goto	u1161
  2620  0DBF  2DC1               	goto	u1160
  2621  0DC0                     u1161:
  2622  0DC0  2DCC               	goto	l79
  2623  0DC1                     u1160:
  2624  0DC1                     l1742:
  2625                           
  2626                           ;LCD.c: 38:         temp = 0xC0 + b - 1;
  2627  0DC1  0824               	movf	Lcd_Set_Cursor@b^(0+128),w
  2628  0DC2  3EBF               	addlw	191
  2629  0DC3  00A5               	movwf	??_Lcd_Set_Cursor^(0+128)
  2630  0DC4  0825               	movf	??_Lcd_Set_Cursor^(0+128),w
  2631  0DC5  00A7               	movwf	Lcd_Set_Cursor@temp^(0+128)
  2632  0DC6                     l1744:
  2633                           
  2634                           ;LCD.c: 39:         Lcd_Cmd(temp);
  2635  0DC6  0827               	movf	Lcd_Set_Cursor@temp^(0+128),w
  2636  0DC7  120A  118A  27E0  120A  158A  	fcall	_Lcd_Cmd
  2637  0DCC                     l79:
  2638  0DCC  0008               	return
  2639  0DCD                     __end_of_Lcd_Set_Cursor:
  2640                           
  2641                           	psect	text11
  2642  07E0                     __ptext11:	
  2643 ;; *************** function _Lcd_Cmd *****************
  2644 ;; Defined at:
  2645 ;;		line 18 in file "LCD.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  a               1    wreg     unsigned char 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;  a               1    3[BANK1 ] unsigned char 
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      void 
  2652 ;; Registers used:
  2653 ;;		wreg, status,2, status,0, pclath, cstack
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2659 ;;      Params:         0       0       0       0       0
  2660 ;;      Locals:         0       0       1       0       0
  2661 ;;      Temps:          0       0       2       0       0
  2662 ;;      Totals:         0       0       3       0       0
  2663 ;;Total ram usage:        3 bytes
  2664 ;; Hardware stack levels used: 1
  2665 ;; Hardware stack levels required when called: 4
  2666 ;; This function calls:
  2667 ;;		_Lcd_Port
  2668 ;; This function is called by:
  2669 ;;		_Lcd_Set_Cursor
  2670 ;;		_Lcd_Init
  2671 ;;		_Lcd_Clear
  2672 ;;		_Lcd_Shift_Right
  2673 ;;		_Lcd_Shift_Left
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677  07E0                     _Lcd_Cmd:	
  2678                           ;psect for function _Lcd_Cmd
  2679                           
  2680                           
  2681                           ;incstack = 0
  2682                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2683                           ;Lcd_Cmd@a stored from wreg
  2684  07E0  1683               	bsf	3,5	;RP0=1, select bank1
  2685  07E1  1303               	bcf	3,6	;RP1=0, select bank1
  2686  07E2  00A3               	movwf	Lcd_Cmd@a^(0+128)
  2687  07E3                     l1492:
  2688                           
  2689                           ;LCD.c: 18: void Lcd_Cmd(char a);LCD.c: 19: {;LCD.c: 20:     PORTCbits.RC6 = 0;
  2690  07E3  1283               	bcf	3,5	;RP0=0, select bank0
  2691  07E4  1303               	bcf	3,6	;RP1=0, select bank0
  2692  07E5  1307               	bcf	7,6	;volatile
  2693  07E6                     l1494:
  2694                           
  2695                           ;LCD.c: 21:     Lcd_Port(a);
  2696  07E6  1683               	bsf	3,5	;RP0=1, select bank1
  2697  07E7  1303               	bcf	3,6	;RP1=0, select bank1
  2698  07E8  0823               	movf	Lcd_Cmd@a^(0+128),w
  2699  07E9  120A  158A  2565  120A  118A  	fcall	_Lcd_Port
  2700  07EE                     l1496:
  2701                           
  2702                           ;LCD.c: 22:     RC7 = 1;
  2703  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  2704  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  2705  07F0  1787               	bsf	7,7	;volatile
  2706  07F1                     l1498:
  2707                           
  2708                           ;LCD.c: 23:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2709  07F1  300B               	movlw	11
  2710  07F2  1683               	bsf	3,5	;RP0=1, select bank1
  2711  07F3  1303               	bcf	3,6	;RP1=0, select bank1
  2712  07F4  00A2               	movwf	(??_Lcd_Cmd^(0+128)+1)
  2713  07F5  3061               	movlw	97
  2714  07F6  00A1               	movwf	??_Lcd_Cmd^(0+128)
  2715  07F7                     u1897:
  2716  07F7  0BA1               	decfsz	??_Lcd_Cmd^(0+128),f
  2717  07F8  2FF7               	goto	u1897
  2718  07F9  0BA2               	decfsz	(??_Lcd_Cmd^(0+128)+1),f
  2719  07FA  2FF7               	goto	u1897
  2720  07FB  2FFC               	nop2
  2721  07FC                     l1500:
  2722                           
  2723                           ;LCD.c: 24:     RC7 = 0;
  2724  07FC  1283               	bcf	3,5	;RP0=0, select bank0
  2725  07FD  1303               	bcf	3,6	;RP1=0, select bank0
  2726  07FE  1387               	bcf	7,7	;volatile
  2727  07FF                     l70:
  2728  07FF  0008               	return
  2729  0800                     __end_of_Lcd_Cmd:
  2730                           
  2731                           	psect	text12
  2732  0D65                     __ptext12:	
  2733 ;; *************** function _Lcd_Port *****************
  2734 ;; Defined at:
  2735 ;;		line 13 in file "LCD.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  a               1    wreg     unsigned char 
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;  a               1    0[BANK1 ] unsigned char 
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  1    wreg      void 
  2742 ;; Registers used:
  2743 ;;		wreg
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2749 ;;      Params:         0       0       0       0       0
  2750 ;;      Locals:         0       0       1       0       0
  2751 ;;      Temps:          0       0       0       0       0
  2752 ;;      Totals:         0       0       1       0       0
  2753 ;;Total ram usage:        1 bytes
  2754 ;; Hardware stack levels used: 1
  2755 ;; Hardware stack levels required when called: 3
  2756 ;; This function calls:
  2757 ;;		Nothing
  2758 ;; This function is called by:
  2759 ;;		_Lcd_Cmd
  2760 ;;		_Lcd_Init
  2761 ;;		_Lcd_Write_Char
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765  0D65                     _Lcd_Port:	
  2766                           ;psect for function _Lcd_Port
  2767                           
  2768                           
  2769                           ;incstack = 0
  2770                           ; Regs used in _Lcd_Port: [wreg]
  2771                           ;Lcd_Port@a stored from wreg
  2772  0D65  1683               	bsf	3,5	;RP0=1, select bank1
  2773  0D66  1303               	bcf	3,6	;RP1=0, select bank1
  2774  0D67  00A0               	movwf	Lcd_Port@a^(0+128)
  2775  0D68                     l1490:
  2776                           
  2777                           ;LCD.c: 13: void Lcd_Port(char a);LCD.c: 14: {;LCD.c: 15:     PORTD = a;
  2778  0D68  0820               	movf	Lcd_Port@a^(0+128),w
  2779  0D69  1283               	bcf	3,5	;RP0=0, select bank0
  2780  0D6A  1303               	bcf	3,6	;RP1=0, select bank0
  2781  0D6B  0088               	movwf	8	;volatile
  2782  0D6C                     l67:
  2783  0D6C  0008               	return
  2784  0D6D                     __end_of_Lcd_Port:
  2785                           
  2786                           	psect	text13
  2787  06BD                     __ptext13:	
  2788 ;; *************** function _ADC_start *****************
  2789 ;; Defined at:
  2790 ;;		line 81 in file "ADC.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  channel         1    wreg     unsigned char 
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;  channel         1    2[BANK1 ] unsigned char 
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  1    wreg      void 
  2797 ;; Registers used:
  2798 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2804 ;;      Params:         0       0       0       0       0
  2805 ;;      Locals:         0       0       1       0       0
  2806 ;;      Temps:          0       0       2       0       0
  2807 ;;      Totals:         0       0       3       0       0
  2808 ;;Total ram usage:        3 bytes
  2809 ;; Hardware stack levels used: 1
  2810 ;; Hardware stack levels required when called: 3
  2811 ;; This function calls:
  2812 ;;		Nothing
  2813 ;; This function is called by:
  2814 ;;		_main
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818  06BD                     _ADC_start:	
  2819                           ;psect for function _ADC_start
  2820                           
  2821                           
  2822                           ;incstack = 0
  2823                           ; Regs used in _ADC_start: [wreg-fsr0h+status,2+status,0]
  2824                           ;ADC_start@channel stored from wreg
  2825  06BD  1683               	bsf	3,5	;RP0=1, select bank1
  2826  06BE  1303               	bcf	3,6	;RP1=0, select bank1
  2827  06BF  00A2               	movwf	ADC_start@channel^(0+128)
  2828  06C0                     l1680:
  2829                           
  2830                           ;ADC.c: 82:     if (ADCON0bits.GO == 0) {
  2831  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  2832  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  2833  06C2  189F               	btfsc	31,1	;volatile
  2834  06C3  2EC5               	goto	u1141
  2835  06C4  2EC6               	goto	u1140
  2836  06C5                     u1141:
  2837  06C5  2F63               	goto	l53
  2838  06C6                     u1140:
  2839  06C6  2F2C               	goto	l1716
  2840  06C7                     l1684:
  2841                           
  2842                           ;ADC.c: 85:                  ADCON0bits.CHS = 0b0000;
  2843  06C7  30C3               	movlw	-61
  2844  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2845  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2846  06CA  059F               	andwf	31,f	;volatile
  2847                           
  2848                           ;ADC.c: 86:                  break;
  2849  06CB  2F62               	goto	l38
  2850  06CC                     l1686:
  2851                           
  2852                           ;ADC.c: 89:                  ADCON0bits.CHS = 0b0001;
  2853  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  2854  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  2855  06CE  081F               	movf	31,w	;volatile
  2856  06CF  39C3               	andlw	-61
  2857  06D0  3804               	iorlw	4
  2858  06D1  009F               	movwf	31	;volatile
  2859                           
  2860                           ;ADC.c: 90:                  break;
  2861  06D2  2F62               	goto	l38
  2862  06D3                     l1688:
  2863                           
  2864                           ;ADC.c: 93:                  ADCON0bits.CHS = 0b0010;
  2865  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  2866  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  2867  06D5  081F               	movf	31,w	;volatile
  2868  06D6  39C3               	andlw	-61
  2869  06D7  3808               	iorlw	8
  2870  06D8  009F               	movwf	31	;volatile
  2871                           
  2872                           ;ADC.c: 94:                  break;
  2873  06D9  2F62               	goto	l38
  2874  06DA                     l1690:
  2875                           
  2876                           ;ADC.c: 97:                  ADCON0bits.CHS = 0b0011;
  2877  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  2878  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  2879  06DC  081F               	movf	31,w	;volatile
  2880  06DD  39C3               	andlw	-61
  2881  06DE  380C               	iorlw	12
  2882  06DF  009F               	movwf	31	;volatile
  2883                           
  2884                           ;ADC.c: 98:                  break;
  2885  06E0  2F62               	goto	l38
  2886  06E1                     l1692:
  2887                           
  2888                           ;ADC.c: 101:                  ADCON0bits.CHS = 0b0100;
  2889  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  2890  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  2891  06E3  081F               	movf	31,w	;volatile
  2892  06E4  39C3               	andlw	-61
  2893  06E5  3810               	iorlw	16
  2894  06E6  009F               	movwf	31	;volatile
  2895                           
  2896                           ;ADC.c: 102:                  break;
  2897  06E7  2F62               	goto	l38
  2898  06E8                     l1694:
  2899                           
  2900                           ;ADC.c: 105:                  ADCON0bits.CHS = 0b0101;
  2901  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  2902  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  2903  06EA  081F               	movf	31,w	;volatile
  2904  06EB  39C3               	andlw	-61
  2905  06EC  3814               	iorlw	20
  2906  06ED  009F               	movwf	31	;volatile
  2907                           
  2908                           ;ADC.c: 106:                  break;
  2909  06EE  2F62               	goto	l38
  2910  06EF                     l1696:
  2911                           
  2912                           ;ADC.c: 109:                  ADCON0bits.CHS = 0b0110;
  2913  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  2914  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  2915  06F1  081F               	movf	31,w	;volatile
  2916  06F2  39C3               	andlw	-61
  2917  06F3  3818               	iorlw	24
  2918  06F4  009F               	movwf	31	;volatile
  2919                           
  2920                           ;ADC.c: 110:                  break;
  2921  06F5  2F62               	goto	l38
  2922  06F6                     l1698:
  2923                           
  2924                           ;ADC.c: 113:                  ADCON0bits.CHS = 0b0111;
  2925  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  2926  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  2927  06F8  081F               	movf	31,w	;volatile
  2928  06F9  39C3               	andlw	-61
  2929  06FA  381C               	iorlw	28
  2930  06FB  009F               	movwf	31	;volatile
  2931                           
  2932                           ;ADC.c: 114:                  break;
  2933  06FC  2F62               	goto	l38
  2934  06FD                     l1700:
  2935                           
  2936                           ;ADC.c: 117:                  ADCON0bits.CHS = 0b1000;
  2937  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  2938  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  2939  06FF  081F               	movf	31,w	;volatile
  2940  0700  39C3               	andlw	-61
  2941  0701  3820               	iorlw	32
  2942  0702  009F               	movwf	31	;volatile
  2943                           
  2944                           ;ADC.c: 118:                  break;
  2945  0703  2F62               	goto	l38
  2946  0704                     l1702:
  2947                           
  2948                           ;ADC.c: 121:                  ADCON0bits.CHS = 0b1001;
  2949  0704  1283               	bcf	3,5	;RP0=0, select bank0
  2950  0705  1303               	bcf	3,6	;RP1=0, select bank0
  2951  0706  081F               	movf	31,w	;volatile
  2952  0707  39C3               	andlw	-61
  2953  0708  3824               	iorlw	36
  2954  0709  009F               	movwf	31	;volatile
  2955                           
  2956                           ;ADC.c: 122:                  break;
  2957  070A  2F62               	goto	l38
  2958  070B                     l1704:
  2959                           
  2960                           ;ADC.c: 125:                  ADCON0bits.CHS = 0b1010;
  2961  070B  1283               	bcf	3,5	;RP0=0, select bank0
  2962  070C  1303               	bcf	3,6	;RP1=0, select bank0
  2963  070D  081F               	movf	31,w	;volatile
  2964  070E  39C3               	andlw	-61
  2965  070F  3828               	iorlw	40
  2966  0710  009F               	movwf	31	;volatile
  2967                           
  2968                           ;ADC.c: 126:                  break;
  2969  0711  2F62               	goto	l38
  2970  0712                     l1706:
  2971                           
  2972                           ;ADC.c: 129:                  ADCON0bits.CHS = 0b1011;
  2973  0712  1283               	bcf	3,5	;RP0=0, select bank0
  2974  0713  1303               	bcf	3,6	;RP1=0, select bank0
  2975  0714  081F               	movf	31,w	;volatile
  2976  0715  39C3               	andlw	-61
  2977  0716  382C               	iorlw	44
  2978  0717  009F               	movwf	31	;volatile
  2979                           
  2980                           ;ADC.c: 130:                  break;
  2981  0718  2F62               	goto	l38
  2982  0719                     l1708:
  2983                           
  2984                           ;ADC.c: 133:                  ADCON0bits.CHS = 0b1100;
  2985  0719  1283               	bcf	3,5	;RP0=0, select bank0
  2986  071A  1303               	bcf	3,6	;RP1=0, select bank0
  2987  071B  081F               	movf	31,w	;volatile
  2988  071C  39C3               	andlw	-61
  2989  071D  3830               	iorlw	48
  2990  071E  009F               	movwf	31	;volatile
  2991                           
  2992                           ;ADC.c: 134:                  break;
  2993  071F  2F62               	goto	l38
  2994  0720                     l1710:
  2995                           
  2996                           ;ADC.c: 137:                  ADCON0bits.CHS = 0b1101;
  2997  0720  1283               	bcf	3,5	;RP0=0, select bank0
  2998  0721  1303               	bcf	3,6	;RP1=0, select bank0
  2999  0722  081F               	movf	31,w	;volatile
  3000  0723  39C3               	andlw	-61
  3001  0724  3834               	iorlw	52
  3002  0725  009F               	movwf	31	;volatile
  3003                           
  3004                           ;ADC.c: 138:                  break;
  3005  0726  2F62               	goto	l38
  3006  0727                     l1712:
  3007                           
  3008                           ;ADC.c: 141:                  ADCON0bits.CHS = 0b0000;
  3009  0727  30C3               	movlw	-61
  3010  0728  1283               	bcf	3,5	;RP0=0, select bank0
  3011  0729  1303               	bcf	3,6	;RP1=0, select bank0
  3012  072A  059F               	andwf	31,f	;volatile
  3013                           
  3014                           ;ADC.c: 142:                  break;
  3015  072B  2F62               	goto	l38
  3016  072C                     l1716:
  3017  072C  1683               	bsf	3,5	;RP0=1, select bank1
  3018  072D  1303               	bcf	3,6	;RP1=0, select bank1
  3019  072E  0822               	movf	ADC_start@channel^(0+128),w
  3020  072F  00A0               	movwf	??_ADC_start^(0+128)
  3021  0730  01A1               	clrf	(??_ADC_start^(0+128)+1)
  3022                           
  3023                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3024                           ; Switch size 1, requested type "simple"
  3025                           ; Number of cases is 1, Range of values is 0 to 0
  3026                           ; switch strategies available:
  3027                           ; Name         Instructions Cycles
  3028                           ; simple_byte            4     3 (average)
  3029                           ; direct_byte           11     8 (fixed)
  3030                           ; jumptable            260     6 (fixed)
  3031                           ;	Chosen strategy is simple_byte
  3032  0731  0821               	movf	(??_ADC_start+1)^(0+128),w
  3033  0732  3A00               	xorlw	0	; case 0
  3034  0733  1903               	skipnz
  3035  0734  2F36               	goto	l2206
  3036  0735  2F27               	goto	l1712
  3037  0736                     l2206:
  3038                           
  3039                           ; Switch size 1, requested type "simple"
  3040                           ; Number of cases is 14, Range of values is 0 to 13
  3041                           ; switch strategies available:
  3042                           ; Name         Instructions Cycles
  3043                           ; simple_byte           43    22 (average)
  3044                           ; direct_byte           50     8 (fixed)
  3045                           ; jumptable            260     6 (fixed)
  3046                           ;	Chosen strategy is simple_byte
  3047  0736  0820               	movf	??_ADC_start^(0+128),w
  3048  0737  3A00               	xorlw	0	; case 0
  3049  0738  1903               	skipnz
  3050  0739  2EC7               	goto	l1684
  3051  073A  3A01               	xorlw	1	; case 1
  3052  073B  1903               	skipnz
  3053  073C  2ECC               	goto	l1686
  3054  073D  3A03               	xorlw	3	; case 2
  3055  073E  1903               	skipnz
  3056  073F  2ED3               	goto	l1688
  3057  0740  3A01               	xorlw	1	; case 3
  3058  0741  1903               	skipnz
  3059  0742  2EDA               	goto	l1690
  3060  0743  3A07               	xorlw	7	; case 4
  3061  0744  1903               	skipnz
  3062  0745  2EE1               	goto	l1692
  3063  0746  3A01               	xorlw	1	; case 5
  3064  0747  1903               	skipnz
  3065  0748  2EE8               	goto	l1694
  3066  0749  3A03               	xorlw	3	; case 6
  3067  074A  1903               	skipnz
  3068  074B  2EEF               	goto	l1696
  3069  074C  3A01               	xorlw	1	; case 7
  3070  074D  1903               	skipnz
  3071  074E  2EF6               	goto	l1698
  3072  074F  3A0F               	xorlw	15	; case 8
  3073  0750  1903               	skipnz
  3074  0751  2EFD               	goto	l1700
  3075  0752  3A01               	xorlw	1	; case 9
  3076  0753  1903               	skipnz
  3077  0754  2F04               	goto	l1702
  3078  0755  3A03               	xorlw	3	; case 10
  3079  0756  1903               	skipnz
  3080  0757  2F0B               	goto	l1704
  3081  0758  3A01               	xorlw	1	; case 11
  3082  0759  1903               	skipnz
  3083  075A  2F12               	goto	l1706
  3084  075B  3A07               	xorlw	7	; case 12
  3085  075C  1903               	skipnz
  3086  075D  2F19               	goto	l1708
  3087  075E  3A01               	xorlw	1	; case 13
  3088  075F  1903               	skipnz
  3089  0760  2F20               	goto	l1710
  3090  0761  2F27               	goto	l1712
  3091  0762                     l38:
  3092                           
  3093                           ;ADC.c: 144:         ADCON0bits.GO = 1;
  3094  0762  149F               	bsf	31,1	;volatile
  3095  0763                     l53:
  3096  0763  0008               	return
  3097  0764                     __end_of_ADC_start:
  3098                           
  3099                           	psect	text14
  3100  046A                     __ptext14:	
  3101 ;; *************** function _isr *****************
  3102 ;; Defined at:
  3103 ;;		line 59 in file "main_02.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;		None
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;		None
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  1    wreg      void 
  3110 ;; Registers used:
  3111 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3117 ;;      Params:         0       0       0       0       0
  3118 ;;      Locals:         0       4       0       0       0
  3119 ;;      Temps:          0       4       0       0       0
  3120 ;;      Totals:         0       8       0       0       0
  3121 ;;Total ram usage:        8 bytes
  3122 ;; Hardware stack levels used: 1
  3123 ;; Hardware stack levels required when called: 2
  3124 ;; This function calls:
  3125 ;;		_ADC_read
  3126 ;;		___flmul
  3127 ;;		___fltol
  3128 ;;		___xxtofl
  3129 ;; This function is called by:
  3130 ;;		Interrupt level 1
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134  046A                     _isr:	
  3135                           ;psect for function _isr
  3136                           
  3137  046A                     i1l2012:
  3138                           
  3139                           ;main_02.c: 61:     if (PIR1bits.ADIF)
  3140  046A  1F0C               	btfss	12,6	;volatile
  3141  046B  2C6D               	goto	u181_21
  3142  046C  2C6E               	goto	u181_20
  3143  046D                     u181_21:
  3144  046D  2D3D               	goto	i1l161
  3145  046E                     u181_20:
  3146  046E                     i1l2014:
  3147                           
  3148                           ;main_02.c: 62:     {;main_02.c: 63:         if (ADCON0bits.CHS == 0b0000)
  3149  046E  0C1F               	rrf	31,w	;volatile
  3150  046F  00C5               	movwf	??_isr
  3151  0470  0C45               	rrf	??_isr,w
  3152  0471  390F               	andlw	15
  3153  0472  3A00               	xorlw	0
  3154  0473  1D03               	skipz
  3155  0474  2C76               	goto	u182_21
  3156  0475  2C77               	goto	u182_20
  3157  0476                     u182_21:
  3158  0476  2CDA               	goto	i1l2022
  3159  0477                     u182_20:
  3160  0477                     i1l2016:
  3161                           
  3162                           ;main_02.c: 64:         {;main_02.c: 65:             ADC_channel_00 = ADC_read();
  3163  0477  120A  158A  2589  120A  118A  	fcall	_ADC_read
  3164  047C  0871               	movf	?_ADC_read+1,w
  3165  047D  1283               	bcf	3,5	;RP0=0, select bank0
  3166  047E  1303               	bcf	3,6	;RP1=0, select bank0
  3167  047F  00D0               	movwf	_ADC_channel_00+1
  3168  0480  0870               	movf	?_ADC_read,w
  3169  0481  00CF               	movwf	_ADC_channel_00
  3170  0482                     i1l2018:
  3171                           
  3172                           ;main_02.c: 66:             ADC_channel_00 = (int) (ADC_channel_00*((float )5/1023)*(100
      +                          ));
  3173  0482  084F               	movf	_ADC_channel_00,w
  3174  0483  00F0               	movwf	___xxtofl@val
  3175  0484  0850               	movf	_ADC_channel_00+1,w
  3176  0485  00F1               	movwf	___xxtofl@val+1
  3177  0486  01F2               	clrf	___xxtofl@val+2
  3178  0487  01F3               	clrf	___xxtofl@val+3
  3179  0488  3000               	movlw	0
  3180  0489  120A  118A  2603  120A  118A  	fcall	___xxtofl
  3181  048E  0873               	movf	?___xxtofl+3,w
  3182  048F  1283               	bcf	3,5	;RP0=0, select bank0
  3183  0490  1303               	bcf	3,6	;RP1=0, select bank0
  3184  0491  00A7               	movwf	___flmul@a+3
  3185  0492  0872               	movf	?___xxtofl+2,w
  3186  0493  00A6               	movwf	___flmul@a+2
  3187  0494  0871               	movf	?___xxtofl+1,w
  3188  0495  00A5               	movwf	___flmul@a+1
  3189  0496  0870               	movf	?___xxtofl,w
  3190  0497  00A4               	movwf	___flmul@a
  3191  0498  303B               	movlw	59
  3192  0499  00A3               	movwf	___flmul@b+3
  3193  049A  30A0               	movlw	160
  3194  049B  00A2               	movwf	___flmul@b+2
  3195  049C  3028               	movlw	40
  3196  049D  00A1               	movwf	___flmul@b+1
  3197  049E  300A               	movlw	10
  3198  049F  00A0               	movwf	___flmul@b
  3199  04A0  120A  118A  202A  120A  118A  	fcall	___flmul
  3200  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  3201  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  3202  04A7  0823               	movf	?___flmul+3,w
  3203  04A8  00CC               	movwf	_isr$1002+3
  3204  04A9  0822               	movf	?___flmul+2,w
  3205  04AA  00CB               	movwf	_isr$1002+2
  3206  04AB  0821               	movf	?___flmul+1,w
  3207  04AC  00CA               	movwf	_isr$1002+1
  3208  04AD  0820               	movf	?___flmul,w
  3209  04AE  00C9               	movwf	_isr$1002
  3210  04AF                     i1l2020:
  3211                           
  3212                           ;main_02.c: 66:             ADC_channel_00 = (int) (ADC_channel_00*((float )5/1023)*(100
      +                          ));
  3213  04AF  084C               	movf	_isr$1002+3,w
  3214  04B0  00A7               	movwf	___flmul@a+3
  3215  04B1  084B               	movf	_isr$1002+2,w
  3216  04B2  00A6               	movwf	___flmul@a+2
  3217  04B3  084A               	movf	_isr$1002+1,w
  3218  04B4  00A5               	movwf	___flmul@a+1
  3219  04B5  0849               	movf	_isr$1002,w
  3220  04B6  00A4               	movwf	___flmul@a
  3221  04B7  3042               	movlw	66
  3222  04B8  00A3               	movwf	___flmul@b+3
  3223  04B9  30C8               	movlw	200
  3224  04BA  00A2               	movwf	___flmul@b+2
  3225  04BB  3000               	movlw	0
  3226  04BC  00A1               	movwf	___flmul@b+1
  3227  04BD  3000               	movlw	0
  3228  04BE  00A0               	movwf	___flmul@b
  3229  04BF  120A  118A  202A  120A  118A  	fcall	___flmul
  3230  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  3231  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  3232  04C6  0823               	movf	?___flmul+3,w
  3233  04C7  00BD               	movwf	___fltol@f1+3
  3234  04C8  0822               	movf	?___flmul+2,w
  3235  04C9  00BC               	movwf	___fltol@f1+2
  3236  04CA  0821               	movf	?___flmul+1,w
  3237  04CB  00BB               	movwf	___fltol@f1+1
  3238  04CC  0820               	movf	?___flmul,w
  3239  04CD  00BA               	movwf	___fltol@f1
  3240  04CE  120A  118A  2764  120A  118A  	fcall	___fltol
  3241  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  3242  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  3243  04D5  083B               	movf	?___fltol+1,w
  3244  04D6  00D0               	movwf	_ADC_channel_00+1
  3245  04D7  083A               	movf	?___fltol,w
  3246  04D8  00CF               	movwf	_ADC_channel_00
  3247                           
  3248                           ;main_02.c: 67:         }
  3249  04D9  2D3C               	goto	i1l2028
  3250  04DA                     i1l2022:
  3251                           
  3252                           ;main_02.c: 69:         {;main_02.c: 70:             ADC_channel_01 = ADC_read();
  3253  04DA  120A  158A  2589  120A  118A  	fcall	_ADC_read
  3254  04DF  0871               	movf	?_ADC_read+1,w
  3255  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  3256  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  3257  04E2  00CE               	movwf	_ADC_channel_01+1
  3258  04E3  0870               	movf	?_ADC_read,w
  3259  04E4  00CD               	movwf	_ADC_channel_01
  3260  04E5                     i1l2024:
  3261                           
  3262                           ;main_02.c: 71:             ADC_channel_01 = (int) (ADC_channel_01*((float )5/1023)*(100
      +                          ));
  3263  04E5  084D               	movf	_ADC_channel_01,w
  3264  04E6  00F0               	movwf	___xxtofl@val
  3265  04E7  084E               	movf	_ADC_channel_01+1,w
  3266  04E8  00F1               	movwf	___xxtofl@val+1
  3267  04E9  01F2               	clrf	___xxtofl@val+2
  3268  04EA  01F3               	clrf	___xxtofl@val+3
  3269  04EB  3000               	movlw	0
  3270  04EC  120A  118A  2603  120A  118A  	fcall	___xxtofl
  3271  04F1  0873               	movf	?___xxtofl+3,w
  3272  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  3273  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  3274  04F4  00A7               	movwf	___flmul@a+3
  3275  04F5  0872               	movf	?___xxtofl+2,w
  3276  04F6  00A6               	movwf	___flmul@a+2
  3277  04F7  0871               	movf	?___xxtofl+1,w
  3278  04F8  00A5               	movwf	___flmul@a+1
  3279  04F9  0870               	movf	?___xxtofl,w
  3280  04FA  00A4               	movwf	___flmul@a
  3281  04FB  303B               	movlw	59
  3282  04FC  00A3               	movwf	___flmul@b+3
  3283  04FD  30A0               	movlw	160
  3284  04FE  00A2               	movwf	___flmul@b+2
  3285  04FF  3028               	movlw	40
  3286  0500  00A1               	movwf	___flmul@b+1
  3287  0501  300A               	movlw	10
  3288  0502  00A0               	movwf	___flmul@b
  3289  0503  120A  118A  202A  120A  118A  	fcall	___flmul
  3290  0508  1283               	bcf	3,5	;RP0=0, select bank0
  3291  0509  1303               	bcf	3,6	;RP1=0, select bank0
  3292  050A  0823               	movf	?___flmul+3,w
  3293  050B  00CC               	movwf	_isr$1002+3
  3294  050C  0822               	movf	?___flmul+2,w
  3295  050D  00CB               	movwf	_isr$1002+2
  3296  050E  0821               	movf	?___flmul+1,w
  3297  050F  00CA               	movwf	_isr$1002+1
  3298  0510  0820               	movf	?___flmul,w
  3299  0511  00C9               	movwf	_isr$1002
  3300  0512                     i1l2026:
  3301                           
  3302                           ;main_02.c: 71:             ADC_channel_01 = (int) (ADC_channel_01*((float )5/1023)*(100
      +                          ));
  3303  0512  084C               	movf	_isr$1002+3,w
  3304  0513  00A7               	movwf	___flmul@a+3
  3305  0514  084B               	movf	_isr$1002+2,w
  3306  0515  00A6               	movwf	___flmul@a+2
  3307  0516  084A               	movf	_isr$1002+1,w
  3308  0517  00A5               	movwf	___flmul@a+1
  3309  0518  0849               	movf	_isr$1002,w
  3310  0519  00A4               	movwf	___flmul@a
  3311  051A  3042               	movlw	66
  3312  051B  00A3               	movwf	___flmul@b+3
  3313  051C  30C8               	movlw	200
  3314  051D  00A2               	movwf	___flmul@b+2
  3315  051E  3000               	movlw	0
  3316  051F  00A1               	movwf	___flmul@b+1
  3317  0520  3000               	movlw	0
  3318  0521  00A0               	movwf	___flmul@b
  3319  0522  120A  118A  202A  120A  118A  	fcall	___flmul
  3320  0527  1283               	bcf	3,5	;RP0=0, select bank0
  3321  0528  1303               	bcf	3,6	;RP1=0, select bank0
  3322  0529  0823               	movf	?___flmul+3,w
  3323  052A  00BD               	movwf	___fltol@f1+3
  3324  052B  0822               	movf	?___flmul+2,w
  3325  052C  00BC               	movwf	___fltol@f1+2
  3326  052D  0821               	movf	?___flmul+1,w
  3327  052E  00BB               	movwf	___fltol@f1+1
  3328  052F  0820               	movf	?___flmul,w
  3329  0530  00BA               	movwf	___fltol@f1
  3330  0531  120A  118A  2764  120A  118A  	fcall	___fltol
  3331  0536  1283               	bcf	3,5	;RP0=0, select bank0
  3332  0537  1303               	bcf	3,6	;RP1=0, select bank0
  3333  0538  083B               	movf	?___fltol+1,w
  3334  0539  00CE               	movwf	_ADC_channel_01+1
  3335  053A  083A               	movf	?___fltol,w
  3336  053B  00CD               	movwf	_ADC_channel_01
  3337  053C                     i1l2028:
  3338                           
  3339                           ;main_02.c: 73:     PIR1bits.ADIF = 0;
  3340  053C  130C               	bcf	12,6	;volatile
  3341  053D                     i1l161:
  3342  053D  0848               	movf	??_isr+3,w
  3343  053E  00FF               	movwf	btemp+1
  3344  053F  0847               	movf	??_isr+2,w
  3345  0540  008A               	movwf	10
  3346  0541  0E46               	swapf	??_isr+1,w
  3347  0542  0083               	movwf	3
  3348  0543  0EFE               	swapf	btemp,f
  3349  0544  0E7E               	swapf	btemp,w
  3350  0545  0009               	retfie
  3351  0546                     __end_of_isr:
  3352                           
  3353                           	psect	intentry
  3354  0004                     __pintentry:	
  3355                           ;incstack = 0
  3356                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3357                           
  3358  0004                     interrupt_function:
  3359  007E                     saved_w	set	btemp
  3360  0004  00FE               	movwf	btemp
  3361  0005  0E03               	swapf	3,w
  3362  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3363  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3364  0008  00C6               	movwf	??_isr+1
  3365  0009  080A               	movf	10,w
  3366  000A  00C7               	movwf	??_isr+2
  3367  000B  087F               	movf	btemp+1,w
  3368  000C  00C8               	movwf	??_isr+3
  3369  000D  120A  118A  2C6A   	ljmp	_isr
  3370                           
  3371                           	psect	text15
  3372  0603                     __ptext15:	
  3373 ;; *************** function ___xxtofl *****************
  3374 ;; Defined at:
  3375 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\xxtofl.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;  sign            1    wreg     unsigned char 
  3378 ;;  val             4    0[COMMON] long 
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;  sign            1    8[COMMON] unsigned char 
  3381 ;;  arg             4   10[COMMON] unsigned long 
  3382 ;;  exp             1    9[COMMON] unsigned char 
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  4    0[COMMON] unsigned char 
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3392 ;;      Params:         4       0       0       0       0
  3393 ;;      Locals:         6       0       0       0       0
  3394 ;;      Temps:          4       0       0       0       0
  3395 ;;      Totals:        14       0       0       0       0
  3396 ;;Total ram usage:       14 bytes
  3397 ;; Hardware stack levels used: 1
  3398 ;; This function calls:
  3399 ;;		Nothing
  3400 ;; This function is called by:
  3401 ;;		_isr
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405  0603                     ___xxtofl:	
  3406                           ;psect for function ___xxtofl
  3407                           
  3408                           
  3409                           ;incstack = 0
  3410                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3411                           ;___xxtofl@sign stored from wreg
  3412  0603  00F8               	movwf	___xxtofl@sign
  3413  0604                     i1l1962:
  3414  0604  0878               	movf	___xxtofl@sign,w
  3415  0605  1903               	btfsc	3,2
  3416  0606  2E08               	goto	u167_21
  3417  0607  2E09               	goto	u167_20
  3418  0608                     u167_21:
  3419  0608  2E1D               	goto	i1l1968
  3420  0609                     u167_20:
  3421  0609                     i1l1964:
  3422  0609  1FF3               	btfss	___xxtofl@val+3,7
  3423  060A  2E0C               	goto	u168_21
  3424  060B  2E0D               	goto	u168_20
  3425  060C                     u168_21:
  3426  060C  2E1D               	goto	i1l1968
  3427  060D                     u168_20:
  3428  060D                     i1l1966:
  3429  060D  0970               	comf	___xxtofl@val,w
  3430  060E  00FA               	movwf	___xxtofl@arg
  3431  060F  0971               	comf	___xxtofl@val+1,w
  3432  0610  00FB               	movwf	___xxtofl@arg+1
  3433  0611  0972               	comf	___xxtofl@val+2,w
  3434  0612  00FC               	movwf	___xxtofl@arg+2
  3435  0613  0973               	comf	___xxtofl@val+3,w
  3436  0614  00FD               	movwf	___xxtofl@arg+3
  3437  0615  0AFA               	incf	___xxtofl@arg,f
  3438  0616  1903               	skipnz
  3439  0617  0AFB               	incf	___xxtofl@arg+1,f
  3440  0618  1903               	skipnz
  3441  0619  0AFC               	incf	___xxtofl@arg+2,f
  3442  061A  1903               	skipnz
  3443  061B  0AFD               	incf	___xxtofl@arg+3,f
  3444  061C  2E25               	goto	i1l709
  3445  061D                     i1l1968:
  3446  061D  0873               	movf	___xxtofl@val+3,w
  3447  061E  00FD               	movwf	___xxtofl@arg+3
  3448  061F  0872               	movf	___xxtofl@val+2,w
  3449  0620  00FC               	movwf	___xxtofl@arg+2
  3450  0621  0871               	movf	___xxtofl@val+1,w
  3451  0622  00FB               	movwf	___xxtofl@arg+1
  3452  0623  0870               	movf	___xxtofl@val,w
  3453  0624  00FA               	movwf	___xxtofl@arg
  3454  0625                     i1l709:
  3455  0625  0873               	movf	___xxtofl@val+3,w
  3456  0626  0472               	iorwf	___xxtofl@val+2,w
  3457  0627  0471               	iorwf	___xxtofl@val+1,w
  3458  0628  0470               	iorwf	___xxtofl@val,w
  3459  0629  1D03               	skipz
  3460  062A  2E2C               	goto	u169_21
  3461  062B  2E2D               	goto	u169_20
  3462  062C                     u169_21:
  3463  062C  2E36               	goto	i1l1974
  3464  062D                     u169_20:
  3465  062D                     i1l1970:
  3466  062D  3000               	movlw	0
  3467  062E  00F3               	movwf	?___xxtofl+3
  3468  062F  3000               	movlw	0
  3469  0630  00F2               	movwf	?___xxtofl+2
  3470  0631  3000               	movlw	0
  3471  0632  00F1               	movwf	?___xxtofl+1
  3472  0633  3000               	movlw	0
  3473  0634  00F0               	movwf	?___xxtofl
  3474  0635  2EBC               	goto	i1l711
  3475  0636                     i1l1974:
  3476  0636  3096               	movlw	150
  3477  0637  00F4               	movwf	??___xxtofl
  3478  0638  0874               	movf	??___xxtofl,w
  3479  0639  00F9               	movwf	___xxtofl@exp
  3480  063A  2E48               	goto	i1l1978
  3481  063B                     i1l1976:
  3482  063B  3001               	movlw	1
  3483  063C  00F4               	movwf	??___xxtofl
  3484  063D  0874               	movf	??___xxtofl,w
  3485  063E  07F9               	addwf	___xxtofl@exp,f
  3486  063F  3001               	movlw	1
  3487  0640                     u170_25:
  3488  0640  1003               	clrc
  3489  0641  0CFD               	rrf	___xxtofl@arg+3,f
  3490  0642  0CFC               	rrf	___xxtofl@arg+2,f
  3491  0643  0CFB               	rrf	___xxtofl@arg+1,f
  3492  0644  0CFA               	rrf	___xxtofl@arg,f
  3493  0645  3EFF               	addlw	-1
  3494  0646  1D03               	skipz
  3495  0647  2E40               	goto	u170_25
  3496  0648                     i1l1978:
  3497  0648  30FE               	movlw	254
  3498  0649  057D               	andwf	___xxtofl@arg+3,w
  3499  064A  1D03               	btfss	3,2
  3500  064B  2E4D               	goto	u171_21
  3501  064C  2E4E               	goto	u171_20
  3502  064D                     u171_21:
  3503  064D  2E3B               	goto	i1l1976
  3504  064E                     u171_20:
  3505  064E  2E6A               	goto	i1l715
  3506  064F                     i1l1980:
  3507  064F  3001               	movlw	1
  3508  0650  00F4               	movwf	??___xxtofl
  3509  0651  0874               	movf	??___xxtofl,w
  3510  0652  07F9               	addwf	___xxtofl@exp,f
  3511  0653                     i1l1982:
  3512  0653  3001               	movlw	1
  3513  0654  07FA               	addwf	___xxtofl@arg,f
  3514  0655  3000               	movlw	0
  3515  0656  1803               	skipnc
  3516  0657  3001               	movlw	1
  3517  0658  07FB               	addwf	___xxtofl@arg+1,f
  3518  0659  3000               	movlw	0
  3519  065A  1803               	skipnc
  3520  065B  3001               	movlw	1
  3521  065C  07FC               	addwf	___xxtofl@arg+2,f
  3522  065D  3000               	movlw	0
  3523  065E  1803               	skipnc
  3524  065F  3001               	movlw	1
  3525  0660  07FD               	addwf	___xxtofl@arg+3,f
  3526  0661                     i1l1984:
  3527  0661  3001               	movlw	1
  3528  0662                     u172_25:
  3529  0662  1003               	clrc
  3530  0663  0CFD               	rrf	___xxtofl@arg+3,f
  3531  0664  0CFC               	rrf	___xxtofl@arg+2,f
  3532  0665  0CFB               	rrf	___xxtofl@arg+1,f
  3533  0666  0CFA               	rrf	___xxtofl@arg,f
  3534  0667  3EFF               	addlw	-1
  3535  0668  1D03               	skipz
  3536  0669  2E62               	goto	u172_25
  3537  066A                     i1l715:
  3538  066A  30FF               	movlw	255
  3539  066B  057D               	andwf	___xxtofl@arg+3,w
  3540  066C  1D03               	btfss	3,2
  3541  066D  2E6F               	goto	u173_21
  3542  066E  2E70               	goto	u173_20
  3543  066F                     u173_21:
  3544  066F  2E4F               	goto	i1l1980
  3545  0670                     u173_20:
  3546  0670  2E7C               	goto	i1l1988
  3547  0671                     i1l1986:
  3548  0671  3001               	movlw	1
  3549  0672  02F9               	subwf	___xxtofl@exp,f
  3550  0673  3001               	movlw	1
  3551  0674  00F4               	movwf	??___xxtofl
  3552  0675                     u174_25:
  3553  0675  1003               	clrc
  3554  0676  0DFA               	rlf	___xxtofl@arg,f
  3555  0677  0DFB               	rlf	___xxtofl@arg+1,f
  3556  0678  0DFC               	rlf	___xxtofl@arg+2,f
  3557  0679  0DFD               	rlf	___xxtofl@arg+3,f
  3558  067A  0BF4               	decfsz	??___xxtofl,f
  3559  067B  2E75               	goto	u174_25
  3560  067C                     i1l1988:
  3561  067C  1BFC               	btfsc	___xxtofl@arg+2,7
  3562  067D  2E7F               	goto	u175_21
  3563  067E  2E80               	goto	u175_20
  3564  067F                     u175_21:
  3565  067F  2E86               	goto	i1l722
  3566  0680                     u175_20:
  3567  0680                     i1l1990:
  3568  0680  3002               	movlw	2
  3569  0681  0279               	subwf	___xxtofl@exp,w
  3570  0682  1803               	skipnc
  3571  0683  2E85               	goto	u176_21
  3572  0684  2E86               	goto	u176_20
  3573  0685                     u176_21:
  3574  0685  2E71               	goto	i1l1986
  3575  0686                     u176_20:
  3576  0686                     i1l722:
  3577  0686  1879               	btfsc	___xxtofl@exp,0
  3578  0687  2E89               	goto	u177_21
  3579  0688  2E8A               	goto	u177_20
  3580  0689                     u177_21:
  3581  0689  2E92               	goto	i1l723
  3582  068A                     u177_20:
  3583  068A                     i1l1992:
  3584  068A  30FF               	movlw	255
  3585  068B  05FA               	andwf	___xxtofl@arg,f
  3586  068C  30FF               	movlw	255
  3587  068D  05FB               	andwf	___xxtofl@arg+1,f
  3588  068E  307F               	movlw	127
  3589  068F  05FC               	andwf	___xxtofl@arg+2,f
  3590  0690  30FF               	movlw	255
  3591  0691  05FD               	andwf	___xxtofl@arg+3,f
  3592  0692                     i1l723:
  3593  0692  1003               	clrc
  3594  0693  0CF9               	rrf	___xxtofl@exp,f
  3595  0694                     i1l1994:
  3596  0694  0879               	movf	___xxtofl@exp,w
  3597  0695  00F4               	movwf	??___xxtofl
  3598  0696  01F5               	clrf	??___xxtofl+1
  3599  0697  01F6               	clrf	??___xxtofl+2
  3600  0698  01F7               	clrf	??___xxtofl+3
  3601  0699  3018               	movlw	24
  3602  069A                     u178_25:
  3603  069A  1003               	clrc
  3604  069B  0DF4               	rlf	??___xxtofl,f
  3605  069C  0DF5               	rlf	??___xxtofl+1,f
  3606  069D  0DF6               	rlf	??___xxtofl+2,f
  3607  069E  0DF7               	rlf	??___xxtofl+3,f
  3608  069F                     u178_20:
  3609  069F  3EFF               	addlw	-1
  3610  06A0  1D03               	skipz
  3611  06A1  2E9A               	goto	u178_25
  3612  06A2  0874               	movf	??___xxtofl,w
  3613  06A3  04FA               	iorwf	___xxtofl@arg,f
  3614  06A4  0875               	movf	??___xxtofl+1,w
  3615  06A5  04FB               	iorwf	___xxtofl@arg+1,f
  3616  06A6  0876               	movf	??___xxtofl+2,w
  3617  06A7  04FC               	iorwf	___xxtofl@arg+2,f
  3618  06A8  0877               	movf	??___xxtofl+3,w
  3619  06A9  04FD               	iorwf	___xxtofl@arg+3,f
  3620  06AA                     i1l1996:
  3621  06AA  0878               	movf	___xxtofl@sign,w
  3622  06AB  1903               	btfsc	3,2
  3623  06AC  2EAE               	goto	u179_21
  3624  06AD  2EAF               	goto	u179_20
  3625  06AE                     u179_21:
  3626  06AE  2EB4               	goto	i1l2002
  3627  06AF                     u179_20:
  3628  06AF                     i1l1998:
  3629  06AF  1FF3               	btfss	___xxtofl@val+3,7
  3630  06B0  2EB2               	goto	u180_21
  3631  06B1  2EB3               	goto	u180_20
  3632  06B2                     u180_21:
  3633  06B2  2EB4               	goto	i1l2002
  3634  06B3                     u180_20:
  3635  06B3                     i1l2000:
  3636  06B3  17FD               	bsf	___xxtofl@arg+3,7
  3637  06B4                     i1l2002:
  3638  06B4  087D               	movf	___xxtofl@arg+3,w
  3639  06B5  00F3               	movwf	?___xxtofl+3
  3640  06B6  087C               	movf	___xxtofl@arg+2,w
  3641  06B7  00F2               	movwf	?___xxtofl+2
  3642  06B8  087B               	movf	___xxtofl@arg+1,w
  3643  06B9  00F1               	movwf	?___xxtofl+1
  3644  06BA  087A               	movf	___xxtofl@arg,w
  3645  06BB  00F0               	movwf	?___xxtofl
  3646  06BC                     i1l711:
  3647  06BC  0008               	return
  3648  06BD                     __end_of___xxtofl:
  3649                           
  3650                           	psect	text16
  3651  0764                     __ptext16:	
  3652 ;; *************** function ___fltol *****************
  3653 ;; Defined at:
  3654 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\fltol.c"
  3655 ;; Parameters:    Size  Location     Type
  3656 ;;  f1              4   26[BANK0 ] unsigned char 
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;  exp1            1   36[BANK0 ] unsigned char 
  3659 ;;  sign1           1   35[BANK0 ] unsigned char 
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  4   26[BANK0 ] long 
  3662 ;; Registers used:
  3663 ;;		wreg, status,2, status,0
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3669 ;;      Params:         0       4       0       0       0
  3670 ;;      Locals:         0       2       0       0       0
  3671 ;;      Temps:          0       5       0       0       0
  3672 ;;      Totals:         0      11       0       0       0
  3673 ;;Total ram usage:       11 bytes
  3674 ;; Hardware stack levels used: 1
  3675 ;; This function calls:
  3676 ;;		Nothing
  3677 ;; This function is called by:
  3678 ;;		_isr
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682  0764                     ___fltol:	
  3683                           ;psect for function ___fltol
  3684                           
  3685  0764                     i1l1786:	
  3686                           ;incstack = 0
  3687                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3688                           
  3689  0764  1003               	clrc
  3690  0765  1283               	bcf	3,5	;RP0=0, select bank0
  3691  0766  1303               	bcf	3,6	;RP1=0, select bank0
  3692  0767  0D3C               	rlf	___fltol@f1+2,w
  3693  0768  0D3D               	rlf	___fltol@f1+3,w
  3694  0769  00BE               	movwf	??___fltol
  3695  076A  083E               	movf	??___fltol,w
  3696  076B  00C4               	movwf	___fltol@exp1
  3697  076C  0844               	movf	___fltol@exp1,w
  3698  076D  1D03               	btfss	3,2
  3699  076E  2F70               	goto	u120_21
  3700  076F  2F71               	goto	u120_20
  3701  0770                     u120_21:
  3702  0770  2F7A               	goto	i1l1792
  3703  0771                     u120_20:
  3704  0771                     i1l1788:
  3705  0771  3000               	movlw	0
  3706  0772  00BD               	movwf	?___fltol+3
  3707  0773  3000               	movlw	0
  3708  0774  00BC               	movwf	?___fltol+2
  3709  0775  3000               	movlw	0
  3710  0776  00BB               	movwf	?___fltol+1
  3711  0777  3000               	movlw	0
  3712  0778  00BA               	movwf	?___fltol
  3713  0779  2FDF               	goto	i1l462
  3714  077A                     i1l1792:
  3715  077A  083A               	movf	___fltol@f1,w
  3716  077B  00BE               	movwf	??___fltol
  3717  077C  083B               	movf	___fltol@f1+1,w
  3718  077D  00BF               	movwf	??___fltol+1
  3719  077E  083C               	movf	___fltol@f1+2,w
  3720  077F  00C0               	movwf	??___fltol+2
  3721  0780  083D               	movf	___fltol@f1+3,w
  3722  0781  00C1               	movwf	??___fltol+3
  3723  0782  301F               	movlw	31
  3724  0783                     u121_25:
  3725  0783  1003               	clrc
  3726  0784  0CC1               	rrf	??___fltol+3,f
  3727  0785  0CC0               	rrf	??___fltol+2,f
  3728  0786  0CBF               	rrf	??___fltol+1,f
  3729  0787  0CBE               	rrf	??___fltol,f
  3730  0788                     u121_20:
  3731  0788  3EFF               	addlw	-1
  3732  0789  1D03               	skipz
  3733  078A  2F83               	goto	u121_25
  3734  078B  083E               	movf	??___fltol,w
  3735  078C  00C2               	movwf	??___fltol+4
  3736  078D  0842               	movf	??___fltol+4,w
  3737  078E  00C3               	movwf	___fltol@sign1
  3738  078F                     i1l1794:
  3739  078F  17BC               	bsf	___fltol@f1+2,7
  3740  0790                     i1l1796:
  3741  0790  30FF               	movlw	255
  3742  0791  05BA               	andwf	___fltol@f1,f
  3743  0792  30FF               	movlw	255
  3744  0793  05BB               	andwf	___fltol@f1+1,f
  3745  0794  30FF               	movlw	255
  3746  0795  05BC               	andwf	___fltol@f1+2,f
  3747  0796  3000               	movlw	0
  3748  0797  05BD               	andwf	___fltol@f1+3,f
  3749  0798                     i1l1798:
  3750  0798  3096               	movlw	150
  3751  0799  02C4               	subwf	___fltol@exp1,f
  3752  079A                     i1l1800:
  3753  079A  1FC4               	btfss	___fltol@exp1,7
  3754  079B  2F9D               	goto	u122_21
  3755  079C  2F9E               	goto	u122_20
  3756  079D                     u122_21:
  3757  079D  2FB8               	goto	i1l1810
  3758  079E                     u122_20:
  3759  079E                     i1l1802:
  3760  079E  0844               	movf	___fltol@exp1,w
  3761  079F  3A80               	xorlw	128
  3762  07A0  3E97               	addlw	151
  3763  07A1  1803               	skipnc
  3764  07A2  2FA4               	goto	u123_21
  3765  07A3  2FA5               	goto	u123_20
  3766  07A4                     u123_21:
  3767  07A4  2FA6               	goto	i1l1808
  3768  07A5                     u123_20:
  3769  07A5  2F71               	goto	i1l1788
  3770  07A6                     i1l1808:
  3771  07A6  3001               	movlw	1
  3772  07A7                     u124_25:
  3773  07A7  1003               	clrc
  3774  07A8  0CBD               	rrf	___fltol@f1+3,f
  3775  07A9  0CBC               	rrf	___fltol@f1+2,f
  3776  07AA  0CBB               	rrf	___fltol@f1+1,f
  3777  07AB  0CBA               	rrf	___fltol@f1,f
  3778  07AC  3EFF               	addlw	-1
  3779  07AD  1D03               	skipz
  3780  07AE  2FA7               	goto	u124_25
  3781  07AF  3001               	movlw	1
  3782  07B0  00BE               	movwf	??___fltol
  3783  07B1  083E               	movf	??___fltol,w
  3784  07B2  07C4               	addwf	___fltol@exp1,f
  3785  07B3  1D03               	btfss	3,2
  3786  07B4  2FB6               	goto	u125_21
  3787  07B5  2FB7               	goto	u125_20
  3788  07B6                     u125_21:
  3789  07B6  2FA6               	goto	i1l1808
  3790  07B7                     u125_20:
  3791  07B7  2FCF               	goto	i1l1818
  3792  07B8                     i1l1810:
  3793  07B8  3020               	movlw	32
  3794  07B9  0244               	subwf	___fltol@exp1,w
  3795  07BA  1C03               	skipc
  3796  07BB  2FBD               	goto	u126_21
  3797  07BC  2FBE               	goto	u126_20
  3798  07BD                     u126_21:
  3799  07BD  2FCA               	goto	i1l469
  3800  07BE                     u126_20:
  3801  07BE  2F71               	goto	i1l1788
  3802  07BF                     i1l1816:
  3803  07BF  3001               	movlw	1
  3804  07C0  00BE               	movwf	??___fltol
  3805  07C1                     u127_25:
  3806  07C1  1003               	clrc
  3807  07C2  0DBA               	rlf	___fltol@f1,f
  3808  07C3  0DBB               	rlf	___fltol@f1+1,f
  3809  07C4  0DBC               	rlf	___fltol@f1+2,f
  3810  07C5  0DBD               	rlf	___fltol@f1+3,f
  3811  07C6  0BBE               	decfsz	??___fltol,f
  3812  07C7  2FC1               	goto	u127_25
  3813  07C8  3001               	movlw	1
  3814  07C9  02C4               	subwf	___fltol@exp1,f
  3815  07CA                     i1l469:
  3816  07CA  0844               	movf	___fltol@exp1,w
  3817  07CB  1D03               	btfss	3,2
  3818  07CC  2FCE               	goto	u128_21
  3819  07CD  2FCF               	goto	u128_20
  3820  07CE                     u128_21:
  3821  07CE  2FBF               	goto	i1l1816
  3822  07CF                     u128_20:
  3823  07CF                     i1l1818:
  3824  07CF  0843               	movf	___fltol@sign1,w
  3825  07D0  1903               	btfsc	3,2
  3826  07D1  2FD3               	goto	u129_21
  3827  07D2  2FD4               	goto	u129_20
  3828  07D3                     u129_21:
  3829  07D3  2FDF               	goto	i1l472
  3830  07D4                     u129_20:
  3831  07D4                     i1l1820:
  3832  07D4  09BA               	comf	___fltol@f1,f
  3833  07D5  09BB               	comf	___fltol@f1+1,f
  3834  07D6  09BC               	comf	___fltol@f1+2,f
  3835  07D7  09BD               	comf	___fltol@f1+3,f
  3836  07D8  0ABA               	incf	___fltol@f1,f
  3837  07D9  1903               	skipnz
  3838  07DA  0ABB               	incf	___fltol@f1+1,f
  3839  07DB  1903               	skipnz
  3840  07DC  0ABC               	incf	___fltol@f1+2,f
  3841  07DD  1903               	skipnz
  3842  07DE  0ABD               	incf	___fltol@f1+3,f
  3843  07DF                     i1l472:
  3844  07DF                     i1l462:
  3845  07DF  0008               	return
  3846  07E0                     __end_of___fltol:
  3847                           
  3848                           	psect	text17
  3849  002A                     __ptext17:	
  3850 ;; *************** function ___flmul *****************
  3851 ;; Defined at:
  3852 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcmul.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;  b               4    0[BANK0 ] long 
  3855 ;;  a               4    4[BANK0 ] long 
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;  prod            4   20[BANK0 ] struct .
  3858 ;;  grs             4   14[BANK0 ] unsigned long 
  3859 ;;  temp            2   24[BANK0 ] struct .
  3860 ;;  bexp            1   19[BANK0 ] unsigned char 
  3861 ;;  aexp            1   18[BANK0 ] unsigned char 
  3862 ;;  sign            1   13[BANK0 ] unsigned char 
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  4    0[BANK0 ] unsigned char 
  3865 ;; Registers used:
  3866 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3872 ;;      Params:         0       8       0       0       0
  3873 ;;      Locals:         0      13       0       0       0
  3874 ;;      Temps:          0       5       0       0       0
  3875 ;;      Totals:         0      26       0       0       0
  3876 ;;Total ram usage:       26 bytes
  3877 ;; Hardware stack levels used: 1
  3878 ;; Hardware stack levels required when called: 1
  3879 ;; This function calls:
  3880 ;;		__Umul8_16
  3881 ;; This function is called by:
  3882 ;;		_isr
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886  002A                     ___flmul:	
  3887                           ;psect for function ___flmul
  3888                           
  3889  002A                     i1l1822:	
  3890                           ;incstack = 0
  3891                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3892                           
  3893  002A  1283               	bcf	3,5	;RP0=0, select bank0
  3894  002B  1303               	bcf	3,6	;RP1=0, select bank0
  3895  002C  0823               	movf	___flmul@b+3,w
  3896  002D  3980               	andlw	128
  3897  002E  00A8               	movwf	??___flmul
  3898  002F  0828               	movf	??___flmul,w
  3899  0030  00AD               	movwf	___flmul@sign
  3900  0031                     i1l1824:
  3901  0031  0823               	movf	___flmul@b+3,w
  3902  0032  00A8               	movwf	??___flmul
  3903  0033  0728               	addwf	??___flmul,w
  3904  0034  00A9               	movwf	??___flmul+1
  3905  0035  0829               	movf	??___flmul+1,w
  3906  0036  00B3               	movwf	___flmul@bexp
  3907  0037                     i1l1826:
  3908  0037  1FA2               	btfss	___flmul@b+2,7
  3909  0038  283A               	goto	u130_21
  3910  0039  283B               	goto	u130_20
  3911  003A                     u130_21:
  3912  003A  283C               	goto	i1l1830
  3913  003B                     u130_20:
  3914  003B                     i1l1828:
  3915  003B  1433               	bsf	___flmul@bexp,0
  3916  003C                     i1l1830:
  3917  003C  0833               	movf	___flmul@bexp,w
  3918  003D  1903               	btfsc	3,2
  3919  003E  2840               	goto	u131_21
  3920  003F  2841               	goto	u131_20
  3921  0040                     u131_21:
  3922  0040  2850               	goto	i1l1838
  3923  0041                     u131_20:
  3924  0041                     i1l1832:
  3925  0041  0A33               	incf	___flmul@bexp,w
  3926  0042  1D03               	btfss	3,2
  3927  0043  2845               	goto	u132_21
  3928  0044  2846               	goto	u132_20
  3929  0045                     u132_21:
  3930  0045  284E               	goto	i1l1836
  3931  0046                     u132_20:
  3932  0046                     i1l1834:
  3933  0046  3000               	movlw	0
  3934  0047  00A3               	movwf	___flmul@b+3
  3935  0048  3000               	movlw	0
  3936  0049  00A2               	movwf	___flmul@b+2
  3937  004A  3000               	movlw	0
  3938  004B  00A1               	movwf	___flmul@b+1
  3939  004C  3000               	movlw	0
  3940  004D  00A0               	movwf	___flmul@b
  3941  004E                     i1l1836:
  3942  004E  17A2               	bsf	___flmul@b+2,7
  3943  004F  2858               	goto	i1l1840
  3944  0050                     i1l1838:
  3945  0050  3000               	movlw	0
  3946  0051  00A3               	movwf	___flmul@b+3
  3947  0052  3000               	movlw	0
  3948  0053  00A2               	movwf	___flmul@b+2
  3949  0054  3000               	movlw	0
  3950  0055  00A1               	movwf	___flmul@b+1
  3951  0056  3000               	movlw	0
  3952  0057  00A0               	movwf	___flmul@b
  3953  0058                     i1l1840:
  3954  0058  0827               	movf	___flmul@a+3,w
  3955  0059  3980               	andlw	128
  3956  005A  00A8               	movwf	??___flmul
  3957  005B  0828               	movf	??___flmul,w
  3958  005C  06AD               	xorwf	___flmul@sign,f
  3959  005D                     i1l1842:
  3960  005D  0827               	movf	___flmul@a+3,w
  3961  005E  00A8               	movwf	??___flmul
  3962  005F  0728               	addwf	??___flmul,w
  3963  0060  00A9               	movwf	??___flmul+1
  3964  0061  0829               	movf	??___flmul+1,w
  3965  0062  00B2               	movwf	___flmul@aexp
  3966  0063                     i1l1844:
  3967  0063  1FA6               	btfss	___flmul@a+2,7
  3968  0064  2866               	goto	u133_21
  3969  0065  2867               	goto	u133_20
  3970  0066                     u133_21:
  3971  0066  2868               	goto	i1l1848
  3972  0067                     u133_20:
  3973  0067                     i1l1846:
  3974  0067  1432               	bsf	___flmul@aexp,0
  3975  0068                     i1l1848:
  3976  0068  0832               	movf	___flmul@aexp,w
  3977  0069  1903               	btfsc	3,2
  3978  006A  286C               	goto	u134_21
  3979  006B  286D               	goto	u134_20
  3980  006C                     u134_21:
  3981  006C  287C               	goto	i1l1856
  3982  006D                     u134_20:
  3983  006D                     i1l1850:
  3984  006D  0A32               	incf	___flmul@aexp,w
  3985  006E  1D03               	btfss	3,2
  3986  006F  2871               	goto	u135_21
  3987  0070  2872               	goto	u135_20
  3988  0071                     u135_21:
  3989  0071  287A               	goto	i1l1854
  3990  0072                     u135_20:
  3991  0072                     i1l1852:
  3992  0072  3000               	movlw	0
  3993  0073  00A7               	movwf	___flmul@a+3
  3994  0074  3000               	movlw	0
  3995  0075  00A6               	movwf	___flmul@a+2
  3996  0076  3000               	movlw	0
  3997  0077  00A5               	movwf	___flmul@a+1
  3998  0078  3000               	movlw	0
  3999  0079  00A4               	movwf	___flmul@a
  4000  007A                     i1l1854:
  4001  007A  17A6               	bsf	___flmul@a+2,7
  4002  007B  2884               	goto	i1l1858
  4003  007C                     i1l1856:
  4004  007C  3000               	movlw	0
  4005  007D  00A7               	movwf	___flmul@a+3
  4006  007E  3000               	movlw	0
  4007  007F  00A6               	movwf	___flmul@a+2
  4008  0080  3000               	movlw	0
  4009  0081  00A5               	movwf	___flmul@a+1
  4010  0082  3000               	movlw	0
  4011  0083  00A4               	movwf	___flmul@a
  4012  0084                     i1l1858:
  4013  0084  0832               	movf	___flmul@aexp,w
  4014  0085  1903               	btfsc	3,2
  4015  0086  2888               	goto	u136_21
  4016  0087  2889               	goto	u136_20
  4017  0088                     u136_21:
  4018  0088  288E               	goto	i1l1862
  4019  0089                     u136_20:
  4020  0089                     i1l1860:
  4021  0089  0833               	movf	___flmul@bexp,w
  4022  008A  1D03               	btfss	3,2
  4023  008B  288D               	goto	u137_21
  4024  008C  288E               	goto	u137_20
  4025  008D                     u137_21:
  4026  008D  2897               	goto	i1l1866
  4027  008E                     u137_20:
  4028  008E                     i1l1862:
  4029  008E  3000               	movlw	0
  4030  008F  00A3               	movwf	?___flmul+3
  4031  0090  3000               	movlw	0
  4032  0091  00A2               	movwf	?___flmul+2
  4033  0092  3000               	movlw	0
  4034  0093  00A1               	movwf	?___flmul+1
  4035  0094  3000               	movlw	0
  4036  0095  00A0               	movwf	?___flmul
  4037  0096  2B8A               	goto	i1l665
  4038  0097                     i1l1866:
  4039  0097  0820               	movf	___flmul@b,w
  4040  0098  00A8               	movwf	??___flmul
  4041  0099  0828               	movf	??___flmul,w
  4042  009A  00F0               	movwf	__Umul8_16@multiplicand
  4043  009B  0826               	movf	___flmul@a+2,w
  4044  009C  120A  158A  25CD  120A  118A  	fcall	__Umul8_16
  4045  00A1  0871               	movf	?__Umul8_16+1,w
  4046  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  4047  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  4048  00A4  00B9               	movwf	___flmul@temp+1
  4049  00A5  0870               	movf	?__Umul8_16,w
  4050  00A6  00B8               	movwf	___flmul@temp
  4051  00A7                     i1l1868:
  4052  00A7  0838               	movf	___flmul@temp,w
  4053  00A8  00A8               	movwf	??___flmul
  4054  00A9  01A9               	clrf	??___flmul+1
  4055  00AA  01AA               	clrf	??___flmul+2
  4056  00AB  01AB               	clrf	??___flmul+3
  4057  00AC  082B               	movf	??___flmul+3,w
  4058  00AD  00B1               	movwf	___flmul@grs+3
  4059  00AE  082A               	movf	??___flmul+2,w
  4060  00AF  00B0               	movwf	___flmul@grs+2
  4061  00B0  0829               	movf	??___flmul+1,w
  4062  00B1  00AF               	movwf	___flmul@grs+1
  4063  00B2  0828               	movf	??___flmul,w
  4064  00B3  00AE               	movwf	___flmul@grs
  4065  00B4                     i1l1870:
  4066  00B4  0839               	movf	___flmul@temp+1,w
  4067  00B5  00A8               	movwf	??___flmul
  4068  00B6  01A9               	clrf	??___flmul+1
  4069  00B7  01AA               	clrf	??___flmul+2
  4070  00B8  01AB               	clrf	??___flmul+3
  4071  00B9  082B               	movf	??___flmul+3,w
  4072  00BA  00B7               	movwf	___flmul@prod+3
  4073  00BB  082A               	movf	??___flmul+2,w
  4074  00BC  00B6               	movwf	___flmul@prod+2
  4075  00BD  0829               	movf	??___flmul+1,w
  4076  00BE  00B5               	movwf	___flmul@prod+1
  4077  00BF  0828               	movf	??___flmul,w
  4078  00C0  00B4               	movwf	___flmul@prod
  4079  00C1  0821               	movf	___flmul@b+1,w
  4080  00C2  00A8               	movwf	??___flmul
  4081  00C3  0828               	movf	??___flmul,w
  4082  00C4  00F0               	movwf	__Umul8_16@multiplicand
  4083  00C5  0825               	movf	___flmul@a+1,w
  4084  00C6  120A  158A  25CD  120A  118A  	fcall	__Umul8_16
  4085  00CB  0871               	movf	?__Umul8_16+1,w
  4086  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  4087  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  4088  00CE  00B9               	movwf	___flmul@temp+1
  4089  00CF  0870               	movf	?__Umul8_16,w
  4090  00D0  00B8               	movwf	___flmul@temp
  4091  00D1                     i1l1872:
  4092  00D1  0838               	movf	___flmul@temp,w
  4093  00D2  00A8               	movwf	??___flmul
  4094  00D3  01A9               	clrf	??___flmul+1
  4095  00D4  01AA               	clrf	??___flmul+2
  4096  00D5  01AB               	clrf	??___flmul+3
  4097  00D6  0828               	movf	??___flmul,w
  4098  00D7  07AE               	addwf	___flmul@grs,f
  4099  00D8  0829               	movf	??___flmul+1,w
  4100  00D9  1103               	clrz
  4101  00DA  1803               	skipnc
  4102  00DB  3E01               	addlw	1
  4103  00DC  1903               	skipnz
  4104  00DD  28DF               	goto	u138_21
  4105  00DE  07AF               	addwf	___flmul@grs+1,f
  4106  00DF                     u138_21:
  4107  00DF  082A               	movf	??___flmul+2,w
  4108  00E0  1103               	clrz
  4109  00E1  1803               	skipnc
  4110  00E2  3E01               	addlw	1
  4111  00E3  1903               	skipnz
  4112  00E4  28E6               	goto	u138_22
  4113  00E5  07B0               	addwf	___flmul@grs+2,f
  4114  00E6                     u138_22:
  4115  00E6  082B               	movf	??___flmul+3,w
  4116  00E7  1103               	clrz
  4117  00E8  1803               	skipnc
  4118  00E9  3E01               	addlw	1
  4119  00EA  1903               	skipnz
  4120  00EB  28ED               	goto	u138_23
  4121  00EC  07B1               	addwf	___flmul@grs+3,f
  4122  00ED                     u138_23:
  4123  00ED                     i1l1874:
  4124  00ED  0839               	movf	___flmul@temp+1,w
  4125  00EE  00A8               	movwf	??___flmul
  4126  00EF  01A9               	clrf	??___flmul+1
  4127  00F0  01AA               	clrf	??___flmul+2
  4128  00F1  01AB               	clrf	??___flmul+3
  4129  00F2  0828               	movf	??___flmul,w
  4130  00F3  07B4               	addwf	___flmul@prod,f
  4131  00F4  0829               	movf	??___flmul+1,w
  4132  00F5  1103               	clrz
  4133  00F6  1803               	skipnc
  4134  00F7  3E01               	addlw	1
  4135  00F8  1903               	skipnz
  4136  00F9  28FB               	goto	u139_21
  4137  00FA  07B5               	addwf	___flmul@prod+1,f
  4138  00FB                     u139_21:
  4139  00FB  082A               	movf	??___flmul+2,w
  4140  00FC  1103               	clrz
  4141  00FD  1803               	skipnc
  4142  00FE  3E01               	addlw	1
  4143  00FF  1903               	skipnz
  4144  0100  2902               	goto	u139_22
  4145  0101  07B6               	addwf	___flmul@prod+2,f
  4146  0102                     u139_22:
  4147  0102  082B               	movf	??___flmul+3,w
  4148  0103  1103               	clrz
  4149  0104  1803               	skipnc
  4150  0105  3E01               	addlw	1
  4151  0106  1903               	skipnz
  4152  0107  2909               	goto	u139_23
  4153  0108  07B7               	addwf	___flmul@prod+3,f
  4154  0109                     u139_23:
  4155  0109  0822               	movf	___flmul@b+2,w
  4156  010A  00A8               	movwf	??___flmul
  4157  010B  0828               	movf	??___flmul,w
  4158  010C  00F0               	movwf	__Umul8_16@multiplicand
  4159  010D  0824               	movf	___flmul@a,w
  4160  010E  120A  158A  25CD  120A  118A  	fcall	__Umul8_16
  4161  0113  0871               	movf	?__Umul8_16+1,w
  4162  0114  1283               	bcf	3,5	;RP0=0, select bank0
  4163  0115  1303               	bcf	3,6	;RP1=0, select bank0
  4164  0116  00B9               	movwf	___flmul@temp+1
  4165  0117  0870               	movf	?__Umul8_16,w
  4166  0118  00B8               	movwf	___flmul@temp
  4167  0119                     i1l1876:
  4168  0119  0838               	movf	___flmul@temp,w
  4169  011A  00A8               	movwf	??___flmul
  4170  011B  01A9               	clrf	??___flmul+1
  4171  011C  01AA               	clrf	??___flmul+2
  4172  011D  01AB               	clrf	??___flmul+3
  4173  011E  0828               	movf	??___flmul,w
  4174  011F  07AE               	addwf	___flmul@grs,f
  4175  0120  0829               	movf	??___flmul+1,w
  4176  0121  1103               	clrz
  4177  0122  1803               	skipnc
  4178  0123  3E01               	addlw	1
  4179  0124  1903               	skipnz
  4180  0125  2927               	goto	u140_21
  4181  0126  07AF               	addwf	___flmul@grs+1,f
  4182  0127                     u140_21:
  4183  0127  082A               	movf	??___flmul+2,w
  4184  0128  1103               	clrz
  4185  0129  1803               	skipnc
  4186  012A  3E01               	addlw	1
  4187  012B  1903               	skipnz
  4188  012C  292E               	goto	u140_22
  4189  012D  07B0               	addwf	___flmul@grs+2,f
  4190  012E                     u140_22:
  4191  012E  082B               	movf	??___flmul+3,w
  4192  012F  1103               	clrz
  4193  0130  1803               	skipnc
  4194  0131  3E01               	addlw	1
  4195  0132  1903               	skipnz
  4196  0133  2935               	goto	u140_23
  4197  0134  07B1               	addwf	___flmul@grs+3,f
  4198  0135                     u140_23:
  4199  0135                     i1l1878:
  4200  0135  0839               	movf	___flmul@temp+1,w
  4201  0136  00A8               	movwf	??___flmul
  4202  0137  01A9               	clrf	??___flmul+1
  4203  0138  01AA               	clrf	??___flmul+2
  4204  0139  01AB               	clrf	??___flmul+3
  4205  013A  0828               	movf	??___flmul,w
  4206  013B  07B4               	addwf	___flmul@prod,f
  4207  013C  0829               	movf	??___flmul+1,w
  4208  013D  1103               	clrz
  4209  013E  1803               	skipnc
  4210  013F  3E01               	addlw	1
  4211  0140  1903               	skipnz
  4212  0141  2943               	goto	u141_21
  4213  0142  07B5               	addwf	___flmul@prod+1,f
  4214  0143                     u141_21:
  4215  0143  082A               	movf	??___flmul+2,w
  4216  0144  1103               	clrz
  4217  0145  1803               	skipnc
  4218  0146  3E01               	addlw	1
  4219  0147  1903               	skipnz
  4220  0148  294A               	goto	u141_22
  4221  0149  07B6               	addwf	___flmul@prod+2,f
  4222  014A                     u141_22:
  4223  014A  082B               	movf	??___flmul+3,w
  4224  014B  1103               	clrz
  4225  014C  1803               	skipnc
  4226  014D  3E01               	addlw	1
  4227  014E  1903               	skipnz
  4228  014F  2951               	goto	u141_23
  4229  0150  07B7               	addwf	___flmul@prod+3,f
  4230  0151                     u141_23:
  4231  0151                     i1l1880:
  4232  0151  3008               	movlw	8
  4233  0152  00A8               	movwf	??___flmul
  4234  0153                     u142_25:
  4235  0153  1003               	clrc
  4236  0154  0DAE               	rlf	___flmul@grs,f
  4237  0155  0DAF               	rlf	___flmul@grs+1,f
  4238  0156  0DB0               	rlf	___flmul@grs+2,f
  4239  0157  0DB1               	rlf	___flmul@grs+3,f
  4240  0158  0BA8               	decfsz	??___flmul,f
  4241  0159  2953               	goto	u142_25
  4242  015A                     i1l1882:
  4243  015A  0821               	movf	___flmul@b+1,w
  4244  015B  00A8               	movwf	??___flmul
  4245  015C  0828               	movf	??___flmul,w
  4246  015D  00F0               	movwf	__Umul8_16@multiplicand
  4247  015E  0824               	movf	___flmul@a,w
  4248  015F  120A  158A  25CD  120A  118A  	fcall	__Umul8_16
  4249  0164  0871               	movf	?__Umul8_16+1,w
  4250  0165  1283               	bcf	3,5	;RP0=0, select bank0
  4251  0166  1303               	bcf	3,6	;RP1=0, select bank0
  4252  0167  00B9               	movwf	___flmul@temp+1
  4253  0168  0870               	movf	?__Umul8_16,w
  4254  0169  00B8               	movwf	___flmul@temp
  4255  016A                     i1l1884:
  4256  016A  0838               	movf	___flmul@temp,w
  4257  016B  00A8               	movwf	??___flmul
  4258  016C  0839               	movf	___flmul@temp+1,w
  4259  016D  00A9               	movwf	??___flmul+1
  4260  016E  01AA               	clrf	??___flmul+2
  4261  016F  01AB               	clrf	??___flmul+3
  4262  0170  0828               	movf	??___flmul,w
  4263  0171  07AE               	addwf	___flmul@grs,f
  4264  0172  0829               	movf	??___flmul+1,w
  4265  0173  1103               	clrz
  4266  0174  1803               	skipnc
  4267  0175  3E01               	addlw	1
  4268  0176  1903               	skipnz
  4269  0177  2979               	goto	u143_21
  4270  0178  07AF               	addwf	___flmul@grs+1,f
  4271  0179                     u143_21:
  4272  0179  082A               	movf	??___flmul+2,w
  4273  017A  1103               	clrz
  4274  017B  1803               	skipnc
  4275  017C  3E01               	addlw	1
  4276  017D  1903               	skipnz
  4277  017E  2980               	goto	u143_22
  4278  017F  07B0               	addwf	___flmul@grs+2,f
  4279  0180                     u143_22:
  4280  0180  082B               	movf	??___flmul+3,w
  4281  0181  1103               	clrz
  4282  0182  1803               	skipnc
  4283  0183  3E01               	addlw	1
  4284  0184  1903               	skipnz
  4285  0185  2987               	goto	u143_23
  4286  0186  07B1               	addwf	___flmul@grs+3,f
  4287  0187                     u143_23:
  4288  0187                     i1l1886:
  4289  0187  0820               	movf	___flmul@b,w
  4290  0188  00A8               	movwf	??___flmul
  4291  0189  0828               	movf	??___flmul,w
  4292  018A  00F0               	movwf	__Umul8_16@multiplicand
  4293  018B  0825               	movf	___flmul@a+1,w
  4294  018C  120A  158A  25CD  120A  118A  	fcall	__Umul8_16
  4295  0191  0871               	movf	?__Umul8_16+1,w
  4296  0192  1283               	bcf	3,5	;RP0=0, select bank0
  4297  0193  1303               	bcf	3,6	;RP1=0, select bank0
  4298  0194  00B9               	movwf	___flmul@temp+1
  4299  0195  0870               	movf	?__Umul8_16,w
  4300  0196  00B8               	movwf	___flmul@temp
  4301  0197                     i1l1888:
  4302  0197  0838               	movf	___flmul@temp,w
  4303  0198  00A8               	movwf	??___flmul
  4304  0199  0839               	movf	___flmul@temp+1,w
  4305  019A  00A9               	movwf	??___flmul+1
  4306  019B  01AA               	clrf	??___flmul+2
  4307  019C  01AB               	clrf	??___flmul+3
  4308  019D  0828               	movf	??___flmul,w
  4309  019E  07AE               	addwf	___flmul@grs,f
  4310  019F  0829               	movf	??___flmul+1,w
  4311  01A0  1103               	clrz
  4312  01A1  1803               	skipnc
  4313  01A2  3E01               	addlw	1
  4314  01A3  1903               	skipnz
  4315  01A4  29A6               	goto	u144_21
  4316  01A5  07AF               	addwf	___flmul@grs+1,f
  4317  01A6                     u144_21:
  4318  01A6  082A               	movf	??___flmul+2,w
  4319  01A7  1103               	clrz
  4320  01A8  1803               	skipnc
  4321  01A9  3E01               	addlw	1
  4322  01AA  1903               	skipnz
  4323  01AB  29AD               	goto	u144_22
  4324  01AC  07B0               	addwf	___flmul@grs+2,f
  4325  01AD                     u144_22:
  4326  01AD  082B               	movf	??___flmul+3,w
  4327  01AE  1103               	clrz
  4328  01AF  1803               	skipnc
  4329  01B0  3E01               	addlw	1
  4330  01B1  1903               	skipnz
  4331  01B2  29B4               	goto	u144_23
  4332  01B3  07B1               	addwf	___flmul@grs+3,f
  4333  01B4                     u144_23:
  4334  01B4                     i1l1890:
  4335  01B4  3008               	movlw	8
  4336  01B5  00A8               	movwf	??___flmul
  4337  01B6                     u145_25:
  4338  01B6  1003               	clrc
  4339  01B7  0DAE               	rlf	___flmul@grs,f
  4340  01B8  0DAF               	rlf	___flmul@grs+1,f
  4341  01B9  0DB0               	rlf	___flmul@grs+2,f
  4342  01BA  0DB1               	rlf	___flmul@grs+3,f
  4343  01BB  0BA8               	decfsz	??___flmul,f
  4344  01BC  29B6               	goto	u145_25
  4345  01BD  0820               	movf	___flmul@b,w
  4346  01BE  00A8               	movwf	??___flmul
  4347  01BF  0828               	movf	??___flmul,w
  4348  01C0  00F0               	movwf	__Umul8_16@multiplicand
  4349  01C1  0824               	movf	___flmul@a,w
  4350  01C2  120A  158A  25CD  120A  118A  	fcall	__Umul8_16
  4351  01C7  0871               	movf	?__Umul8_16+1,w
  4352  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  4353  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  4354  01CA  00B9               	movwf	___flmul@temp+1
  4355  01CB  0870               	movf	?__Umul8_16,w
  4356  01CC  00B8               	movwf	___flmul@temp
  4357  01CD                     i1l1892:
  4358  01CD  0838               	movf	___flmul@temp,w
  4359  01CE  00A8               	movwf	??___flmul
  4360  01CF  0839               	movf	___flmul@temp+1,w
  4361  01D0  00A9               	movwf	??___flmul+1
  4362  01D1  01AA               	clrf	??___flmul+2
  4363  01D2  01AB               	clrf	??___flmul+3
  4364  01D3  0828               	movf	??___flmul,w
  4365  01D4  07AE               	addwf	___flmul@grs,f
  4366  01D5  0829               	movf	??___flmul+1,w
  4367  01D6  1103               	clrz
  4368  01D7  1803               	skipnc
  4369  01D8  3E01               	addlw	1
  4370  01D9  1903               	skipnz
  4371  01DA  29DC               	goto	u146_21
  4372  01DB  07AF               	addwf	___flmul@grs+1,f
  4373  01DC                     u146_21:
  4374  01DC  082A               	movf	??___flmul+2,w
  4375  01DD  1103               	clrz
  4376  01DE  1803               	skipnc
  4377  01DF  3E01               	addlw	1
  4378  01E0  1903               	skipnz
  4379  01E1  29E3               	goto	u146_22
  4380  01E2  07B0               	addwf	___flmul@grs+2,f
  4381  01E3                     u146_22:
  4382  01E3  082B               	movf	??___flmul+3,w
  4383  01E4  1103               	clrz
  4384  01E5  1803               	skipnc
  4385  01E6  3E01               	addlw	1
  4386  01E7  1903               	skipnz
  4387  01E8  29EA               	goto	u146_23
  4388  01E9  07B1               	addwf	___flmul@grs+3,f
  4389  01EA                     u146_23:
  4390  01EA                     i1l1894:
  4391  01EA  0821               	movf	___flmul@b+1,w
  4392  01EB  00A8               	movwf	??___flmul
  4393  01EC  0828               	movf	??___flmul,w
  4394  01ED  00F0               	movwf	__Umul8_16@multiplicand
  4395  01EE  0826               	movf	___flmul@a+2,w
  4396  01EF  120A  158A  25CD  120A  118A  	fcall	__Umul8_16
  4397  01F4  0871               	movf	?__Umul8_16+1,w
  4398  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  4399  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  4400  01F7  00B9               	movwf	___flmul@temp+1
  4401  01F8  0870               	movf	?__Umul8_16,w
  4402  01F9  00B8               	movwf	___flmul@temp
  4403  01FA  0838               	movf	___flmul@temp,w
  4404  01FB  00A8               	movwf	??___flmul
  4405  01FC  0839               	movf	___flmul@temp+1,w
  4406  01FD  00A9               	movwf	??___flmul+1
  4407  01FE  01AA               	clrf	??___flmul+2
  4408  01FF  01AB               	clrf	??___flmul+3
  4409  0200  0828               	movf	??___flmul,w
  4410  0201  07B4               	addwf	___flmul@prod,f
  4411  0202  0829               	movf	??___flmul+1,w
  4412  0203  1103               	clrz
  4413  0204  1803               	skipnc
  4414  0205  3E01               	addlw	1
  4415  0206  1903               	skipnz
  4416  0207  2A09               	goto	u147_21
  4417  0208  07B5               	addwf	___flmul@prod+1,f
  4418  0209                     u147_21:
  4419  0209  082A               	movf	??___flmul+2,w
  4420  020A  1103               	clrz
  4421  020B  1803               	skipnc
  4422  020C  3E01               	addlw	1
  4423  020D  1903               	skipnz
  4424  020E  2A10               	goto	u147_22
  4425  020F  07B6               	addwf	___flmul@prod+2,f
  4426  0210                     u147_22:
  4427  0210  082B               	movf	??___flmul+3,w
  4428  0211  1103               	clrz
  4429  0212  1803               	skipnc
  4430  0213  3E01               	addlw	1
  4431  0214  1903               	skipnz
  4432  0215  2A17               	goto	u147_23
  4433  0216  07B7               	addwf	___flmul@prod+3,f
  4434  0217                     u147_23:
  4435  0217                     i1l1896:
  4436  0217  0822               	movf	___flmul@b+2,w
  4437  0218  00A8               	movwf	??___flmul
  4438  0219  0828               	movf	??___flmul,w
  4439  021A  00F0               	movwf	__Umul8_16@multiplicand
  4440  021B  0825               	movf	___flmul@a+1,w
  4441  021C  120A  158A  25CD  120A  118A  	fcall	__Umul8_16
  4442  0221  0871               	movf	?__Umul8_16+1,w
  4443  0222  1283               	bcf	3,5	;RP0=0, select bank0
  4444  0223  1303               	bcf	3,6	;RP1=0, select bank0
  4445  0224  00B9               	movwf	___flmul@temp+1
  4446  0225  0870               	movf	?__Umul8_16,w
  4447  0226  00B8               	movwf	___flmul@temp
  4448  0227                     i1l1898:
  4449  0227  0838               	movf	___flmul@temp,w
  4450  0228  00A8               	movwf	??___flmul
  4451  0229  0839               	movf	___flmul@temp+1,w
  4452  022A  00A9               	movwf	??___flmul+1
  4453  022B  01AA               	clrf	??___flmul+2
  4454  022C  01AB               	clrf	??___flmul+3
  4455  022D  0828               	movf	??___flmul,w
  4456  022E  07B4               	addwf	___flmul@prod,f
  4457  022F  0829               	movf	??___flmul+1,w
  4458  0230  1103               	clrz
  4459  0231  1803               	skipnc
  4460  0232  3E01               	addlw	1
  4461  0233  1903               	skipnz
  4462  0234  2A36               	goto	u148_21
  4463  0235  07B5               	addwf	___flmul@prod+1,f
  4464  0236                     u148_21:
  4465  0236  082A               	movf	??___flmul+2,w
  4466  0237  1103               	clrz
  4467  0238  1803               	skipnc
  4468  0239  3E01               	addlw	1
  4469  023A  1903               	skipnz
  4470  023B  2A3D               	goto	u148_22
  4471  023C  07B6               	addwf	___flmul@prod+2,f
  4472  023D                     u148_22:
  4473  023D  082B               	movf	??___flmul+3,w
  4474  023E  1103               	clrz
  4475  023F  1803               	skipnc
  4476  0240  3E01               	addlw	1
  4477  0241  1903               	skipnz
  4478  0242  2A44               	goto	u148_23
  4479  0243  07B7               	addwf	___flmul@prod+3,f
  4480  0244                     u148_23:
  4481  0244  0822               	movf	___flmul@b+2,w
  4482  0245  00A8               	movwf	??___flmul
  4483  0246  0828               	movf	??___flmul,w
  4484  0247  00F0               	movwf	__Umul8_16@multiplicand
  4485  0248  0826               	movf	___flmul@a+2,w
  4486  0249  120A  158A  25CD  120A  118A  	fcall	__Umul8_16
  4487  024E  0871               	movf	?__Umul8_16+1,w
  4488  024F  1283               	bcf	3,5	;RP0=0, select bank0
  4489  0250  1303               	bcf	3,6	;RP1=0, select bank0
  4490  0251  00B9               	movwf	___flmul@temp+1
  4491  0252  0870               	movf	?__Umul8_16,w
  4492  0253  00B8               	movwf	___flmul@temp
  4493  0254                     i1l1900:
  4494  0254  0838               	movf	___flmul@temp,w
  4495  0255  00A8               	movwf	??___flmul
  4496  0256  0839               	movf	___flmul@temp+1,w
  4497  0257  00A9               	movwf	??___flmul+1
  4498  0258  01AA               	clrf	??___flmul+2
  4499  0259  01AB               	clrf	??___flmul+3
  4500  025A  3008               	movlw	8
  4501  025B                     u149_25:
  4502  025B  1003               	clrc
  4503  025C  0DA8               	rlf	??___flmul,f
  4504  025D  0DA9               	rlf	??___flmul+1,f
  4505  025E  0DAA               	rlf	??___flmul+2,f
  4506  025F  0DAB               	rlf	??___flmul+3,f
  4507  0260                     u149_20:
  4508  0260  3EFF               	addlw	-1
  4509  0261  1D03               	skipz
  4510  0262  2A5B               	goto	u149_25
  4511  0263  0828               	movf	??___flmul,w
  4512  0264  07B4               	addwf	___flmul@prod,f
  4513  0265  0829               	movf	??___flmul+1,w
  4514  0266  1103               	clrz
  4515  0267  1803               	skipnc
  4516  0268  3E01               	addlw	1
  4517  0269  1903               	skipnz
  4518  026A  2A6C               	goto	u150_21
  4519  026B  07B5               	addwf	___flmul@prod+1,f
  4520  026C                     u150_21:
  4521  026C  082A               	movf	??___flmul+2,w
  4522  026D  1103               	clrz
  4523  026E  1803               	skipnc
  4524  026F  3E01               	addlw	1
  4525  0270  1903               	skipnz
  4526  0271  2A73               	goto	u150_22
  4527  0272  07B6               	addwf	___flmul@prod+2,f
  4528  0273                     u150_22:
  4529  0273  082B               	movf	??___flmul+3,w
  4530  0274  1103               	clrz
  4531  0275  1803               	skipnc
  4532  0276  3E01               	addlw	1
  4533  0277  1903               	skipnz
  4534  0278  2A7A               	goto	u150_23
  4535  0279  07B7               	addwf	___flmul@prod+3,f
  4536  027A                     u150_23:
  4537  027A                     i1l1902:
  4538  027A  082E               	movf	___flmul@grs,w
  4539  027B  00A8               	movwf	??___flmul
  4540  027C  082F               	movf	___flmul@grs+1,w
  4541  027D  00A9               	movwf	??___flmul+1
  4542  027E  0830               	movf	___flmul@grs+2,w
  4543  027F  00AA               	movwf	??___flmul+2
  4544  0280  0831               	movf	___flmul@grs+3,w
  4545  0281  00AB               	movwf	??___flmul+3
  4546  0282  3018               	movlw	24
  4547  0283                     u151_25:
  4548  0283  1003               	clrc
  4549  0284  0CAB               	rrf	??___flmul+3,f
  4550  0285  0CAA               	rrf	??___flmul+2,f
  4551  0286  0CA9               	rrf	??___flmul+1,f
  4552  0287  0CA8               	rrf	??___flmul,f
  4553  0288                     u151_20:
  4554  0288  3EFF               	addlw	-1
  4555  0289  1D03               	skipz
  4556  028A  2A83               	goto	u151_25
  4557  028B  0828               	movf	??___flmul,w
  4558  028C  07B4               	addwf	___flmul@prod,f
  4559  028D  0829               	movf	??___flmul+1,w
  4560  028E  1103               	clrz
  4561  028F  1803               	skipnc
  4562  0290  3E01               	addlw	1
  4563  0291  1903               	skipnz
  4564  0292  2A94               	goto	u152_21
  4565  0293  07B5               	addwf	___flmul@prod+1,f
  4566  0294                     u152_21:
  4567  0294  082A               	movf	??___flmul+2,w
  4568  0295  1103               	clrz
  4569  0296  1803               	skipnc
  4570  0297  3E01               	addlw	1
  4571  0298  1903               	skipnz
  4572  0299  2A9B               	goto	u152_22
  4573  029A  07B6               	addwf	___flmul@prod+2,f
  4574  029B                     u152_22:
  4575  029B  082B               	movf	??___flmul+3,w
  4576  029C  1103               	clrz
  4577  029D  1803               	skipnc
  4578  029E  3E01               	addlw	1
  4579  029F  1903               	skipnz
  4580  02A0  2AA2               	goto	u152_23
  4581  02A1  07B7               	addwf	___flmul@prod+3,f
  4582  02A2                     u152_23:
  4583  02A2                     i1l1904:
  4584  02A2  3008               	movlw	8
  4585  02A3  00A8               	movwf	??___flmul
  4586  02A4                     u153_25:
  4587  02A4  1003               	clrc
  4588  02A5  0DAE               	rlf	___flmul@grs,f
  4589  02A6  0DAF               	rlf	___flmul@grs+1,f
  4590  02A7  0DB0               	rlf	___flmul@grs+2,f
  4591  02A8  0DB1               	rlf	___flmul@grs+3,f
  4592  02A9  0BA8               	decfsz	??___flmul,f
  4593  02AA  2AA4               	goto	u153_25
  4594  02AB                     i1l1906:
  4595  02AB  0833               	movf	___flmul@bexp,w
  4596  02AC  0732               	addwf	___flmul@aexp,w
  4597  02AD  00A8               	movwf	??___flmul
  4598  02AE  01A9               	clrf	??___flmul+1
  4599  02AF  0DA9               	rlf	??___flmul+1,f
  4600  02B0  0828               	movf	??___flmul,w
  4601  02B1  3E82               	addlw	130
  4602  02B2  00B8               	movwf	___flmul@temp
  4603  02B3  0829               	movf	??___flmul+1,w
  4604  02B4  1803               	skipnc
  4605  02B5  3E01               	addlw	1
  4606  02B6  3EFF               	addlw	255
  4607  02B7  00B9               	movwf	___flmul@temp+1
  4608  02B8  2AD6               	goto	i1l1918
  4609  02B9                     i1l1908:
  4610  02B9  3001               	movlw	1
  4611  02BA  00A8               	movwf	??___flmul
  4612  02BB                     u154_25:
  4613  02BB  1003               	clrc
  4614  02BC  0DB4               	rlf	___flmul@prod,f
  4615  02BD  0DB5               	rlf	___flmul@prod+1,f
  4616  02BE  0DB6               	rlf	___flmul@prod+2,f
  4617  02BF  0DB7               	rlf	___flmul@prod+3,f
  4618  02C0  0BA8               	decfsz	??___flmul,f
  4619  02C1  2ABB               	goto	u154_25
  4620  02C2                     i1l1910:
  4621  02C2  1FB1               	btfss	___flmul@grs+3,7
  4622  02C3  2AC5               	goto	u155_21
  4623  02C4  2AC6               	goto	u155_20
  4624  02C5                     u155_21:
  4625  02C5  2AC7               	goto	i1l1914
  4626  02C6                     u155_20:
  4627  02C6                     i1l1912:
  4628  02C6  1434               	bsf	___flmul@prod,0
  4629  02C7                     i1l1914:
  4630  02C7  3001               	movlw	1
  4631  02C8  00A8               	movwf	??___flmul
  4632  02C9                     u156_25:
  4633  02C9  1003               	clrc
  4634  02CA  0DAE               	rlf	___flmul@grs,f
  4635  02CB  0DAF               	rlf	___flmul@grs+1,f
  4636  02CC  0DB0               	rlf	___flmul@grs+2,f
  4637  02CD  0DB1               	rlf	___flmul@grs+3,f
  4638  02CE  0BA8               	decfsz	??___flmul,f
  4639  02CF  2AC9               	goto	u156_25
  4640  02D0                     i1l1916:
  4641  02D0  30FF               	movlw	255
  4642  02D1  07B8               	addwf	___flmul@temp,f
  4643  02D2  1803               	skipnc
  4644  02D3  0AB9               	incf	___flmul@temp+1,f
  4645  02D4  30FF               	movlw	255
  4646  02D5  07B9               	addwf	___flmul@temp+1,f
  4647  02D6                     i1l1918:
  4648  02D6  1FB6               	btfss	___flmul@prod+2,7
  4649  02D7  2AD9               	goto	u157_21
  4650  02D8  2ADA               	goto	u157_20
  4651  02D9                     u157_21:
  4652  02D9  2AB9               	goto	i1l1908
  4653  02DA                     u157_20:
  4654  02DA                     i1l1920:
  4655  02DA  01B2               	clrf	___flmul@aexp
  4656  02DB                     i1l1922:
  4657  02DB  1FB1               	btfss	___flmul@grs+3,7
  4658  02DC  2ADE               	goto	u158_21
  4659  02DD  2ADF               	goto	u158_20
  4660  02DE                     u158_21:
  4661  02DE  2AFB               	goto	i1l1930
  4662  02DF                     u158_20:
  4663  02DF                     i1l1924:
  4664  02DF  30FF               	movlw	255
  4665  02E0  052E               	andwf	___flmul@grs,w
  4666  02E1  00A8               	movwf	??___flmul
  4667  02E2  30FF               	movlw	255
  4668  02E3  052F               	andwf	___flmul@grs+1,w
  4669  02E4  00A9               	movwf	??___flmul+1
  4670  02E5  30FF               	movlw	255
  4671  02E6  0530               	andwf	___flmul@grs+2,w
  4672  02E7  00AA               	movwf	??___flmul+2
  4673  02E8  307F               	movlw	127
  4674  02E9  0531               	andwf	___flmul@grs+3,w
  4675  02EA  00AB               	movwf	??___flmul+3
  4676  02EB  082B               	movf	??___flmul+3,w
  4677  02EC  042A               	iorwf	??___flmul+2,w
  4678  02ED  0429               	iorwf	??___flmul+1,w
  4679  02EE  0428               	iorwf	??___flmul,w
  4680  02EF  1903               	skipnz
  4681  02F0  2AF2               	goto	u159_21
  4682  02F1  2AF3               	goto	u159_20
  4683  02F2                     u159_21:
  4684  02F2  2AF6               	goto	i1l671
  4685  02F3                     u159_20:
  4686  02F3                     i1l1926:
  4687  02F3  01B2               	clrf	___flmul@aexp
  4688  02F4  0AB2               	incf	___flmul@aexp,f
  4689  02F5  2AFB               	goto	i1l1930
  4690  02F6                     i1l671:
  4691  02F6  1C34               	btfss	___flmul@prod,0
  4692  02F7  2AF9               	goto	u160_21
  4693  02F8  2AFA               	goto	u160_20
  4694  02F9                     u160_21:
  4695  02F9  2AFB               	goto	i1l1930
  4696  02FA                     u160_20:
  4697  02FA  2AF3               	goto	i1l1926
  4698  02FB                     i1l1930:
  4699  02FB  0832               	movf	___flmul@aexp,w
  4700  02FC  1903               	btfsc	3,2
  4701  02FD  2AFF               	goto	u161_21
  4702  02FE  2B00               	goto	u161_20
  4703  02FF                     u161_21:
  4704  02FF  2B31               	goto	i1l1940
  4705  0300                     u161_20:
  4706  0300                     i1l1932:
  4707  0300  3001               	movlw	1
  4708  0301  07B4               	addwf	___flmul@prod,f
  4709  0302  3000               	movlw	0
  4710  0303  1803               	skipnc
  4711  0304  3001               	movlw	1
  4712  0305  07B5               	addwf	___flmul@prod+1,f
  4713  0306  3000               	movlw	0
  4714  0307  1803               	skipnc
  4715  0308  3001               	movlw	1
  4716  0309  07B6               	addwf	___flmul@prod+2,f
  4717  030A  3000               	movlw	0
  4718  030B  1803               	skipnc
  4719  030C  3001               	movlw	1
  4720  030D  07B7               	addwf	___flmul@prod+3,f
  4721  030E                     i1l1934:
  4722  030E  1C37               	btfss	___flmul@prod+3,0
  4723  030F  2B11               	goto	u162_21
  4724  0310  2B12               	goto	u162_20
  4725  0311                     u162_21:
  4726  0311  2B31               	goto	i1l1940
  4727  0312                     u162_20:
  4728  0312                     i1l1936:
  4729  0312  0834               	movf	___flmul@prod,w
  4730  0313  00A8               	movwf	??___flmul
  4731  0314  0835               	movf	___flmul@prod+1,w
  4732  0315  00A9               	movwf	??___flmul+1
  4733  0316  0836               	movf	___flmul@prod+2,w
  4734  0317  00AA               	movwf	??___flmul+2
  4735  0318  0837               	movf	___flmul@prod+3,w
  4736  0319  00AB               	movwf	??___flmul+3
  4737  031A  3001               	movlw	1
  4738  031B  00AC               	movwf	??___flmul+4
  4739  031C                     u163_25:
  4740  031C  0D2B               	rlf	??___flmul+3,w
  4741  031D  0CAB               	rrf	??___flmul+3,f
  4742  031E  0CAA               	rrf	??___flmul+2,f
  4743  031F  0CA9               	rrf	??___flmul+1,f
  4744  0320  0CA8               	rrf	??___flmul,f
  4745  0321                     u163_20:
  4746  0321  0BAC               	decfsz	??___flmul+4,f
  4747  0322  2B1C               	goto	u163_25
  4748  0323  082B               	movf	??___flmul+3,w
  4749  0324  00B7               	movwf	___flmul@prod+3
  4750  0325  082A               	movf	??___flmul+2,w
  4751  0326  00B6               	movwf	___flmul@prod+2
  4752  0327  0829               	movf	??___flmul+1,w
  4753  0328  00B5               	movwf	___flmul@prod+1
  4754  0329  0828               	movf	??___flmul,w
  4755  032A  00B4               	movwf	___flmul@prod
  4756  032B                     i1l1938:
  4757  032B  3001               	movlw	1
  4758  032C  07B8               	addwf	___flmul@temp,f
  4759  032D  1803               	skipnc
  4760  032E  0AB9               	incf	___flmul@temp+1,f
  4761  032F  3000               	movlw	0
  4762  0330  07B9               	addwf	___flmul@temp+1,f
  4763  0331                     i1l1940:
  4764  0331  0839               	movf	___flmul@temp+1,w
  4765  0332  3A80               	xorlw	128
  4766  0333  00FF               	movwf	btemp+1
  4767  0334  3080               	movlw	128
  4768  0335  027F               	subwf	btemp+1,w
  4769  0336  1D03               	skipz
  4770  0337  2B3A               	goto	u164_25
  4771  0338  30FF               	movlw	255
  4772  0339  0238               	subwf	___flmul@temp,w
  4773  033A                     u164_25:
  4774  033A  1C03               	skipc
  4775  033B  2B3D               	goto	u164_21
  4776  033C  2B3E               	goto	u164_20
  4777  033D                     u164_21:
  4778  033D  2B49               	goto	i1l1944
  4779  033E                     u164_20:
  4780  033E                     i1l1942:
  4781  033E  307F               	movlw	127
  4782  033F  1283               	bcf	3,5	;RP0=0, select bank0
  4783  0340  1303               	bcf	3,6	;RP1=0, select bank0
  4784  0341  00B7               	movwf	___flmul@prod+3
  4785  0342  3080               	movlw	128
  4786  0343  00B6               	movwf	___flmul@prod+2
  4787  0344  3000               	movlw	0
  4788  0345  00B5               	movwf	___flmul@prod+1
  4789  0346  3000               	movlw	0
  4790  0347  00B4               	movwf	___flmul@prod
  4791  0348  2B7E               	goto	i1l677
  4792  0349                     i1l1944:
  4793  0349  1283               	bcf	3,5	;RP0=0, select bank0
  4794  034A  1303               	bcf	3,6	;RP1=0, select bank0
  4795  034B  0839               	movf	___flmul@temp+1,w
  4796  034C  3A80               	xorlw	128
  4797  034D  00FF               	movwf	btemp+1
  4798  034E  3080               	movlw	128
  4799  034F  027F               	subwf	btemp+1,w
  4800  0350  1D03               	skipz
  4801  0351  2B54               	goto	u165_25
  4802  0352  3001               	movlw	1
  4803  0353  0238               	subwf	___flmul@temp,w
  4804  0354                     u165_25:
  4805  0354  1803               	skipnc
  4806  0355  2B57               	goto	u165_21
  4807  0356  2B58               	goto	u165_20
  4808  0357                     u165_21:
  4809  0357  2B64               	goto	i1l1950
  4810  0358                     u165_20:
  4811  0358                     i1l1946:
  4812  0358  3000               	movlw	0
  4813  0359  1283               	bcf	3,5	;RP0=0, select bank0
  4814  035A  1303               	bcf	3,6	;RP1=0, select bank0
  4815  035B  00B7               	movwf	___flmul@prod+3
  4816  035C  3000               	movlw	0
  4817  035D  00B6               	movwf	___flmul@prod+2
  4818  035E  3000               	movlw	0
  4819  035F  00B5               	movwf	___flmul@prod+1
  4820  0360  3000               	movlw	0
  4821  0361  00B4               	movwf	___flmul@prod
  4822  0362                     i1l1948:
  4823  0362  01AD               	clrf	___flmul@sign
  4824  0363  2B7E               	goto	i1l677
  4825  0364                     i1l1950:
  4826  0364  1283               	bcf	3,5	;RP0=0, select bank0
  4827  0365  1303               	bcf	3,6	;RP1=0, select bank0
  4828  0366  0838               	movf	___flmul@temp,w
  4829  0367  00A8               	movwf	??___flmul
  4830  0368  0828               	movf	??___flmul,w
  4831  0369  00B3               	movwf	___flmul@bexp
  4832  036A  30FF               	movlw	255
  4833  036B  05B4               	andwf	___flmul@prod,f
  4834  036C  30FF               	movlw	255
  4835  036D  05B5               	andwf	___flmul@prod+1,f
  4836  036E  307F               	movlw	127
  4837  036F  05B6               	andwf	___flmul@prod+2,f
  4838  0370  3000               	movlw	0
  4839  0371  05B7               	andwf	___flmul@prod+3,f
  4840  0372                     i1l1952:
  4841  0372  1C33               	btfss	___flmul@bexp,0
  4842  0373  2B75               	goto	u166_21
  4843  0374  2B76               	goto	u166_20
  4844  0375                     u166_21:
  4845  0375  2B77               	goto	i1l1956
  4846  0376                     u166_20:
  4847  0376                     i1l1954:
  4848  0376  17B6               	bsf	___flmul@prod+2,7
  4849  0377                     i1l1956:
  4850  0377  0833               	movf	___flmul@bexp,w
  4851  0378  00A8               	movwf	??___flmul
  4852  0379  1003               	clrc
  4853  037A  0C28               	rrf	??___flmul,w
  4854  037B  00A9               	movwf	??___flmul+1
  4855  037C  0829               	movf	??___flmul+1,w
  4856  037D  00B7               	movwf	___flmul@prod+3
  4857  037E                     i1l677:
  4858  037E  082D               	movf	___flmul@sign,w
  4859  037F  00A8               	movwf	??___flmul
  4860  0380  0828               	movf	??___flmul,w
  4861  0381  04B7               	iorwf	___flmul@prod+3,f
  4862  0382                     i1l1958:
  4863  0382  0837               	movf	___flmul@prod+3,w
  4864  0383  00A3               	movwf	?___flmul+3
  4865  0384  0836               	movf	___flmul@prod+2,w
  4866  0385  00A2               	movwf	?___flmul+2
  4867  0386  0835               	movf	___flmul@prod+1,w
  4868  0387  00A1               	movwf	?___flmul+1
  4869  0388  0834               	movf	___flmul@prod,w
  4870  0389  00A0               	movwf	?___flmul
  4871  038A                     i1l665:
  4872  038A  0008               	return
  4873  038B                     __end_of___flmul:
  4874                           
  4875                           	psect	text18
  4876  0DCD                     __ptext18:	
  4877 ;; *************** function __Umul8_16 *****************
  4878 ;; Defined at:
  4879 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8_16.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;  multiplier      1    wreg     unsigned char 
  4882 ;;  multiplicand    1    0[COMMON] unsigned char 
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;  multiplier      1    8[COMMON] unsigned char 
  4885 ;;  word_mpld       2    6[COMMON] unsigned int 
  4886 ;;  product         2    4[COMMON] unsigned int 
  4887 ;; Return value:  Size  Location     Type
  4888 ;;                  2    0[COMMON] unsigned int 
  4889 ;; Registers used:
  4890 ;;		wreg, status,2, status,0
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4896 ;;      Params:         2       0       0       0       0
  4897 ;;      Locals:         5       0       0       0       0
  4898 ;;      Temps:          2       0       0       0       0
  4899 ;;      Totals:         9       0       0       0       0
  4900 ;;Total ram usage:        9 bytes
  4901 ;; Hardware stack levels used: 1
  4902 ;; This function calls:
  4903 ;;		Nothing
  4904 ;; This function is called by:
  4905 ;;		___flmul
  4906 ;; This function uses a non-reentrant model
  4907 ;;
  4908                           
  4909  0DCD                     __Umul8_16:	
  4910                           ;psect for function __Umul8_16
  4911                           
  4912                           
  4913                           ;incstack = 0
  4914                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4915                           ;__Umul8_16@multiplier stored from wreg
  4916  0DCD  00F8               	movwf	__Umul8_16@multiplier
  4917  0DCE                     i1l1666:
  4918  0DCE  01F4               	clrf	__Umul8_16@product
  4919  0DCF  01F5               	clrf	__Umul8_16@product+1
  4920  0DD0                     i1l1668:
  4921  0DD0  0870               	movf	__Umul8_16@multiplicand,w
  4922  0DD1  00F2               	movwf	??__Umul8_16
  4923  0DD2  01F3               	clrf	??__Umul8_16+1
  4924  0DD3  0872               	movf	??__Umul8_16,w
  4925  0DD4  00F6               	movwf	__Umul8_16@word_mpld
  4926  0DD5  0873               	movf	??__Umul8_16+1,w
  4927  0DD6  00F7               	movwf	__Umul8_16@word_mpld+1
  4928  0DD7                     i1l1670:
  4929  0DD7  1C78               	btfss	__Umul8_16@multiplier,0
  4930  0DD8  2DDA               	goto	u111_21
  4931  0DD9  2DDB               	goto	u111_20
  4932  0DDA                     u111_21:
  4933  0DDA  2DE1               	goto	i1l684
  4934  0DDB                     u111_20:
  4935  0DDB                     i1l1672:
  4936  0DDB  0876               	movf	__Umul8_16@word_mpld,w
  4937  0DDC  07F4               	addwf	__Umul8_16@product,f
  4938  0DDD  1803               	skipnc
  4939  0DDE  0AF5               	incf	__Umul8_16@product+1,f
  4940  0DDF  0877               	movf	__Umul8_16@word_mpld+1,w
  4941  0DE0  07F5               	addwf	__Umul8_16@product+1,f
  4942  0DE1                     i1l684:
  4943  0DE1  3001               	movlw	1
  4944  0DE2                     u112_25:
  4945  0DE2  1003               	clrc
  4946  0DE3  0DF6               	rlf	__Umul8_16@word_mpld,f
  4947  0DE4  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4948  0DE5  3EFF               	addlw	-1
  4949  0DE6  1D03               	skipz
  4950  0DE7  2DE2               	goto	u112_25
  4951  0DE8  1003               	clrc
  4952  0DE9  0CF8               	rrf	__Umul8_16@multiplier,f
  4953  0DEA                     i1l1674:
  4954  0DEA  0878               	movf	__Umul8_16@multiplier,w
  4955  0DEB  1D03               	btfss	3,2
  4956  0DEC  2DEE               	goto	u113_21
  4957  0DED  2DEF               	goto	u113_20
  4958  0DEE                     u113_21:
  4959  0DEE  2DD7               	goto	i1l1670
  4960  0DEF                     u113_20:
  4961  0DEF                     i1l1676:
  4962  0DEF  0875               	movf	__Umul8_16@product+1,w
  4963  0DF0  00F1               	movwf	?__Umul8_16+1
  4964  0DF1  0874               	movf	__Umul8_16@product,w
  4965  0DF2  00F0               	movwf	?__Umul8_16
  4966  0DF3                     i1l686:
  4967  0DF3  0008               	return
  4968  0DF4                     __end_of__Umul8_16:
  4969                           
  4970                           	psect	text19
  4971  0D89                     __ptext19:	
  4972 ;; *************** function _ADC_read *****************
  4973 ;; Defined at:
  4974 ;;		line 149 in file "ADC.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;		None
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;  read            2    4[COMMON] unsigned int 
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  2    0[COMMON] unsigned int 
  4981 ;; Registers used:
  4982 ;;		wreg, status,2
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4988 ;;      Params:         2       0       0       0       0
  4989 ;;      Locals:         2       0       0       0       0
  4990 ;;      Temps:          2       0       0       0       0
  4991 ;;      Totals:         6       0       0       0       0
  4992 ;;Total ram usage:        6 bytes
  4993 ;; Hardware stack levels used: 1
  4994 ;; This function calls:
  4995 ;;		Nothing
  4996 ;; This function is called by:
  4997 ;;		_isr
  4998 ;; This function uses a non-reentrant model
  4999 ;;
  5000                           
  5001  0D89                     _ADC_read:	
  5002                           ;psect for function _ADC_read
  5003                           
  5004  0D89                     i1l1722:	
  5005                           ;incstack = 0
  5006                           ; Regs used in _ADC_read: [wreg+status,2]
  5007                           
  5008  0D89                     i1l1724:
  5009                           
  5010                           ;ADC.c: 151:     read = ADRESH;
  5011  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  5012  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  5013  0D8B  081E               	movf	30,w	;volatile
  5014  0D8C  00F2               	movwf	??_ADC_read
  5015  0D8D  01F3               	clrf	??_ADC_read+1
  5016  0D8E  0872               	movf	??_ADC_read,w
  5017  0D8F  00F4               	movwf	ADC_read@read
  5018  0D90  0873               	movf	??_ADC_read+1,w
  5019  0D91  00F5               	movwf	ADC_read@read+1
  5020  0D92                     i1l1726:
  5021                           
  5022                           ;ADC.c: 152:     read = read << 8;
  5023  0D92  0874               	movf	ADC_read@read,w
  5024  0D93  00F3               	movwf	??_ADC_read+1
  5025  0D94  01F2               	clrf	??_ADC_read
  5026  0D95  0872               	movf	??_ADC_read,w
  5027  0D96  00F4               	movwf	ADC_read@read
  5028  0D97  0873               	movf	??_ADC_read+1,w
  5029  0D98  00F5               	movwf	ADC_read@read+1
  5030  0D99                     i1l1728:
  5031                           
  5032                           ;ADC.c: 153:     read |= ADRESL;
  5033  0D99  1683               	bsf	3,5	;RP0=1, select bank1
  5034  0D9A  1303               	bcf	3,6	;RP1=0, select bank1
  5035  0D9B  081E               	movf	30,w	;volatile
  5036  0D9C  00F2               	movwf	??_ADC_read
  5037  0D9D  01F3               	clrf	??_ADC_read+1
  5038  0D9E  0872               	movf	??_ADC_read,w
  5039  0D9F  04F4               	iorwf	ADC_read@read,f
  5040  0DA0  0873               	movf	??_ADC_read+1,w
  5041  0DA1  04F5               	iorwf	ADC_read@read+1,f
  5042  0DA2                     i1l1730:
  5043                           
  5044                           ;ADC.c: 155:     return read;
  5045  0DA2  0875               	movf	ADC_read@read+1,w
  5046  0DA3  00F1               	movwf	?_ADC_read+1
  5047  0DA4  0874               	movf	ADC_read@read,w
  5048  0DA5  00F0               	movwf	?_ADC_read
  5049  0DA6                     i1l56:
  5050  0DA6  0008               	return
  5051  0DA7                     __end_of_ADC_read:
  5052  007E                     btemp	set	126	;btemp
  5053  007E                     wtemp0	set	126
  5054                           
  5055                           	psect	idloc
  5056                           
  5057                           ;Config register IDLOC0 @ 0x2000
  5058                           ;	unspecified, using default values
  5059  2000                     	org	8192
  5060  2000  3FFF               	dw	16383
  5061                           
  5062                           ;Config register IDLOC1 @ 0x2001
  5063                           ;	unspecified, using default values
  5064  2001                     	org	8193
  5065  2001  3FFF               	dw	16383
  5066                           
  5067                           ;Config register IDLOC2 @ 0x2002
  5068                           ;	unspecified, using default values
  5069  2002                     	org	8194
  5070  2002  3FFF               	dw	16383
  5071                           
  5072                           ;Config register IDLOC3 @ 0x2003
  5073                           ;	unspecified, using default values
  5074  2003                     	org	8195
  5075  2003  3FFF               	dw	16383
  5076                           
  5077                           	psect	config
  5078                           
  5079                           ;Config register CONFIG1 @ 0x2007
  5080                           ;	Oscillator Selection bits
  5081                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5082                           ;	Watchdog Timer Enable bit
  5083                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5084                           ;	Power-up Timer Enable bit
  5085                           ;	PWRTE = OFF, PWRT disabled
  5086                           ;	RE3/MCLR pin function select bit
  5087                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5088                           ;	Code Protection bit
  5089                           ;	CP = OFF, Program memory code protection is disabled
  5090                           ;	Data Code Protection bit
  5091                           ;	CPD = OFF, Data memory code protection is disabled
  5092                           ;	Brown Out Reset Selection bits
  5093                           ;	BOREN = OFF, BOR disabled
  5094                           ;	Internal External Switchover bit
  5095                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5096                           ;	Fail-Safe Clock Monitor Enabled bit
  5097                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5098                           ;	Low Voltage Programming Enable bit
  5099                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5100                           ;	In-Circuit Debugger Mode bit
  5101                           ;	DEBUG = 0x1, unprogrammed default
  5102  2007                     	org	8199
  5103  2007  20D4               	dw	8404
  5104                           
  5105                           ;Config register CONFIG2 @ 0x2008
  5106                           ;	Brown-out Reset Selection bit
  5107                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5108                           ;	Flash Program Memory Self Write Enable bits
  5109                           ;	WRT = OFF, Write protection off
  5110  2008                     	org	8200
  5111  2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      52
    BANK1            80     18      26
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    _main->_Voltage_val
    _setup->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Voltage_val->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3315
                                             16 BANK1      2     2      0
                          _ADC_start
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                        _Voltage_val
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     306
                           _Lcd_Init
                           _init_ADC
                       _init_osc_MHz
 ---------------------------------------------------------------------------------
 (2) _init_osc_MHz                                         3     3      0      22
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _init_ADC                                             5     3      2     218
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      66
                                              4 BANK1      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Voltage_val                                          7     3      4    2248
                                              9 BANK1      7     3      4
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     904
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     908
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     365
                                              3 BANK1      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 BANK1      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     330
                                              4 BANK1      4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              1 BANK1      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_start                                            3     3      0      22
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  8     8      0    3822
                                             37 BANK0      8     8      0
                           _ADC_read
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             11     7      4     381
                                             26 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             26    18      8    2873
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (6) _ADC_read                                             6     4      2      48
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_start
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   _Voltage_val
     ___awdiv
     ___awmod
   _setup
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _init_ADC
     _init_osc_MHz

 _isr (ROOT)
   _ADC_read
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      5C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      34       5       65.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     12      1A       7       32.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      5C      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Fri Jul 29 10:12:45 2022

                       pc 0002                        l30 0FE3                        l31 0FE5  
                      l23 0FC9                        l32 0FFF                        l25 0FCB  
                      l26 0FCD                        l28 0FE1                        l53 0763  
                      l29 0FF7                        l38 0762                        l70 07FF  
                      l82 0ECB                        l67 0D6C                        l91 0E1C  
                      l85 0D88                        l79 0DCC              ___awdiv@sign 00A6  
                      fsr 0004       __Umul8_16@word_mpld 0076                       l172 0E4C  
                     l190 0E7F                       l442 0F26                       l178 0602  
                     l429 0F8F                       _RC7 003F                       u920 0F2E  
                     u921 0F2D                       u930 0F39                       u931 0F38  
                     u940 0F4A                       u941 0F49                       u960 0F5C  
                     u961 0F5B                       u955 0F4E                       u980 0F6D  
                     u981 0F6C                       u975 0F5D                       u985 0F69  
                     u995 0F75                       _isr 046A                       fsr0 0004  
            ___awmod@sign 00A6              ___flmul@aexp 0032              ___flmul@bexp 0033  
            ___flmul@sign 002D              ___flmul@temp 0038              ___flmul@prod 0034  
            ___fltol@exp1 0044                      l2030 038B                      l2200 0FBB  
                    l2040 03B0                      l2032 0390                      l2202 0FD9  
                    l2050 0409                      l2042 03B6                      l2034 039A  
                    l1500 07FC                      l2204 0FEF                      l2060 0448  
                    l2052 0412                      l2044 03F4                      l2036 03A0  
                    l2206 0736                      l1510 0FA5                      l1502 0F93  
                    l2062 0451                      l2054 041B                      l2046 03FA  
                    l2038 03A6                      l1600 0F44                      l1512 0FAC  
                    l1520 0FCF                      l1504 0F94                      l2064 045A  
                    l2056 0439                      l2048 0403                      l1610 0F5C  
                    l1602 0F4A                      l1506 0F99                      l2066 0460  
                    l2058 0442                      l1700 06FD                      l1612 0F6D  
                    l1604 0F4D                      l1620 0F81                      l1524 0FE7  
                    l1508 0F9E                      l1516 0FB3                      l1710 0720  
                    l1702 0704                      l1622 0F86                      l1614 0F73  
                    l1606 0F54                      l1630 0ECF                      l1550 0EA0  
                    l1712 0727                      l1704 070B                      l1560 0D7E  
                    l1624 0F8B                      l1616 0F74                      l1608 0F58  
                    l1640 0EE3                      l1632 0ED3                      l1552 0EA6  
                    l1544 0E80                      l1706 0712                      l1490 0D68  
                    l1562 0D85                      l1554 0D70                      l1618 0F7B  
                    l1650 0EFB                      l1642 0EE9                      l1634 0ED8  
                    l1546 0E86                      l1570 0E5C                      l1708 0719  
                    l1716 072C                      l1492 07E3                      l1740 0DBB  
                    l1556 0D73                      l1660 0F1D                      l1652 0F05  
                    l1644 0EEC                      l1636 0EDA                      l1628 0ECC  
                    l1548 0E90                      l1572 0E61                      l1564 0E50  
                    l1494 07E6                      l1742 0DC1                      l1734 0DAA  
                    l1558 0D7B                      l1750 0E07                      l1590 0F33  
                    l1662 0F22                      l1654 0F0B                      l1646 0EF3  
                    l1638 0EDE                      l2198 0E71                      l1574 0E64  
                    l1566 0E52                      l1680 06C0                      l1496 07EE  
                    l1744 0DC6                      l1736 0DAF                      l1752 0E0F  
                    l1592 0F35                      l1584 0F27                      l1656 0F12  
                    l1648 0EF7                      l1568 0E57                      l1760 0E35  
                    l1690 06DA                      l1498 07F1                      l1738 0DB4  
                    l1746 0DF7                      l1594 0F39                      l1586 0F2A  
                    l1658 0F18                      l1578 0E69                      l1762 0E3B  
                    l1754 0E1D                      l1692 06E1                      l1684 06C7  
                    l1748 0DFA                      l1596 0F3E                      l1588 0F2E  
                    l1780 05AC                      l1772 0546                      l1764 0E45  
                    l1756 0E21                      l1694 06E8                      l1686 06CC  
                    l1598 0F42                      l1782 05FE                      l1774 054E  
                    l1766 0E4A                      l1758 0E24                      l1696 06EF  
                    l1688 06D3                      l1776 05A0                      l1768 0E4B  
                    l1698 06F6                      l1778 05A5                      ?_isr 0070  
                    STR_1 0806                      STR_2 0815                      STR_3 0815  
                    STR_4 0815                      STR_5 0815                      STR_6 0815  
                    STR_7 0815                      u1000 0F81                      u1001 0F80  
                    u1010 0F86                      u1011 0F85                      u1100 0F1D  
                    u1020 0ED3                      u1101 0F1C                      u1021 0ED2  
                    u1030 0EDE                      u1031 0EDD                      u1040 0EE9  
                    u1041 0EE8                      u1140 06C6                      u1060 0EFB  
                    u1141 06C5                      u1061 0EFA                      u1150 0DAF  
                    u1070 0F05                      u1151 0DAE                      u1071 0F04  
                    u1055 0EED                      u1160 0DC1                      u1161 0DC0  
                    u1170 0E1C                      u1090 0F18                      u1171 0E1B  
                    u1091 0F17                      u1075 0F01                      u1180 054E  
                    u1085 0F0C                      u1181 054D                      u1190 05AC  
                    u1191 05AB                      u1837 03AC                      u1847 03BC  
                    u1857 0E8C                      u1867 0E9C                      u1877 0EAA  
                    u1887 0D82                      u1897 07F7                      i1l56 0DA6  
       ?_Lcd_Write_String 0070                      _main 038B                      btemp 007E  
                    start 0010        ??_Lcd_Write_String 00A3          __end_of_ADC_read 0DA7  
         __end_of_Lcd_Cmd 0800                     ??_isr 0045             ___fltol@sign1 0043  
                   ?_main 0070           __end_of___awdiv 0F90           __end_of___awmod 0F27  
         __end_of___flmul 038B           __end_of___fltol 07E0                     _ANSEL 0188  
         ___awdiv@divisor 00A0                     i1l161 053D                     i1l462 07DF  
                   i1l711 06BC                     i1l472 07DF                     i1l722 0686  
                   i1l723 0692                     i1l715 066A                     i1l469 07CA  
                   i1l709 0625                     i1l671 02F6                     i1l665 038A  
                   i1l684 0DE1                     i1l677 037E                     i1l686 0DF3  
         ___awdiv@counter 00A5                     _PORTA 0005                     _PORTC 0007  
                   _PORTD 0008                     _TRISA 0085                     _TRISC 0087  
                   _TRISD 0088                     _setup 0E1D                     pclath 000A  
                   status 0003                     wtemp0 007E         __end_of_ADC_start 0764  
        __end_of_Lcd_Init 0ECC            init_ADC@adc_cs 00A4          __end_of_Lcd_Port 0D6D  
         __initialization 0013              __end_of_main 046A                    ??_main 00B0  
       init_ADC@vref_plus 00A0                    _ADRESH 001E                    _ADRESL 009E  
        ___awdiv@dividend 00A2                    ?_setup 0070                    _ANSELH 0189  
                  i1l2000 06B3                    i1l2002 06B4                    i1l2020 04AF  
                  i1l2012 046A                    i1l2022 04DA                    i1l2014 046E  
                  u111_20 0DDB                    i1l2024 04E5                    i1l2016 0477  
                  u111_21 0DDA                    i1l2026 0512                    i1l2018 0482  
                  i1l2028 053C                    u120_20 0771                    u120_21 0770  
                  u112_25 0DE2                    u113_20 0DEF                    i1l1800 079A  
                  u121_20 0788                    u113_21 0DEE                    i1l1730 0DA2  
                  i1l1722 0D89                    i1l1802 079E                    i1l1810 07B8  
                  i1l1724 0D89                    i1l1900 0254                    i1l1820 07D4  
                  u121_25 0783                    i1l1726 0D92                    i1l1670 0DD7  
                  i1l1910 02C2                    i1l1902 027A                    i1l1830 003C  
                  i1l1822 002A                    i1l1728 0D99                    i1l1672 0DDB  
                  i1l1920 02DA                    i1l1912 02C6                    i1l1904 02A2  
                  i1l1840 0058                    i1l1832 0041                    u130_20 003B  
                  i1l1824 0031                    i1l1816 07BF                    i1l1808 07A6  
                  u122_20 079E                    u130_21 003A                    u122_21 079D  
                  i1l1674 0DEA                    i1l1666 0DCE                    i1l1930 02FB  
                  i1l1922 02DB                    i1l1914 02C7                    i1l1906 02AB  
                  i1l1850 006D                    i1l1842 005D                    i1l1834 0046  
                  i1l1826 0037                    i1l1818 07CF                    i1l1676 0DEF  
                  i1l1668 0DD0                    i1l1932 0300                    i1l1940 0331  
                  i1l1924 02DF                    i1l1916 02D0                    i1l1908 02B9  
                  i1l1860 0089                    i1l1852 0072                    i1l1844 0063  
                  i1l1836 004E                    i1l1828 003B                    i1l1950 0364  
                  i1l1942 033E                    i1l1934 030E                    i1l1926 02F3  
                  i1l1918 02D6                    i1l1870 00B4                    i1l1862 008E  
                  i1l1854 007A                    i1l1846 0067                    i1l1838 0050  
                  i1l1952 0372                    i1l1944 0349                    i1l1936 0312  
                  i1l1880 0151                    i1l1872 00D1                    i1l1856 007C  
                  i1l1848 0068                    u131_20 0041                    u123_20 07A5  
                  i1l1792 077A                    u131_21 0040                    u123_21 07A4  
                  i1l1954 0376                    i1l1946 0358                    i1l1938 032B  
                  i1l1890 01B4                    i1l1882 015A                    i1l1874 00ED  
                  i1l1866 0097                    i1l1858 0084                    i1l1794 078F  
                  i1l1786 0764                    i1l1970 062D                    i1l1962 0604  
                  i1l1956 0377                    i1l1948 0362                    i1l1892 01CD  
                  i1l1884 016A                    i1l1876 0119                    i1l1868 00A7  
                  i1l1796 0790                    i1l1788 0771                    i1l1980 064F  
                  i1l1964 0609                    i1l1958 0382                    i1l1894 01EA  
                  i1l1886 0187                    i1l1878 0135                    i1l1798 0798  
                  i1l1990 0680                    i1l1982 0653                    i1l1974 0636  
                  i1l1966 060D                    i1l1896 0217                    i1l1888 0197  
                  u132_20 0046                    i1l1992 068A                    i1l1984 0661  
                  i1l1976 063B                    i1l1968 061D                    u140_21 0127  
                  u132_21 0045                    i1l1898 0227                    u140_22 012E  
                  i1l1994 0694                    i1l1986 0671                    i1l1978 0648  
                  u140_23 0135                    i1l1996 06AA                    i1l1988 067C  
                  u124_25 07A7                    i1l1998 06AF                    u133_20 0067  
                  u125_20 07B7                    u141_21 0143                    u133_21 0066  
                  u125_21 07B6                    u141_22 014A                    u141_23 0151  
                  u134_20 006D                    u126_20 07BE                    u150_21 026C  
                  u134_21 006C                    u126_21 07BD                    u150_22 0273  
                  u150_23 027A                    u142_25 0153                    u151_20 0288  
                  u135_20 0072                    u143_21 0179                    u135_21 0071  
                  u143_22 0180                    u143_23 0187                    u151_25 0283  
                  u127_25 07C1                    u160_20 02FA                    u136_20 0089  
                  u128_20 07CF                    u160_21 02F9                    u152_21 0294  
                  u144_21 01A6                    u136_21 0088                    u128_21 07CE  
                  u152_22 029B                    u144_22 01AD                    u152_23 02A2  
                  u144_23 01B4                    u161_20 0300                    u137_20 008E  
                  u129_20 07D4                    u161_21 02FF                    u137_21 008D  
                  u129_21 07D3                    u153_25 02A4                    u145_25 01B6  
                  u162_20 0312                    u162_21 0311                    u146_21 01DC  
                  u138_21 00DF                    u146_22 01E3                    u138_22 00E6  
                  u146_23 01EA                    u138_23 00ED                    u154_25 02BB  
                  u170_25 0640                    u163_20 0321                    u155_20 02C6  
                  u171_20 064E                    u155_21 02C5                    u147_21 0209  
                  u139_21 00FB                    u171_21 064D                    u147_22 0210  
                  u139_22 0102                    u147_23 0217                    u139_23 0109  
                  u163_25 031C                    u164_20 033E                    u180_20 06B3  
                  u164_21 033D                    u148_21 0236                    u180_21 06B2  
                  u148_22 023D                    u148_23 0244                    u164_25 033A  
                  u156_25 02C9                    u172_25 0662                    u165_20 0358  
                  u157_20 02DA                    u149_20 0260                    u173_20 0670  
                  u181_20 046E                    u165_21 0357                    u157_21 02D9  
                  u173_21 066F                    u181_21 046D                    u165_25 0354  
                  u149_25 025B                    u166_20 0376                    u158_20 02DF  
                  u182_20 0477                    u166_21 0375                    u158_21 02DE  
                  u182_21 0476                    u174_25 0675                    u159_20 02F3  
                  u175_20 0680                    u167_20 0609                    u159_21 02F2  
                  u175_21 067F                    u167_21 0608                    u176_20 0686  
                  u168_20 060D                    u176_21 0685                    u168_21 060C  
                  u177_20 068A                    u169_20 062D                    u177_21 0689  
                  u169_21 062C                    u178_20 069F                    u178_25 069A  
                  u179_20 06AF                    u179_21 06AE                 ??_Lcd_Cmd 00A1  
        __end_of___xxtofl 06BD             ?_init_osc_MHz 0070                 ??___awdiv 00A4  
               ??___awmod 00A4                 ??___flmul 0028                 ??___fltol 003E  
        __end_of_init_ADC 1000          init_osc_MHz@freq 00A2          ___awdiv@quotient 00A7  
         ___awmod@divisor 00A0           ___awmod@counter 00A5                    saved_w 007E  
               ?_ADC_read 0070           Lcd_Set_Cursor@a 00A6           Lcd_Set_Cursor@b 00A4  
            ___xxtofl@arg 007A              ___xxtofl@exp 0079              ___xxtofl@val 0070  
 __end_of__initialization 0026            ??_init_osc_MHz 00A0                ___fltol@f1 003A  
          __pcstackCOMMON 0070             __end_of_setup 0E4D            _Lcd_Set_Cursor 0DA7  
              ??_ADC_read 0072                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
                 ??_setup 00A6                __pbssBANK0 004D                __pbssBANK1 00B2  
           ??_Voltage_val 00AD         __end_of__Umul8_16 0DF4                __pmaintext 038B  
      init_ADC@vref_minus 00A1                __pintentry 0004    __end_of_Lcd_Set_Cursor 0DCD  
               ?___xxtofl 0070                ??_Lcd_Init 00A4                ??_Lcd_Port 00A0  
         _Digits_Voltage1 00B6           _Digits_Voltage2 00B2                __stringtab 0800  
               ?_init_ADC 00A0            _Lcd_Write_Char 0D6D                   _Lcd_Cmd 07E0  
               _ADC_start 06BD                   ___awdiv 0F27       __end_of_Voltage_val 0603  
                 ___awmod 0ECC                   ___flmul 002A                   ___fltol 0764  
         ?_Lcd_Set_Cursor 00A4                   __ptext1 0E1D                   __ptext2 0E4D  
                 __ptext3 0F90                   __ptext4 0E80                   __ptext5 0546  
                 __ptext6 0ECC                   __ptext7 0F27                   __ptext8 0DF4  
                 __ptext9 0D6D      __end_of_init_osc_MHz 0E80          ADC_start@channel 00A2  
              ??___xxtofl 0074          ___awmod@dividend 00A2    __end_of_Lcd_Write_Char 0D89  
    end_of_initialization 0026                ??_init_ADC 00A2                ?_ADC_start 0070  
               Lcd_Port@a 00A0                 _PORTCbits 0007             ___xxtofl@sign 0078  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 00A5         Lcd_Write_String@i 00A3  
             ___flmul@grs 002E               _Voltage_val 0546              ADC_read@read 0074  
        _Lcd_Write_String 0DF4       start_initialization 0013               __end_of_isr 0546  
             ??_ADC_start 00A0                 __Umul8_16 0DCD           _ADC_lecture_val 0051  
         Lcd_Write_Char@a 00A2                 ___flmul@a 0024                 ___flmul@b 0020  
               ___latbits 0002             __pcstackBANK0 0020             __pcstackBANK1 00A0  
                ?_Lcd_Cmd 0070              _init_osc_MHz 0E4D          ??_Lcd_Set_Cursor 00A5  
                ?___awdiv 00A0                  ?___awmod 00A0                  ?___flmul 0020  
                ?___fltol 003A                ?__Umul8_16 0070                 __pstrings 0800  
                _ADC_read 0D89         interrupt_function 0004            _ADC_channel_00 004F  
          _ADC_channel_01 004D                  _PIE1bits 008C                  Lcd_Cmd@a 00A3  
                _PIR1bits 000C                _ADCON0bits 001F               __stringbase 0805  
              _ADCON1bits 009F          ??_Lcd_Write_Char 00A1                  _Lcd_Init 0E80  
                _Lcd_Port 0D65  __end_of_Lcd_Write_String 0E1D              ?_Voltage_val 00A9  
             ??__Umul8_16 0072        __end_of__stringtab 0806                  ___xxtofl 0603  
                _isr$1002 0049                  __ptext10 0DA7                  __ptext11 07E0  
                __ptext12 0D65                  __ptext13 06BD                  __ptext14 046A  
                __ptext15 0603                  __ptext16 0764                  __ptext17 002A  
                __ptext18 0DCD                  __ptext19 0D89                  _init_ADC 0F90  
      Voltage_val@ADC_val 00A9                _INTCONbits 000B          _ADC_channel_flag 0053  
                intlevel1 0000        Voltage_val@channel 00AB                 stringcode 0800  
              _OSCCONbits 008F        Lcd_Set_Cursor@temp 00A7    __Umul8_16@multiplicand 0070  
                stringdir 0800                  stringtab 0800      __Umul8_16@multiplier 0078  
       __Umul8_16@product 0074  
